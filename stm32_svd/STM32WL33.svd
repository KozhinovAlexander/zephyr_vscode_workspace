<?xml version='1.0' encoding='UTF-8'?>
<!--
Copyright (c) 2024 STMicroelectronics.

 SPDX-License-Identifier: Apache-2.0

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
  <name>STM32WL33</name>
  <version>1.0</version>
  <description>STM32WL33</description>
  <cpu>
    <name>CM0+</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>32</width>
  <size>0x20</size>
  <resetValue>0x0</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>ADC</name>
      <description>ADC address block description</description>
      <groupName>ADC</groupName>
      <baseAddress>0x41006000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x68</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>ADC</name>
        <description>ADC interrupt</description>
        <value>12</value>
      </interrupt>
      <registers>
        <register>
          <name>VERSION_ID</name>
          <displayName>VERSION_ID</displayName>
          <description>VERSION_ID register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x21</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>VERSION_ID</name>
              <description>VERSION_ID[7:0]: version of the embedded IP.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONF</name>
          <displayName>CONF</displayName>
          <description>CONF register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x20002</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>CONT</name>
              <description>CONT: regular sequence runs continuously when ADC mode is enabled:

0: enable the single conversion: when the sequence is over, the conversion stops

1: enable the continuous conversion: when the sequence is over, the sequence starts again

until the software sets the CTRL.STOP_OP_MODE bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQUENCE</name>
              <description>SEQUENCE: enable the sequence mode (active by default):

0: sequence mode is disabled, only SEQ0 is selected

1: sequence mode is enabled, conversions from SEQ0 to SEQx with x=SEQ_LEN

Note: clearing this bit is equivalent to SEQUENCE=1 and SEQ_LEN=0000. Ideally, this bit can

be kept high as redundant with keeping high and setting SEQ_LEN=0000.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ_LEN</name>
              <description>SEQ_LEN[3:0]: number of conversions in a regular sequence:

0000: 1 conversion, starting from SEQ0

0001: 2 conversions, starting from SEQ0

...

1111: 16 conversions, starting from SEQ0</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_SYNCHRO_ENA</name>
              <description>SMPS_SYNCHRO_ENA: synchronize the ADC start conversion with a pulse generated by the

SMPS:

0: SMPS synchronization is disabled for all ADC clock frequencies

1: SMPS synchronization is enabled (only when ADC clock is 8 MHz or 16 MHz)

Note: SMPS_SYNCHRO_ENA must be 0 when the ADC analog clock is 32 MHz or when

PWRC_CR5.NOSMPS = 1.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_RATE_LSB</name>
              <description>SAMPLE_RATE_LSB: Sample Rate LSB

This field is an extension of SAMPLE_RATE definition in bits 12,11 of CONF register. It

impacts the conversion rate of ADC (F_ADC). See SAMPLE_RATE bits for the full description.

When this field is set to a value different than 0, SMPS synchronization is not feasible.

This value is hidden to the user</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_RATE</name>
              <description>SAMPLE_RATE[1:0]: conversion rate of ADC (F_ADC):

F_ADC = F_ADC_CLK/(16 + 16*SAMPLE_RATE_MSB + 4*SAMPLE_RATE + SAMPLE_RATE_LSB),where

F_ADC_CLK is the analog ADC clock frequency. By default F_ADC_CLK is 16MHz frequency.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_DS_ENA</name>
              <description>DMA_DS_EN: enable the DMA mode for the Down Sampler data path:

0: DMA mode is disabled

1: DMA mode is enabled</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVR_DS_CFG</name>
              <description>OVR_DS_CFG: Down Sampler overrun configuration:

0: the previous data is kept, the new one is lost

1: the previous data is lost, the new one is kept</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INVERT_SN</name>
              <description>BIT_INVERT_SN: invert bit to bit the ADC data output (1's complement) when a single

negative input is connected to the ADC:

0: no inversion (default)

1: enable the inversion</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIT_INVERT_DIFF</name>
              <description>BIT_INVERT_DIFF: invert bit to bit the ADC data output (1's complement) when a differential

input is connected to the ADC:

0: no inversion (default)

1: enable the inversion</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_CONT_1V2</name>
              <description>ADC_CONT_1V2: select the input sampling method:

0: sampling only at conversion start (default)

1: sampling starts at the end of conversion</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMPLE_RATE_MSB</name>
              <description>SAMPLE_RATE_MSB: Sample Rate MSB

This field is an extension of SAMPLE_RATE definition in bits 12,11 of CONF register. It

impacts the conversion rate of ADC (F_ADC). See SAMPLE_RATE bits for the full description</description>
              <bitOffset>21</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <displayName>CTRL</displayName>
          <description>CTRL register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>ADC_ON_OFF</name>
              <description>ADC_ON_OFF:

0: power off the ADC

1: power on the ADC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START_CONV</name>
              <description>START_CONV (1): generate a start pulse to initiate an ADC conversion:

0: no effect

1: start the ADC conversion

Note: this bit is set by software and cleared by hardware.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STOP_OP_MODE</name>
              <description>STOP_OP_MODE (1): stop the on-going OP_MODE (ADC mode, Analog audio mode, Full

mode):

0: no effect

1: stop on-going ADC mode

Note: this bit is set by software and cleared by hardware.

When setting the STOP_MODE_OP, the user has to wait around 10 us before to start a new ADC conversion by setting the START_CONV bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TEST_MODE</name>
              <description>TEST_MODE: select the functional or the test mode of the ADC:

0: functional mode (one of the four main functional modes is used)

1: test mode (for debug, test, calibration)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWITCH</name>
          <displayName>SWITCH</displayName>
          <description>SWITCH register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SE_VIN_0</name>
              <description>SE_VIN_0[1:0]: input voltage for VINM[0] / VINP[0]-VINM[0]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_1</name>
              <description>SE_VIN_1[1:0]: input voltage for VINM[1] / VINP[1]-VINM[1]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_2</name>
              <description>SE_VIN_2[1:0]: input voltage for VINM[2] / VINP[2]-VINM[2]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_3</name>
              <description>SE_VIN_3[1:0]: input voltage for VINM[3] / VINP[3]-VINM[3]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_4</name>
              <description>SE_VIN_4[1:0]: input voltage for VINP[0]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_5</name>
              <description>SE_VIN_5[1:0]: input voltage for VINP[1]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_6</name>
              <description>SE_VIN_6[1:0]: input voltage for VINP[2]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SE_VIN_7</name>
              <description>SE_VIN_7[1:0]: input voltage for VINP[3]

00: Vinput = 1.2V

01: reserved (not used for this cut)

10: Vinput = 2.4V

11: Vinput = 3.6V</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_CONF</name>
          <displayName>DS_CONF</displayName>
          <description>DS_CONF register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DS_RATIO</name>
              <description>DS_RATIO[2:0]: program the Down Sampler ratio (N factor)

000: ratio = 1, no down sampling (default)

001: ratio = 2

010: ratio = 4

011: ratio = 8

100: ratio = 16

101: ratio = 32

110: ratio = 64

111: ratio = 128</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_WIDTH</name>
              <description>DS_WIDTH[2:0]: program the Down Sampler width of data output (DSDTATA)

000: DS_DATA output on 12-bit (default)

001: DS_DATA output on 13-bit

010: DS_DATA output on 14-bit

011: DS_DATA output on 15-bit

100: DS_DATA output on 16-bit

1xx: reserved</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQ_1</name>
          <displayName>SEQ_1</displayName>
          <description>SEQ_1 register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SEQ0</name>
              <description>SEQ0[3:0]: channel number code for first conversion of the sequence

0000: VINM[0] to ADC single negative input

0001: VINM[1] to ADC single negative input

0010: VINM[2] to ADC single negative input

0011: VINM[3] to ADC single negative input

0100: VINP[0] to ADC single positive input

0101: VINP[1] to ADC single positive input

0110: VINP[2] to ADC single positive input

0111: VINP[3] to ADC single positive input

1000: VINP[0]-VINM[0] to ADC differential input

1001: VINP[1]-VINM[1] to ADC differential input

1010: VINP[2]-VINM[2] to ADC differential input

1011: VINP[3]-VINM[3] to ADC differential input

1100: VBAT - Battery level detector

1101: Temperature sensor

111x: reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ1</name>
              <description>SEQ1[3:0]: channel number code for second conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ2</name>
              <description>SEQ2[3:0]: channel number code for 3rd conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ3</name>
              <description>SEQ3[3:0]: channel number code for 4th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ4</name>
              <description>SEQ4[3:0]: channel number code for 5th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ5</name>
              <description>SEQ5[3:0]: channel number code for 6th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ6</name>
              <description>SEQ6[3:0]: channel number code for 7th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ7</name>
              <description>SEQ7[3:0]: channel number code for 8th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQ_2</name>
          <displayName>SEQ_2</displayName>
          <description>SEQ_2 register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SEQ8</name>
              <description>SEQ8[3:0]: channel number code for 9th conversion of the sequence

0000: VINM[0] to ADC single negative input

0001: VINM[1] to ADC single negative input

0010: VINM[2] to ADC single negative input

0011: VINM[3] to ADC single negative input

0100: VINP[0] to ADC single positive input

0101: VINP[1] to ADC single positive input

0110: VINP[2] to ADC single positive input

0111: VINP[3] to ADC single positive input

1000: VINP[0]-VINM[0] to ADC differential input

1001: VINP[1]-VINM[1] to ADC differential input

1010: VINP[2]-VINM[2] to ADC differential input

1011: VINP[3]-VINM[3] to ADC differential input

1100: VBAT - Battery level detector

1101: Temperature sensor

111x: reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ9</name>
              <description>SEQ9[3:0]: channel number code for 10th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ10</name>
              <description>SEQ10[3:0]: channel number code for 11th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ11</name>
              <description>SEQ11[3:0]: channel number code for 12th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ12</name>
              <description>SEQ12[3:0]: channel number code for 13th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ13</name>
              <description>SEQ13[3:0]: channel number code for 14th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ14</name>
              <description>SEQ14[3:0]: channel number code for 15th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ15</name>
              <description>SEQ15[3:0]: channel number code for 16th conversion of the sequence.

See SEQ0 for code detail.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_1</name>
          <displayName>COMP_1</displayName>
          <description>COMP_1 register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00555</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN1</name>
              <description>GAIN1[11:0]: first calibration point: gain AUXADC_GAIN_1V2[11:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET1</name>
              <description>OFFSET1[7:0]: first calibration point</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_2</name>
          <displayName>COMP_2</displayName>
          <description>COMP_2 register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00555</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN2</name>
              <description>GAIN2[11:0]: second calibration point: gain AUXADC_GAIN_1V2[11:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET2</name>
              <description>OFFSET2[7:0]: second calibration point</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_3</name>
          <displayName>COMP_3</displayName>
          <description>COMP_3 register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00555</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN3</name>
              <description>GAIN3[11:0]: third calibration point: gain AUXADC_GAIN_1V2[11:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET3</name>
              <description>OFFSET3[7:0]: third calibration point</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_4</name>
          <displayName>COMP_4</displayName>
          <description>COMP_4 register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00555</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN4</name>
              <description>GAIN4[11:0]: fourth calibration point: gain AUXADC_GAIN_1V2[11:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET4</name>
              <description>OFFSET4[7:0]: fourth calibration point</description>
              <bitOffset>12</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMP_SEL</name>
          <displayName>COMP_SEL</displayName>
          <description>COMP_SEL register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>OFFSET_GAIN0</name>
              <description>OFFSET_GAIN0[1:0]: gain / offset used in ADC single negative mode with Vinput range =

1.2V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN1</name>
              <description>OFFSET_GAIN1[1:0]: gain / offset used in ADC single positive mode with Vinput range =

1.2V. This field also selects the gain/offset for Temperature Sensor input::

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN2</name>
              <description>OFFSET_GAIN2[1:0]: gain / offset used in ADC differential mode with Vinput range = 1.2V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN3</name>
              <description>OFFSET_GAIN3[1:0]: gain / offset used in ADC single negative mode with Vinput range =

2.4V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN4</name>
              <description>OFFSET_GAIN4[1:0]: gain / offset used in ADC single positive mode with Vinput range =

2.4V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN5</name>
              <description>OFFSET_GAIN5[1:0]: gain / offset used in ADC differential mode with Vinput range = 2.4V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN6</name>
              <description>OFFSET_GAIN6[1:0]: gain / offset used in ADC single negative mode with Vinput range =

3.6V. This field also selects the gain/offset for VBAT input::

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN7</name>
              <description>OFFSET_GAIN7[1:0]: gain / offset used in ADC single positive mode with Vinput range =

3.6V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OFFSET_GAIN8</name>
              <description>OFFSET_GAIN8[1:0]: gain / offset used in ADC differential mode with Vinput range = 3.6V:

00: OFFSET1 and GAIN1 from COMP_1

01: OFFSET2 and GAIN2 from COMP_2

10: OFFSET3 and GAIN3 from COMP_3

11: OFFSET4 and GAIN4 from COMP_4</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WD_TH</name>
          <displayName>WD_TH</displayName>
          <description>WD_TH register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFF0000</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>WD_LT</name>
              <description>WD_LT[11:0]: analog watchdog low level threshold.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WD_HT</name>
              <description>WD_HT[11:0]: analog watchdog high level threshold.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WD_CONF</name>
          <displayName>WD_CONF</displayName>
          <description>WD_CONF register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>AWD_CHX</name>
              <description>AWD_CHX[15:0]: analog watchdog channel selection to define which input channel(s) need

to be guarded by the watchdog.

Bit0: VINM[0] to ADC negative input

Bit1: VINM[1] to ADC negative input

Bit2: VINM[2] to ADC negative input

Bit3: VINM[3] to ADC negative input

Bit4: Not used

Bit5: VBAT to ADC negative input

Bit6: GND to ADC negative input

Bit7: VDDA to ADC negative input

Bit8: VINP[0] to ADC positive input

Bit9: VINP[1] to ADC positive input

Bit10: VINP[2] to ADC positive input

Bit11: VINP[3] to ADC positive input

Bit12: Not used

Bit13: TEMP to ADC positive input

Bit14: GND to ADC positive input

Bit15: VDDA to ADC positive input</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DS_DATAOUT</name>
          <displayName>DS_DATAOUT</displayName>
          <description>DS_DATAOUT register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DS_DATA</name>
              <description>DS_DATA[15:0]: contain the converted data at the output of the Down Sampler.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_STATUS</name>
          <displayName>IRQ_STATUS</displayName>
          <description>IRQ_STATUS register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>EOC_IRQ</name>
              <description>EOC_IRQ (Used in test mode only): set when the ADC conversion is completed.

When read, provide the status of the interrupt:

0: ADC conversion is not completed

1: ADC conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EODS_IRQ</name>
              <description>EODS_IRQ: set when the Down Sampler conversion is completed.

When read, provide the status of the interrupt:

0: Down Sampler conversion is not completed

1: Down Sampler conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOS_IRQ</name>
              <description>EOS_IRQ: set when a sequence of conversion is completed.

When read, provide the status of the interrupt:

0: sequence of conversion is not completed

1: sequence of conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AWD_IRQ</name>
              <description>AWD_IRQ: set when an analog watchdog event occurs.

When read, provide the status of the interrupt:

0: no analog watchdog event occurred

1: analog watchdog event has occurred

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVR_DS_IRQ</name>
              <description>OVR_DS_IRQ: set to indicate a Down Sampler overrun (at least one data is lost)

When read, provide the status of the interrupt:

0: no overrun occurred

1: overrun occurred

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_ENABLE</name>
          <displayName>IRQ_ENABLE</displayName>
          <description>IRQ_ENABLE register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>EOC_IRQ</name>
              <description>EOC_IRQ (Used in test mode only): set when the ADC conversion is completed.

When read, provide the status of the interrupt:

0: ADC conversion is not completed

1: ADC conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EODS_IRQ</name>
              <description>EODS_IRQ: set when the Down Sampler conversion is completed.

When read, provide the status of the interrupt:

0: Down Sampler conversion is not completed

1: Down Sampler conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOS_IRQ</name>
              <description>EOS_IRQ: set when a sequence of conversion is completed.

When read, provide the status of the interrupt:

0: sequence of conversion is not completed

1: sequence of conversion is completed

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AWD_IRQ</name>
              <description>AWD_IRQ: set when an analog watchdog event occurs.

When read, provide the status of the interrupt:

0: no analog watchdog event occurred

1: analog watchdog event has occurred

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVR_DS_IRQ</name>
              <description>OVR_DS_IRQ: set to indicate a Down Sampler overrun (at least one data is lost)

When read, provide the status of the interrupt:

0: no overrun occurred

1: overrun occurred

Writing this bit clears the status of the interrupt:

0: no effect

1: clear the interrupt</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TEST_CONF</name>
          <displayName>TEST_CONF</displayName>
          <description>TEST_CONF register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>ADC_SWITCH_EN</name>
              <description>ADC_SWITCH_EN[15:0]: enable individually each connection of the switching matrix at the

ADC input.

For each bit:

0: switch X is ON

1: switch X is OFF

Bit mapping (corresponding to AUXADC_INSEL_1V2[15:0]):

Bit 0: VINM[0] to ADC negative input

Bit 1: VINM[1] to ADC negative input

Bit 2: VINM[2] to ADC negative input

Bit 3: VINM[3] to ADC negative input

Bit4: GND to ADC negative input

Bit5: VBAT to ADC negative input

Bit6: GND to ADC negative input

Bit7: VDDA to ADC negative input

Bit8: VINP[0] to ADC positive input

Bit9: VINP[1] to ADC positive input

Bit10: VINP[2] to ADC positive input

Bit11: VINP[3] to ADC positive input

Bit12: VBAT to ADC positive input

Bit13: TEMP to ADC positive input

Bit14: GND to ADC positive input

Bit15: VDDA to ADC positive input.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEL_VIN_TYPE</name>
              <description>SEL_VIN_TYPE[1:0]: operation mode of the selected VIN

00: ADC single negative input

01: ADC single positive input

10: ADC differential input mode

11: reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_RUN</name>
              <description>ADC_RUN: Start/stop ADC conversion.

0: stop the ADC conversion,

1: starts the ADC conversion.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_ENABLE</name>
              <description>ADC_ENABLE:

0: disable the ADC (power OFF)

1: enable the ADC (power ON)</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DTB_CONF</name>
          <displayName>DTB_CONF</displayName>
          <description>DTB_CONF register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>ADC_DBG_CONF</name>
              <description>ADC_DBG_CONF[3:0]: use for debug purpose.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DTB_CONF</name>
              <description>ADC_DTB_CONF[1:0]: configure the DTB output.

00: DTB bus is all 0

01: output the ADC_BUSY, ADC_EOC, offset compensation data[11:0] on the ADC_DTB

10: output the DS information on the ADC_DTB

11: select states of the FSM and enable ADC serial output

Note: detailed DTB configurations are available in the Table 38 in IUM</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DTB_SER_SEL</name>
              <description>DTB_SER_SEL: DTB serial output selection when ADC_DB_CONF[1:0]=3d

0: pre down-sampler with offset compensation data

1: post down-sampler data</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FSM_STATE</name>
              <description>FSM_STATE[7:0]: show the state of the state machine.

Bit 0: IDLE

Bit 1: Reserved

Bit 2: ADC setup phase

Bit 3: Reserved

Bit 4: ADC_START_CONV resynchronization

Bit 5: Reserved

Bit 6: ADC mode

Bit 7: sequence mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_CUR_STATE</name>
              <description>FSM_CUR_STATE[2:0]: show the last executed state by the state machine.

000: IDLE mode

001: Reserved

010: ADC setup phase

011: Reserved

100: ADC_START_CONV resynchronization

101: Reserved

110: ADC mode

111: sequence mode</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AES</name>
      <groupName>AES</groupName>
      <baseAddress>0x48900000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x60</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>AES</name>
        <description>AES interrupt</description>
        <value>13</value>
      </interrupt>
      <registers>
        <register>
          <name>AES_CR</name>
          <displayName>AES_CR</displayName>
          <description>AES_CR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: AES IP enable
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATATYPE</name>
              <description>DATATYPE[1:0]: Data type selection
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>MODE[1:0]: AES operating mode
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHMOD_1_0</name>
              <description>CHMOD[1:0]: AES Chaining Mode selection
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCFC</name>
              <description>CCFC: Computation Complete Flag Clear
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRC</name>
              <description>ERRC: Error clear
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCFIE</name>
              <description>CCFIE: CCF Flag Interrupt Enable
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRIE</name>
              <description>ERRIE: Error Interrupt Enable
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAINEN</name>
              <description>DMAINEN: DMA Input Enable
</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAOUTEN</name>
              <description>DMAOUTEN: DMA Output Enable
</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GCMPH</name>
              <description>GCMPH[1:0]: GCM or CCM Phase selection
</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHMOD_2</name>
              <description>CHMOD[2]: Chaining mode selection, bit [2]
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYSIZE</name>
              <description>KEYSIZE: Key Size selection.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NPBLB</name>
              <description>NPBLB: Number of Padding Bytes in Last Block of payload.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_SR</name>
          <displayName>AES_SR</displayName>
          <description>AES_SR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CCF</name>
              <description>CCF: Computation complete flag
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RDERR</name>
              <description>RDERR: Read error flag
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WRERR</name>
              <description>WRERR: Write error flag
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>BUSY: Busy flag
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_DINR</name>
          <displayName>AES_DINR</displayName>
          <description>AES_DINR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DINR</name>
              <description>DINR[x+31:x]: One of four 32-bit words of a 128-bit input data block being written into the peripheral
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_DOUTR</name>
          <displayName>AES_DOUTR</displayName>
          <description>AES_DOUTR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DOUTR</name>
              <description>DOUTR[x+31:x]: One of four 32-bit words of a 128-bit output data block being read from the
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_KEYR0</name>
          <displayName>AES_KEYR0</displayName>
          <description>AES_KEYRx register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>KEY [((32*x)+31):((32*x)+0)]: Cryptographic key, bits  [((32*x)+31):((32*x)+0)]
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_KEYR1</name>
          <displayName>AES_KEYR1</displayName>
          <description>AES_KEYRx register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>KEY [((32*x)+31):((32*x)+0)]: Cryptographic key, bits  [((32*x)+31):((32*x)+0)]
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_KEYR2</name>
          <displayName>AES_KEYR2</displayName>
          <description>AES_KEYRx register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>KEY [((32*x)+31):((32*x)+0)]: Cryptographic key, bits  [((32*x)+31):((32*x)+0)]
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_KEYR3</name>
          <displayName>AES_KEYR3</displayName>
          <description>AES_KEYRx register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>KEY [((32*x)+31):((32*x)+0)]: Cryptographic key, bits  [((32*x)+31):((32*x)+0)]
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_IVR0</name>
          <displayName>AES_IVR0</displayName>
          <description>AES_IVRx register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IVI</name>
              <description>IVI [((32*x)+31):((32*x)+0)]: Initialization vector register (LSB IVR[((32*x)+31):((32*x)+0)])
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_IVR1</name>
          <displayName>AES_IVR1</displayName>
          <description>AES_IVRx register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IVI</name>
              <description>IVI [((32*x)+31):((32*x)+0)]: Initialization vector register (LSB IVR[((32*x)+31):((32*x)+0)])
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_IVR2</name>
          <displayName>AES_IVR2</displayName>
          <description>AES_IVRx register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IVI</name>
              <description>IVI [((32*x)+31):((32*x)+0)]: Initialization vector register (LSB IVR[((32*x)+31):((32*x)+0)])
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AES_IVR3</name>
          <displayName>AES_IVR3</displayName>
          <description>AES_IVRx register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IVI</name>
              <description>IVI [((32*x)+31):((32*x)+0)]: Initialization vector register (LSB IVR[((32*x)+31):((32*x)+0)])
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CRC</name>
      <groupName>CRC</groupName>
      <baseAddress>0x48200000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x18</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CRC_DR</name>
          <displayName>CRC_DR</displayName>
          <description>CRC_DR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DR</name>
              <description>Data register bits.                                                                                                                                                                                                                    
This register is used to write new data to the CRC calculator. It holds the previous CRC calculation result when it is read.
If the data size is less than 32 bits, the least significant bits are used to write/read the
correct value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_IDR</name>
          <displayName>CRC_IDR</displayName>
          <description>CRC_IDR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IDR</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_CR</name>
          <displayName>CRC_CR</displayName>
          <description>CRC_CR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RESET</name>
              <description>RESET bit
This bit is set by software to reset the CRC calculation unit and set the data register to the value
stored in the CRC_INIT register. This bit can only be set, it is automatically cleared by hardware</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POLYSIZE</name>
              <description>Polynomial size
These bits control the size of the polynomial.
-00: 32 bit polynomial
-01: 16 bit polynomial
-10: 8 bit polynomial
-11: 7 bit polynomial</description>
              <bitOffset>3</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REV_IN</name>
              <description>Reverse input data
These bits control the reversal of the bit order of the input data
-00: Bit order not affected
-01: Bit reversal done by byte
-10: Bit reversal done by half-word
-11: Bit reversal done by word</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REV_OUT</name>
              <description>Reverse output data
This bit controls the reversal of the bit order of the output data.
-0: Bit order not affected
-1: Bit-reversed output format</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_INIT</name>
          <displayName>CRC_INIT</displayName>
          <description>CRC_INIT register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>INIT</name>
              <description>Programmable initial CRC value
This register is used to write the CRC initial value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_POL</name>
          <displayName>CRC_POL</displayName>
          <description>CRC_POL register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x04C11DB7</resetValue>
          <fields>
            <field>
              <name>POL</name>
              <description>POL[31:0]: Programmable polynomial
This register is used to write the coefficients of the polynomial to be used for CRC calculation.
If the polynomial size is less than 32 bits, the least significant bits have to be used to program the
correct value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>COMP</name>
      <description>COMP address block description</description>
      <groupName>COMP</groupName>
      <baseAddress>0x40009000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>COMP</name>
        <description>Comp interrupt through SYSCFG</description>
        <value>19</value>
      </interrupt>
      <registers>
        <register>
          <name>CSR</name>
          <displayName>CSR</displayName>
          <description>CSR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Comparator enable bit

This bit is set and cleared by software (only if LOCK not set). It switches on Comparator.

0: Comparator switched OFF

1: Comparator switched ON</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PWRMODE</name>
              <description>PWRMODE[1:0]: Power Mode of the comparator

These bits are set and cleared by software (only if LOCK not set). They control the

power/speed of the Comparator.

00:High speed

01 or 10:Medium speed

11:Ultra low power</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INMSEL</name>
              <description>INMSEL: Comparator input minus selection bits

These bits are set and cleared by software (only if LOCK not set). They select which input is

connected to the input minus of comparator.

000: 1/4 VREFINT

001: 1/2 VREFINT

010: 3/4VREFINT

011: VREFINT

100: DAC OUT

101: PA13

110: PB0

111: PB3</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INPSEL</name>
              <description>INPSEL[1:0]: Comparator input plus selection bit

This bit is set and cleared by software (only if LOCK not set).

00: PA14

01: PB1

1x: PB2</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POLARITY</name>
              <description>POLARITY: Comparator polarity selection bit

This bit is set and cleared by software (only if LOCK not set). It inverts Comparator polarity.

0: Comparator output value not inverted

1: Comparator output value inverted</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HYST</name>
              <description>HYST[1:0]: Comparator hysteresis selection bits

These bits are set and cleared by software (only if LOCK not set). They select the

Hysteresis voltage of the comparator .

00: No hysteresis

01: Low hysteresis

10: Medium hysteresis

11: High hysteresis</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLANKING</name>
              <description>BLANKING[2:0]: Comparator blanking source selection bits

These bits select which timer output controls the comparator output blanking.

000: No blanking

001: TIM2 OC4 selected as blanking source

010: TIM16 OC1 selected as blanking source

All other values: reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BRGEN</name>
              <description>BRGEN: Scaler bridge enable

This bit is set and cleared by software (only if LOCK not set). This bit enable the bridge of

the scaler.

0: Scaler resistor bridge disable

1: Scaler resistor bridge enable

If SCALEN is set and BRGEN is reset, BG voltage reference is available                                                                                                      but not 1/4BGAP, 1/2BGAP, 3/4 BGAP. BGAP value is sent instead of 1/4BGAP, 1/2BGAP, 3/4 BGAP.

If SCALEN and BRGEN are set, 1/4 BGAP 1/2BGAP 3/4BGAP and BGAP voltage

references are available.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCALEN</name>
              <description>SCALEN: Voltage scaler enable bit

This bit is set and cleared by software. This bit enable the outputs of the VREFINT divider

available on the minus input of the Comparator

0: scaler disable

1: scaler enable</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VALUE</name>
              <description>VALUE: Comparator output status bit

This bit is read-only. It reflects the current comparator output taking into account POLARITY

bit effect.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK</name>
              <description>LOCK: COMP_CSR register lock bit

This bit is set by software and cleared by a hardware system reset. It locks the whole

content of the comparator control register, COMP1_CSR[31:0].

0: COMP1_CSR[31:0] are read/write

1: COMP1_CSR[31:0] are read-only</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DAC</name>
      <description>DAC address block description</description>
      <groupName>DAC</groupName>
      <baseAddress>0x40006000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DAC</name>
        <description>DAC interrupt</description>
        <value>25</value>
      </interrupt>
      <registers>
        <register>
          <name>CR</name>
          <displayName>CR</displayName>
          <description>CR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: DAC channel enable This bit is set and cleared by software to enable/disable DAC

channel.

0: DAC channel disabled

1: DAC channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BON</name>
              <description>BON: DAC channel output buffer enable. This bit is set and cleared by software to

enable/disable DAC channel output buffer.

0: DAC channel output buffer disabled

1: DAC channel output buffer enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEN</name>
              <description>TEN: DAC channel trigger enable This bit is set and cleared by software to enable/disable

DAC channel trigger.

0: DAC channel trigger disabled and data written into the DAC_DHR register are transferred

       one APB0 clock cycle later to the DAC_DOR register

1: DAC channel trigger enabled and data from the DAC_DHR register are transferred three

       APB0 clock cycles later to the DAC_DOR register

Note: When software trigger is selected, the transfer from the DAC_DHR

register to the DAC_DOR register takes only one APB0 clock cycle.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSEL</name>
              <description>TSEL[2:0]: DAC channel trigger selection These bits select the external event used to trigger

DAC channel.

000: Timer 16 TRGO event

001: PA8 pin event from SYSCFG

010 to 011: Reserved

111: Software trigger

Only used if bit TEN = 1 (DAC channel trigger enabled).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE</name>
              <description>WAVE[1:0]: DAC channel noise/triangle wave generation enable These bits are set and

cleared by software.

00: wave generation disabled

01: Noise wave generation enabled

1x: Triangle wave generation enabled

Note: Only used if bit TEN = 1 (DAC channel trigger enabled).</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAMP</name>
              <description>MAMP[3:0]: DAC channel mask amplitude selector These bits are written by software to

select mask in wave generation mode or amplitude in triangle generation mode.

0000: Unmask bit0 of LFSR  triangle amplitude equal to 1

0001: Unmask bits[1:0] of LFSR  triangle amplitude equal to 3

0010: Unmask bits[2:0] of LFSR  triangle amplitude equal to 7

0011: Unmask bits[3:0] of LFSR  triangle amplitude equal to 15

0100: Unmask bits[4:0] of LFSR  triangle amplitude equal to 31

greater than or equal to 0101: Unmask bits[5:0] of LFSR  triangle amplitude equal to 63</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAEN</name>
              <description>DMAEN: DAC channel DMA enable This bit is set and cleared by software.

0: DAC channel DMA mode disabled

1: DAC channel DMA mode enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAUDRIE</name>
              <description>DMAUDRIE: DAC channel DMA Underrun Interrupt enable This bit is set and cleared by

software.

0: DAC channel DMA Underrun Interrupt disabled

1: DAC channel DMA Underrun Interrupt enabled</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMPEN</name>
              <description>CMPEN: DAC channel output to COMP INMINUS enable. This bit is set and cleared by

software.

0: DAC channel output to COMP INMINUS disabled

1: DAC channel output to COMP INMINUS enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCMEN</name>
              <description>VCMEN: DAC channel output to VCM BUFFER enable. This bit is set and cleared by

software.

0: DAC channel output to VCM BUFFER disabled

1: DAC channel output to VCM BUFFER enabled</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCMON</name>
              <description>VCMON: VCMBUFF power-up. This bit is set and cleared by software.

0: VCM BUFFER OFF

1: VCM BUFFER ON</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWTRIGR</name>
          <displayName>SWTRIGR</displayName>
          <description>SWTRIGR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SWTRIG</name>
              <description>SWTRIG: DAC channel software trigger This bit is set by software to enable/disable the

software trigger.

0: Software trigger disabled

1: Software trigger enabled

Note: This bit is cleared by hardware (one APB0 clock cycle later) once the

DAC_DHR register value has been loaded into the DAC_DOR register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DHR</name>
          <displayName>DHR</displayName>
          <description>DHR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DACDHR</name>
              <description>DACDHR[5:0]: DAC channel 6-bit data These bits are written by software which

specifies 6-bit data for DAC channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DOR</name>
          <displayName>DOR</displayName>
          <description>DOR register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DACDOR</name>
              <description>DACDOR[5:0]: DAC channel data output These bits are read-only, they contain data output

for DAC channel.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <displayName>SR</displayName>
          <description>SR register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAUDR</name>
              <description>DMAUDR: DAC channel DMA underrun flag This bit is set by hardware and cleared by

software (by writing it to 1).

0: No DMA underrun error condition occurred for DAC channel

1: DMA underrun error condition occurred for DAC channel (the currently selected trigger is

       driving DAC channel conversion at a frequency higher than the DMA service capability rate)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DBGMCU</name>
      <groupName>DBGMCU</groupName>
      <baseAddress>0x40008000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xC</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>CR</name>
          <displayName>CR</displayName>
          <description>CR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBG_SLEEP</name>
              <description>Allow debug of the CPU in SLEEP mode
- 0: Normal operation. All clocks will be disabled automatically in SLEEP mode
- 1: Automatic clock stop disabled. All active CPU clocks and oscillators will continue to run during SLEEP mode, allowing full CPU debug capability. On exit from SLEEP mode, the clock settings will be set to the SLEEP mode exit state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_STOP</name>
              <description>Allow debug of the CPU in DEEPSTOP mode
- 0: Normal operation. All clocks will be disabled automatically in STOP mode
- 1: Automatic clock stop disabled. All active CPU clocks and oscillators will continue to run during STOP mode, allowing full CPU debug capability. On exit from STOP mode, the clock settings will be set to the STOP mode exit state.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_APB0_FZ</name>
          <displayName>DBG_APB0_FZ</displayName>
          <description>DBG_APB0_FZ register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBG_TIM2_STOP</name>
              <description>TIM2 stop in the CPU debug
- 0: Normal operation. TIM2 continues to operate while the CPU is in debug mode
- 1: Stop in debug. TIM2 is frozen while the CPU is in debug mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_TIM16_STOP</name>
              <description>TIM16 stop in the CPU debug
- 0: Normal operation. TIM16 continues to operate while the CPU is in debug mode
- 1: Stop in debug. TIM16 is frozen while the CPU is in debug mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_RTC_STOP</name>
              <description>RTC stop in CPU debug
- 0: Normal operation. RTC continues to operate while the CPU is in debug mode
- 1: Stop in debug. RTC is frozen while the CPU is in debug mode.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_IWDG_STOP</name>
              <description>IWDG stop in the CPU debug
- 0: Normal operation. IWDG continues to operate while the CPU is in debug mode
- 1: Stop in debug. IWDG is frozen while the CPU is in debug mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_APB1_FZ</name>
          <displayName>DBG_APB1_FZ</displayName>
          <description>DBG_APB1_FZ register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBG_I2C1_STOP</name>
              <description>I2C1 SMBUS timeout stop in CPU debug
- 0: Normal operation. I2C1 SMBUS timeout continues to operate while the CPU is in debug mode
- 1: Stop in debug. I2C1 SMBUS timeou is frozen while the CPU is in debug mode.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_I2C2_STOP</name>
              <description>I2C2 SMBUS timeout stop in CPU debug
- 0: Normal operation. I2C2 SMBUS timeout continues to operate while the CPU is in debug mode
- 1: Stop in debug. I2C2 SMBUS timeou is frozen while the CPU is in debug mode.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMAMUX</name>
      <description>DMAMUX address block description</description>
      <groupName>DMAMUX</groupName>
      <baseAddress>0x48800000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x20</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>C0CR</name>
          <displayName>C0CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C1CR</name>
          <displayName>C1CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C2CR</name>
          <displayName>C2CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C3CR</name>
          <displayName>C3CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C4CR</name>
          <displayName>C4CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C5CR</name>
          <displayName>C5CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C6CR</name>
          <displayName>C6CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C7CR</name>
          <displayName>C7CR</displayName>
          <description>CxCR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>DMAREQ_ID</name>
              <description>DMAREQ_ID[4:0]: DMA REQuest IDentification

Selects the input DMA request. C.f. the DMAMUX table about assignments of multiplexer

inputs to resources.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA address block description</description>
      <groupName>DMA</groupName>
      <baseAddress>0x48700000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA4</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>DMA</name>
        <description>DMA interrupt</description>
        <value>17</value>
      </interrupt>
      <registers>
        <register>
          <name>DMA_ISR</name>
          <displayName>DMA_ISR</displayName>
          <description>DMA_ISR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GIF1</name>
              <description>GIF1: Channel 1 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 1

1: A TE, HT or TC event occurred on channel 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF1</name>
              <description>TCIF1: Channel 1 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 1

1: A transfer complete (TC) event occurred on channel 1</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF1</name>
              <description>HTIF1: Channel 1 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 1

1: A half transfer (HT) event occurred on channel 1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F1</name>
              <description>TEIF1: Channel 1 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 1

1: A transfer error (TE) occurred on channel 1</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF2</name>
              <description>GIF2: Channel 2 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 2

1: A TE, HT or TC event occurred on channel 2</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF2</name>
              <description>TCIF2: Channel 2 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 2

1: A transfer complete (TC) event occurred on channel 2</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF2</name>
              <description>HTIF2: Channel 2 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 2

1: A half transfer (HT) event occurred on channel 2</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F2</name>
              <description>TEIF2: Channel 2 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 2

1: A transfer error (TE) occurred on channel 2</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF3</name>
              <description>GIF3: Channel 3 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 3

1: A TE, HT or TC event occurred on channel 3</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF3</name>
              <description>TCIF3: Channel 3 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 3

1: A transfer complete (TC) event occurred on channel 3</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF3</name>
              <description>HTIF3: Channel 3 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 3

1: A half transfer (HT) event occurred on channel 3</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F3</name>
              <description>TEIF3: Channel 3 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 3

1: A transfer error (TE) occurred on channel 3</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF4</name>
              <description>GIF4: Channel 4 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 4

1: A TE, HT or TC event occurred on channel 4</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF4</name>
              <description>TCIF4: Channel 4 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 4

1: A transfer complete (TC) event occurred on channel 4</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF4</name>
              <description>HTIF4: Channel 4 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 4

1: A half transfer (HT) event occurred on channel 4</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F4</name>
              <description>TEIF4: Channel 4 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 4

1: A transfer error (TE) occurred on channel 4</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF5</name>
              <description>GIF5: Channel 5 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 5

1: A TE, HT or TC event occurred on channel 5</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF5</name>
              <description>TCIF5: Channel 5 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 5

1: A transfer complete (TC) event occurred on channel 5</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF5</name>
              <description>HTIF5: Channel 5 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 5

1: A half transfer (HT) event occurred on channel 5</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F5</name>
              <description>TEIF5: Channel 5 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 5

1: A transfer error (TE) occurred on channel 5</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF6</name>
              <description>GIF6: Channel 6 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 6

1: A TE, HT or TC event occurred on channel 6</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF6</name>
              <description>TCIF6: Channel 6 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 6

1: A transfer complete (TC) event occurred on channel 6</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF6</name>
              <description>HTIF6: Channel 6 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 6

1: A half transfer (HT) event occurred on channel 6</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F6</name>
              <description>TEIF6: Channel 6 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 6

1: A transfer error (TE) occurred on channel 6</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF7</name>
              <description>GIF7: Channel 7 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 7

1: A TE, HT or TC event occurred on channel 7</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF7</name>
              <description>TCIF7: Channel 7 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 7

1: A transfer complete (TC) event occurred on channel 7</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF7</name>
              <description>HTIF7: Channel 7 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 7

1: A half transfer (HT) event occurred on channel 7</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F7</name>
              <description>TEIF7: Channel 7 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 7

1: A transfer error (TE) occurred on channel 7</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GIF8</name>
              <description>GIF8: Channel 8 global interrupt flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No TE, HT or TC event on channel 8

1: A TE, HT or TC event occurred on channel 8</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCIF8</name>
              <description>TCIF8: Channel 8 transfer complete flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer complete (TC) event on channel 8

1: A transfer complete (TC) event occurred on channel 8</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HTIF8</name>
              <description>HTIF8: Channel 8 half transfer flag

This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No half transfer (HT) event on channel 8

1: A half transfer (HT) event occurred on channel 8</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TE1F8</name>
              <description>TEIF8: Channel 8 transfer error flag                                                                                                                                                                                                                    This bit is set by hardware. It is cleared by software writing 1 to the corresponding bit in the DMA_IFCR register.

0: No transfer error (TE) on channel 8

1: A transfer error (TE) occurred on channel 8</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IFCR</name>
          <displayName>DMA_IFCR</displayName>
          <description>DMA_IFCR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CGIF1</name>
              <description>CGIF1: Channel 1 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF1</name>
              <description>CTCIF1: Channel 1 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF1</name>
              <description>CHTIF1: Channel 1 half transfer clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF1</name>
              <description>CTEIF1: Channel 1 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF2</name>
              <description>CGIF2: Channel 2 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF2</name>
              <description>CTCIF2: Channel 2 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF2</name>
              <description>CHTIF2: Channel 2 half transfer clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF2</name>
              <description>CTEIF2: Channel 2 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF3</name>
              <description>CGIF3: Channel 3 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF3</name>
              <description>CTCIF3: Channel 3 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF3</name>
              <description>CHTIF3: Channel 3 half transfer clear

This bit is set and cleared by software.

0: No effect.

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF3</name>
              <description>CTEIF3: Channel 3 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF4</name>
              <description>CGIF4: Channel 4 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF4</name>
              <description>CTCIF4: Channel 4 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF4</name>
              <description>CHTIF4: Channel 4 half transfer clear

This bit is set and cleared by software.

0: No effect.

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF4</name>
              <description>CTEIF4: Channel 4 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF5</name>
              <description>CGIF5: Channel 5 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF5</name>
              <description>CTCIF5: Channel 5 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF5</name>
              <description>CHTIF5: Channel 5 half transfer clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF5</name>
              <description>CTEIF5: Channel 5 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF6</name>
              <description>CGIF6: Channel 6 global interrupt clear

This bit is set and cleared by software.

0: No effect.

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF6</name>
              <description>CTCIF6: Channel 6 transfer complete clear

This bit is set and cleared by software.

0: No effect.

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF6</name>
              <description>CHTIF6: Channel 6 half transfer clear

This bit is set and cleared by software.

0: No effect.

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF6</name>
              <description>CTEIF6: Channel 6 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF7</name>
              <description>CGIF7: Channel 7 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF7</name>
              <description>CTCIF7: Channel 7 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF7</name>
              <description>CHTIF7: Channel 7 half transfer clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF7</name>
              <description>CTEIF7: Channel 7 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CGIF8</name>
              <description>CGIF8: Channel 8 global interrupt clear

This bit is set and cleared by software.

0: No effect

1: Clears the GIF, TEIF, HTIF and TCIF flags in the DMA_ISR register</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTCIF8</name>
              <description>CTCIF8: Channel 8 transfer complete clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TCIF flag in the DMA_ISR register</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CHTIF8</name>
              <description>CHTIF8: Channel 8 half transfer clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding HTIF flag in the DMA_ISR register</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTEIF8</name>
              <description>CTEIF8: Channel 8 transfer error clear

This bit is set and cleared by software.

0: No effect

1: Clears the corresponding TEIF flag in the DMA_ISR register</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR1</name>
          <displayName>DMA_CCR1</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR1</name>
          <displayName>DMA_CNDTR1</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR1</name>
          <displayName>DMA_CPAR1</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR1</name>
          <displayName>DMA_CMAR1</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR2</name>
          <displayName>DMA_CCR2</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR2</name>
          <displayName>DMA_CNDTR2</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR2</name>
          <displayName>DMA_CPAR2</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR2</name>
          <displayName>DMA_CMAR2</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR3</name>
          <displayName>DMA_CCR3</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR3</name>
          <displayName>DMA_CNDTR3</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR3</name>
          <displayName>DMA_CPAR3</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR3</name>
          <displayName>DMA_CMAR3</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR4</name>
          <displayName>DMA_CCR4</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR4</name>
          <displayName>DMA_CNDTR4</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR4</name>
          <displayName>DMA_CPAR4</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR4</name>
          <displayName>DMA_CMAR4</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR5</name>
          <displayName>DMA_CCR5</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR5</name>
          <displayName>DMA_CNDTR5</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR5</name>
          <displayName>DMA_CPAR5</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR5</name>
          <displayName>DMA_CMAR5</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR6</name>
          <displayName>DMA_CCR6</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR6</name>
          <displayName>DMA_CNDTR6</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR6</name>
          <displayName>DMA_CPAR6</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR6</name>
          <displayName>DMA_CMAR6</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR7</name>
          <displayName>DMA_CCR7</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR7</name>
          <displayName>DMA_CNDTR7</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR7</name>
          <displayName>DMA_CPAR7</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR7</name>
          <displayName>DMA_CMAR7</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CCR8</name>
          <displayName>DMA_CCR8</displayName>
          <description>DMA_CCRx register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>EN: Channel enable

This bit is set and cleared by software.

0: Channel disabled

1: Channel enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transfer complete interrupt enable

This bit is set and cleared by software.

0: TC interrupt disabled

1: TC interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HTIE</name>
              <description>HTIE: Half transfer interrupt enable

This bit is set and cleared by software.

0: HT interrupt disabled

1: HT interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEIE</name>
              <description>TEIE: Transfer error interrupt enable

This bit is set and cleared by software.

0: TE interrupt disabled

1: TE interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Data transfer direction

This bit is set and cleared by software.

0: Read from peripheral.

1: Read from memory</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CIRC</name>
              <description>CIRC: Circular mode

This bit is set and cleared by software.

0: Circular mode disabled

1: Circular mode enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PINC</name>
              <description>PINC: Peripheral increment mode

This bit is set and cleared by software.

0: Peripheral increment mode disabled

1: Peripheral increment mode enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MINC</name>
              <description>MINC: Memory increment mode

This bit is set and cleared by software.

0: Memory increment mode disabled

1: Memory increment mode enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSIZE</name>
              <description>PSIZE[1:0]: Peripheral size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSIZE</name>
              <description>MSIZE[1:0]: Memory size

These bits are set and cleared by software.

00: 8-bits

01: 16-bits

10: 32-bits</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PL</name>
              <description>PL[1:0]: Channel priority level

These bits are set and cleared by software.

00: Low

01: Medium

10: High

11: Very high</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEM2MEM</name>
              <description>MEM2MEM: Memory to memory mode

This bit is set and cleared by software.

0: Memory to memory mode disabled

1: Memory to memory mode enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CNDTR8</name>
          <displayName>DMA_CNDTR8</displayName>
          <description>DMA_CNDTRx register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>NDT</name>
              <description>NDT[15:0]: Number of data to transfer

Number of data to be transferred (0 up to 65535). This register can only be written when the

channel is disabled. Once the channel is enabled, this register is read-only, indicating the

remaining bytes to be transmitted. This register decrements after each DMA transfer.

Once the transfer is completed, this register can either stay at zero or be reloaded

automatically by the value previously programmed if the channel is configured in auto-reload

mode.

If this register is zero, no transaction can be served whether the channel is enabled or not.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CPAR8</name>
          <displayName>DMA_CPAR8</displayName>
          <description>DMA_CPARx register</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>PA[31:0]: Peripheral address

Base address of the peripheral data register from/to which the data will be read/written.

When PSIZE is 01 (16-bit), the PA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When PSIZE is 10 (32-bit), PA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_CMAR8</name>
          <displayName>DMA_CMAR8</displayName>
          <description>DMA_CMARx register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>MA</name>
              <description>MA[31:0]: Memory address

Base address of the memory area from/to which the data will be read/written.

When MSIZE is 01 (16-bit), the MA[0] bit is ignored. Access is automatically aligned to a halfword

address.

When MSIZE is 10 (32-bit), MA[1:0] are ignored. Access is automatically aligned to a word

address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DYNAMIC_REG</name>
      <groupName>DYNAMIC_REG</groupName>
      <baseAddress>0x49000500</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PCKTLEN_CONFIG</name>
          <displayName>PCKTLEN_CONFIG</displayName>
          <description>PCKTLEN_CONFIG register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000014</resetValue>
          <fields>
            <field>
              <name>PCKTLEN</name>
              <description>This bit field has different meanings/usages:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOD0_CONFIG</name>
          <displayName>MOD0_CONFIG</displayName>
          <description>MOD0_CONFIG register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00083A93</resetValue>
          <fields>
            <field>
              <name>DATARATE_M</name>
              <description>The mantissa of the specified data rate (default: 38.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATARATE_E</name>
              <description>The exponent of the specified data rate (default: 38.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MOD_TYPE</name>
              <description>Select the modulation type
</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CONST_MAP</name>
              <description>Also known as FOUR_GFSK_CONST_MAP
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BT_SEL</name>
              <description>Select BT value for GFSK
</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_CLKON_LOCKONTX</name>
              <description>Enable the clock on analog PA in LOCKONTX state
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOD1_CONFIG</name>
          <displayName>MOD1_CONFIG</displayName>
          <description>MOD1_CONFIG register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00400435</resetValue>
          <fields>
            <field>
              <name>FDEV_M</name>
              <description>Mantissa of the frequency deviation (default: 28.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FDEV_E</name>
              <description>Exponent of the frequency deviation (default: 28.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHFLT_M</name>
              <description>Mantissa of the channel filter BW (default: 100 kHz)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CHFLT_E</name>
              <description>Exponent of the channel filter BW (default: 100 kHz)</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SNYTH_FREQ</name>
          <displayName>SNYTH_FREQ</displayName>
          <description>SNYTH_FREQ register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x04851615</resetValue>
          <fields>
            <field>
              <name>SYNTH_FRAC</name>
              <description>Fractional part of the  PLL fractional divide factor (default: 868 MHz, XTAL: 48 MHz)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNTH_INT</name>
              <description>PLL integer divide factor (default: 868 MHz, XTAL: 48 MHz)</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BS</name>
              <description>Synthesizer band selector, i.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VCO_CAL_CONFIG</name>
          <displayName>VCO_CAL_CONFIG</displayName>
          <description>VCO_CAL_CONFIG register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00400088</resetValue>
          <fields>
            <field>
              <name>VCO_CALAMP_EXT</name>
              <description>VCO magnitude calibration word in thermometric code
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_CALAMP_EXT_SEL</name>
              <description>Select the mode to provide an external VCO amplitude calibration value through VCO_CALAMP_EXT bit field
</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_CALFREQ_EXT</name>
              <description>VCO Cbank frequency calibration word.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_CALFREQ_EXT_SEL</name>
              <description>Select the mode to provide an external VCO frequency calibration value through VCO_CALFREQ_EXT bit field
</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_CALIB_REQ</name>
              <description>Define if the Radio FSM must launch a VCO calibration request after VCO start-up
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_TIMER</name>
          <displayName>RX_TIMER</displayName>
          <description>RX_TIMER register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RX_TIMEOUT</name>
              <description>RX timer timeout (relative duration in interpolated absolute time unit)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>23</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CS_TIMEOUT_MASK</name>
              <description>- 0: CS flag does not contribute to timeout disabling
</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PQI_TIMEOUT_MASK</name>
              <description>- 0: PREAMBLE valid flag does not contribute to timeout disabling
</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_SQI_TIMEOUT_MASK</name>
              <description>- 0: SYNC valid flag does not contribute to timeout disabling
</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_OR_nAND_SELECT</name>
              <description>Select logical OR or logcial AND to apply on CS/PQI/SQI timeout mask
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFFER_THR</name>
          <displayName>DATABUFFER_THR</displayName>
          <description>DATABUFFER_THR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RX_ALMOST_FULL_THR</name>
              <description>Almost Full threshold for RX Data Buffers
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ALMOST_EMPTY_THR</name>
              <description>Almost Empty threshold for TX Data Buffers.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RFSEQ_IRQ_ENABLE</name>
          <displayName>RFSEQ_IRQ_ENABLE</displayName>
          <description>RFSEQ_IRQ_ENABLE register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TX_DONE_E</name>
              <description>Enable interrupt on TX_DONE_F flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_OK_E</name>
              <description>Enable interrupt on RX_OK_F flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TIMEOUT_E</name>
              <description>Enable interrupt on RX_TIMEOUT_F flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CRC_ERROR_E</name>
              <description>Enable interrupt on RX_CRC_ERROR_F flag</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_RX_TERM_E</name>
              <description>Enable interrupt on FAST_RX_TERM_F flag</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTIMER_STOP_CDT_E</name>
              <description>Enable interrupt on RXTIMER_STOP_CDT_F flag</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SABORT_DONE_E</name>
              <description>Enable interrupt on SABORT command treated and done flag</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND_REJECTED_E</name>
              <description>Enable interrupt on COMMAND_REJECTED flag</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_E</name>
              <description>Enable interrupt on CS_F flag</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREAMBLE_VALID_E</name>
              <description>Enable interrupt on PREAMBLE_VALID_F flag</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_VALID_E</name>
              <description>Enable interrupt on SYNC_VALID_F flag</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATABUFFER0_USED_E</name>
              <description>Enable interrupt on DATABUFFER0_USED_F flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATABUFFER1_USED_E</name>
              <description>Enable interrupt on DATABUFFER1_USED_F flag</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ALMOST_FULL_0_E</name>
              <description>Enable interrupt on RX_ALMOST_FULL_0_F flag</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ALMOST_FULL_1_E</name>
              <description>Enable interrupt on RX_ALMOST_FULL_1_F flag</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ALMOST_EMPTY_0_E</name>
              <description>Enable interrupt on TX_ALMOST_EMPTY_0_F flag</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ALMOST_EMPTY_1_E</name>
              <description>Enable interrupt on TX_ALMOST_EMPTY_1_F flag</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_ACCESS_ERROR_E</name>
              <description>Enable interrupt on AHB_ACCESS_ERROR_F flag</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HW_ANA_FAILURE_E</name>
              <description>Enable interrupt on HW_ANA_FAILURE_F flag</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEQ_E</name>
              <description>Enable interrupt on SEQ_F flag</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RRM_CMD_START_E</name>
              <description>Enable interrupt on RRM_CMD_END_F flag</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RRM_CMD_END_E</name>
              <description>Enable interrupt on RRM_CMD_END_F flag</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFEASK_CALIB_DONE_E</name>
              <description>Enable interrupt on SAFEASK_CALIB_DONE_F flag</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_CALIB_DONE_E</name>
              <description>Enable interrupt on AGC_CALIB_DONE_F flag</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDITIONAL_CTRL</name>
          <displayName>ADDITIONAL_CTRL</displayName>
          <description>ADDITIONAL_CTRL register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00038800</resetValue>
          <fields>
            <field>
              <name>CH_NUM</name>
              <description>Channel number.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CH_SPACING</name>
              <description>Channel spacing.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PA_FC</name>
              <description>Power control bandwidth selection according data rate
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_CAPTURESEL</name>
              <description>Select the trigger event to capture the interpolated absolute time in the TIME_CAPTURE[31:0] register
</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AS_ENABLE</name>
              <description>Enable the antenna switching feature.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FAST_RX_TIMER</name>
          <displayName>FAST_RX_TIMER</displayName>
          <description>FAST_RX_TIMER register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FAST_RX_TIMEOUT</name>
              <description>Fast RX termination timer value (corresponding to the delay to measure the RSSI and to let the HW check CS flag information)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_CS_TERM_EN</name>
              <description>Enable the Fast RX Termination feature
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COMMAND</name>
          <displayName>COMMAND</displayName>
          <description>COMMAND register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>COMMAND_ID</name>
              <description>Opcode coresponding to a command:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2ACTIVE</name>
              <description>Select the default/return state for the Radio FSM to be ACTIVE2
</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BACK2LOCKON</name>
              <description>Request to the Radio FSM to stay in LOCKON state when exiting a RX or a TX
</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>FLASH_CTRL</name>
      <description>4kb addressable space</description>
      <groupName>FLASH_CTRL</groupName>
      <baseAddress>0x40001000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x200</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>Flash</name>
        <description>Non-volatile memory (flash)
controller</description>
        <value>0</value>
      </interrupt>
      <registers>
        <register>
          <name>COMMAND</name>
          <displayName>COMMAND</displayName>
          <description>COMMAND register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>COMMAND</name>
              <description>Macro commands for flash operations (may require DATA0...DATA3 to be set):
- 0x11 : ERASE        
- 0x22 : MASSERASE    
- 0x33 : WRITE           
- 0x55 : MASSREAD            
- 0xAA : SLEEP        
- 0xBB : WAKEUP       
- 0xCC : BURSTWRITE   
- 0xEE : OTPWRITE     
- 0xFF : KEYWRITE</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIG</name>
          <displayName>CONFIG</displayName>
          <description>CONFIG register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>REMAP</name>
              <description>CPU access routing (it supersedes PREMAP configuration):
- 0 : FLASH memory addressed
- 1 : SRAM0 memory addressed</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_GROUP_WRITE</name>
              <description>Burst write Control:
- 0 : burst write allowed
- 1 : burst write forbidden</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAIT_STATE</name>
              <description>Add latency to flash read opeations:
- 00 : no latency
- 01 : 1 clock cycle latency
- 10 : 2 clock cycles latency
- 11 : 3 clock cycles latency</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEP_SM</name>
              <description>Flash memory power-down mode enable in SLEEP mode
This bit allows to have the Flash memory in power-down mode or in idle mode when the
device is in Sleep mode.
- 0: When the device is in Sleep mode, the NVM is in Idle mode.
- 1: When the device is in Sleep mode, the NVM is in power-down mode.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQSTAT</name>
          <displayName>IRQSTAT</displayName>
          <description>IRQSTAT register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CMDDONE_MIS</name>
              <description>(1: clear, 0: inactive) CMDDONE_MIS flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDSTART_MIS</name>
              <description>(1: clear, 0: inactive) CMDSTART_MIS flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDBUSYERR_MIS</name>
              <description>(1: clear, 0: inactive) CMDBUSYERR_MIS flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ILLCMD_MIS</name>
              <description>(1: clear, 0: inactive) ILLCMD_MIS flag</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>READOK_MIS</name>
              <description>(1: clear, 0: inactive) READOK_MIS flag</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FNREADY_MIS</name>
              <description>(1: clear, 0: inactive) FNREADY_MIS flag</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQMASK</name>
          <displayName>IRQMASK</displayName>
          <description>IRQMASK register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000003F</resetValue>
          <fields>
            <field>
              <name>CMDDONEM</name>
              <description>(1: mask, 0: inactive) CMDDONE_MIS mask</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDSTARTM</name>
              <description>(1: mask, 0: inactive) CMDSTART_MIS mask</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDBUSYERRM</name>
              <description>(1: mask, 0: inactive) CMDBUSYERR_MIS mask</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ILLCMDM</name>
              <description>(1: mask, 0: inactive) ILLCMD_MIS mask</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>READOKM</name>
              <description>(1: mask, 0: inactive) READOK_MIS mask</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FNREADYM</name>
              <description>(1: mask, 0: inactive) FNREADY_MIS mask</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQRAW</name>
          <displayName>IRQRAW</displayName>
          <description>IRQRAW register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000001</resetValue>
          <fields>
            <field>
              <name>CMDDONE_RIS</name>
              <description>(1: active, 0: inactive) COMMAND sequence ended</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDSTART_RIS</name>
              <description>(1: active, 0: inactive) COMMAND sequence started</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDBUSYERR_RIS</name>
              <description>(1: active, 0: inactive) COMMAND issued while flash busy</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ILLCMD_RIS</name>
              <description>(1: active, 0: inactive) Illegal command issued</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>READOK_RIS</name>
              <description>(1: active, 0: inactive) READ COMMAND completed successfully</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDSLEEPERR_RIS</name>
              <description>(1: active, 0: inactive) COMMAND issued while flash in sleep-mode (SLM=1)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SIZE</name>
          <displayName>SIZE</displayName>
          <description>SIZE register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>FLASH_SIZE</name>
              <description>Maximum valid address for flash memory:
- 00 : 0x03FFF (64kb)
- 01 : 0x07FFF (128kb)
- 10 : 0x0BFFF (192kb)
- 11 : 0x0FFFF (256kb)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RAM_SIZE</name>
              <description>RAM memory size selection:
- 0 : 16kb
- 1 : 32kb</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_SECURE</name>
              <description>Flash memory protection (0: no key present, 1: key present)</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>JTAG_DISABLE</name>
              <description>Flash+JTAG protection (0: no JTAG protection - see FLASH_SECURE, 1: Flash and JTAG protected)</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PACKAGE_SIZE</name>
              <description>Package selection:
- 0- : CSP
- 10 : 32pins
- 11 : 48pins</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDRESS</name>
          <displayName>ADDRESS</displayName>
          <description>ADDRESS register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>YADDR</name>
              <description>Flash column address offset to be used with some COMMAND</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XADDR</name>
              <description>Flash row address offset to be used with some COMMAND</description>
              <bitOffset>6</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LFSRVAL</name>
          <displayName>LFSRVAL</displayName>
          <description>LFSRVAL register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>LFSRVAL</name>
              <description>Flash read data CRC signature</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAGEPROT0</name>
          <displayName>PAGEPROT0</displayName>
          <description>PAGEPROT0 register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGSIZE0</name>
              <description>First segment, 7-bit page protection size (number of pages to protect in segment, first page included)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGOFFSET0</name>
              <description>First segment, 7-bit page protection offset (first page number in protected segment)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGSIZE1</name>
              <description>Second segment, 7-bit page protection size (number of pages to protect in segment, first page included)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGOFFSET1</name>
              <description>Second segment, 7-bit page protection offset (first page number in protected segment)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAGEPROT1</name>
          <displayName>PAGEPROT1</displayName>
          <description>PAGEPROT1 register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGSIZE2</name>
              <description>Third segment, 7-bit page protection size (number of pages to protect in segment, first page included)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGOFFSET2</name>
              <description>Third segment, 7-bit page protection offset (first page number in protected segment)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGSIZE3</name>
              <description>Fourth segment, 7-bit page protection size (number of pages to protect in segment, first page included)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SEGOFFSET3</name>
              <description>Fourth segment, 7-bit page protection offset (first page number in protected segment)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA0</name>
          <displayName>DATA0</displayName>
          <description>DATA0 register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DATA0</name>
              <description>Value to be used as DATA for any COMMAND of type WRITE and compare value for MASSREAD</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA1</name>
          <displayName>DATA1</displayName>
          <description>DATA1 register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DATA1</name>
              <description>Value to be used as DATA for any COMMAND of type WRITE</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA2</name>
          <displayName>DATA2</displayName>
          <description>DATA2 register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DATA2</name>
              <description>Value to be used as DATA for any COMMAND of type WRITE</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA3</name>
          <displayName>DATA3</displayName>
          <description>DATA3 register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>DATA3</name>
              <description>Value to be used as DATA for any COMMAND of type WRITE</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNLOCK012</name>
          <displayName>UNLOCK012</displayName>
          <description>UNLOCK012 register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>UNLOCK012</name>
              <description>(NOT TO BE DOCUMENTED) Remove read-write protection from IFR0, IFR1, IFR2 sectors</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UNLOCK3</name>
          <displayName>UNLOCK3</displayName>
          <description>UNLOCK3 register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>UNLOCK3</name>
              <description>(NOT TO BE DOCUMENTED) Remove read-write protection from IFR3 sector</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIOA</name>
      <groupName>GPIOA</groupName>
      <baseAddress>0x48000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIOA</name>
        <description>GPIOA interrupt</description>
        <value>15</value>
      </interrupt>
      <registers>
        <register>
          <name>MODER</name>
          <displayName>MODER</displayName>
          <description>MODER register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000A0</resetValue>
          <fields>
            <field>
              <name>MODE0</name>
              <description>MODE0[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE1</name>
              <description>MODE1[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE2</name>
              <description>MODE2[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE3</name>
              <description>MODE3[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE4</name>
              <description>MODE4[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE5</name>
              <description>MODE5[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE6</name>
              <description>MODE6[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE7</name>
              <description>MODE7[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE8</name>
              <description>MODE8[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE9</name>
              <description>MODE9[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE10</name>
              <description>MODE10[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE11</name>
              <description>MODE11[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE12</name>
              <description>MODE12[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE13</name>
              <description>MODE13[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE14</name>
              <description>MODE14[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE15</name>
              <description>MODE15[1:0]Port A configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTYPER</name>
          <displayName>OTYPER</displayName>
          <description>OTYPER register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OT0</name>
              <description>OT0: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT1</name>
              <description>OT1: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT2</name>
              <description>OT2: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT3</name>
              <description>OT3: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT4</name>
              <description>OT4: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT5</name>
              <description>OT5: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT6</name>
              <description>OT6: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT7</name>
              <description>OT7: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT8</name>
              <description>OT8: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT9</name>
              <description>OT9: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT10</name>
              <description>OT10: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT11</name>
              <description>OT11: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT12</name>
              <description>OT12: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT13</name>
              <description>OT13: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT14</name>
              <description>OT14: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT15</name>
              <description>OT15: Port A configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OSPEEDR</name>
          <displayName>OSPEEDR</displayName>
          <description>OSPEEDR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000030</resetValue>
          <fields>
            <field>
              <name>OSPEED0</name>
              <description>OSPEED0[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED1</name>
              <description>OSPEED1[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED2</name>
              <description>OSPEED2[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED3</name>
              <description>OSPEED3[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED4</name>
              <description>OSPEED4[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED5</name>
              <description>OSPEED5[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED6</name>
              <description>OSPEED6[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED7</name>
              <description>OSPEED7[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED8</name>
              <description>OSPEED8[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED9</name>
              <description>OSPEED9[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED10</name>
              <description>OSPEED10[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED11</name>
              <description>OSPEED11[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED12</name>
              <description>OSPEED12[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED13</name>
              <description>OSPEED13[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED14</name>
              <description>OSPEED14[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED15</name>
              <description>OSPEED15[1:0]: Port A configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PUPDR</name>
          <displayName>PUPDR</displayName>
          <description>PUPDR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x55555595</resetValue>
          <fields>
            <field>
              <name>PUPD0</name>
              <description>PUPD0: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD1</name>
              <description>PUPD1: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD2</name>
              <description>PUPD2: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD3</name>
              <description>PUPD3: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD4</name>
              <description>PUPD4: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD5</name>
              <description>PUPD5: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD6</name>
              <description>PUPD6: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD7</name>
              <description>PUPD7: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD8</name>
              <description>PUPD8: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD9</name>
              <description>PUPD9: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD10</name>
              <description>PUPD10: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD11</name>
              <description>PUPD11: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD12</name>
              <description>PUPD12: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD13</name>
              <description>PUPD13: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD14</name>
              <description>PUPD14: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD15</name>
              <description>PUPD15: Port A configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDR</name>
          <displayName>IDR</displayName>
          <description>IDR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ID0</name>
              <description>ID0:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID1</name>
              <description>ID1:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID2</name>
              <description>ID2:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID3</name>
              <description>ID3:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID4</name>
              <description>ID4:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID5</name>
              <description>ID5:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID6</name>
              <description>ID6:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID7</name>
              <description>ID7:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID8</name>
              <description>ID8:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID9</name>
              <description>ID9: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID10</name>
              <description>ID10:  Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID11</name>
              <description>ID11: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID12</name>
              <description>ID12: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID13</name>
              <description>ID13: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID14</name>
              <description>ID14: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID15</name>
              <description>ID15: Port A input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ODR</name>
          <displayName>ODR</displayName>
          <description>ODR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OD0</name>
              <description>OD0:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD1</name>
              <description>OD1:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD2</name>
              <description>OD2:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD3</name>
              <description>OD3:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD4</name>
              <description>OD4:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD5</name>
              <description>OD5:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD6</name>
              <description>OD6:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD7</name>
              <description>OD7:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD8</name>
              <description>OD8:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD9</name>
              <description>OD9: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD10</name>
              <description>OD10:  Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD11</name>
              <description>OD11: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD12</name>
              <description>OD12: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD13</name>
              <description>OD13: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD14</name>
              <description>OD14: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD15</name>
              <description>OD15: Port A output data bit
These bits can be read and written by software</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BSRR</name>
          <displayName>BSRR</displayName>
          <description>BSRR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BS0</name>
              <description>BS0: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.
0: No action on the corresponding ODx bit
1: Sets the corresponding ODx bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS1</name>
              <description>BS1: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.
0: No action on the corresponding ODx bit
1: Sets the corresponding ODx bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS2</name>
              <description>BS2: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.
0: No action on the corresponding ODx bit
1: Sets the corresponding ODx bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS3</name>
              <description>BS3: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS4</name>
              <description>BS4: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS5</name>
              <description>BS5: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS6</name>
              <description>BS6: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS7</name>
              <description>BS7: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS8</name>
              <description>BS8: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS9</name>
              <description>BS9: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS10</name>
              <description>BS10: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS11</name>
              <description>BS11: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS12</name>
              <description>BS12: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS13</name>
              <description>BS13: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS14</name>
              <description>BS14: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS15</name>
              <description>BS15: Port A set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR0</name>
              <description>BR0: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR1</name>
              <description>BR1: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR2</name>
              <description>BR2: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR3</name>
              <description>BR3: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR4</name>
              <description>BR4: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR5</name>
              <description>BR5: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR6</name>
              <description>BR6: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR7</name>
              <description>BR7: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR8</name>
              <description>BR8: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR9</name>
              <description>BR9: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR10</name>
              <description>BR10: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR11</name>
              <description>BR11: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR12</name>
              <description>BR12: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR13</name>
              <description>BR13: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR14</name>
              <description>BR14: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR15</name>
              <description>BR15: Port A reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCKR</name>
          <displayName>LCKR</displayName>
          <description>LCKR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LCK0</name>
              <description>LCK0: Port A lock bit 0
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK1</name>
              <description>LCK1: Port A lock bit 1
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK2</name>
              <description>LCK2: Port A lock bit 2
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK3</name>
              <description>LCK3: Port A lock bit 3
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK4</name>
              <description>LCK4: Port A lock bit 4
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK5</name>
              <description>LCK5: Port A lock bit 5
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK6</name>
              <description>LCK6: Port A lock bit 6
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK7</name>
              <description>LCK7: Port A lock bit 7
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK8</name>
              <description>LCK8: Port A lock bit 8
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK9</name>
              <description>LCK9: Port A lock bit 9
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK10</name>
              <description>LCK10: Port A lock bit 10
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK11</name>
              <description>LCK11: Port A lock bit 11
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK12</name>
              <description>LCK12: Port A lock bit 12
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK13</name>
              <description>LCK13: Port A lock bit 13
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK14</name>
              <description>LCK14: Port A lock bit 14
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK15</name>
              <description>LCK15: Port A lock bit 15
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCKK</name>
              <description>LCKK: Lock key
This bit can be read any time. It can only be modified using the lock key write sequence.
-0: Port configuration lock key not active
-1: Port configuration lock key active. The GPIOx_LCKR register is locked until the next MCU
reset or peripheral reset.
LOCK key write sequence:
WR LCKR[16] = 1 + LCKR[15:0]
WR LCKR[16] = 0 + LCKR[15:0]
WR LCKR[16] = 1 + LCKR[15:0]
RD LCKR
RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active)
Note: During the LOCK key write sequence, the value of LCK[15:0] must not change.
Any error in the lock sequence aborts the lock.
After the first lock sequence on any bit of the port, any read access on the LCKK bit will
return 1 until the next MCU reset or peripheral reset</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFRL</name>
          <displayName>AFRL</displayName>
          <description>AFRL register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFSEL0</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL1</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL2</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL3</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL4</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL5</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL6</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL7</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFRH</name>
          <displayName>AFRH</displayName>
          <description>AFRH register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFSEL8</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL9</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL10</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL11</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL12</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL13</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL14</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL15</name>
              <description>y[3:0]: Alternate function selection for port A pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRR</name>
          <displayName>BRR</displayName>
          <description>BRR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BR0</name>
              <description>BR0: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR1</name>
              <description>BR1: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR2</name>
              <description>BR2: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR3</name>
              <description>BR3: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR4</name>
              <description>BR4: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR5</name>
              <description>BR5: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR6</name>
              <description>BR6: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR7</name>
              <description>BR7: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR8</name>
              <description>BR8: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR9</name>
              <description>BR9: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR10</name>
              <description>BR10: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR11</name>
              <description>BR11: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR12</name>
              <description>BR12: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR13</name>
              <description>BR13: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR14</name>
              <description>BR14: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR15</name>
              <description>BR15: Port A reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GPIOB</name>
      <groupName>GPIOB</groupName>
      <baseAddress>0x48100000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>GPIOB</name>
        <description>GPIOB interrupt</description>
        <value>16</value>
      </interrupt>
      <registers>
        <register>
          <name>MODER</name>
          <displayName>MODER</displayName>
          <description>MODER register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>MODE0</name>
              <description>MODE0[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE1</name>
              <description>MODE1[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE2</name>
              <description>MODE2[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE3</name>
              <description>MODE3[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE4</name>
              <description>MODE4[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE5</name>
              <description>MODE5[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE6</name>
              <description>MODE6[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE7</name>
              <description>MODE7[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE8</name>
              <description>MODE8[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE9</name>
              <description>MODE9[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE10</name>
              <description>MODE10[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE11</name>
              <description>MODE11[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE12</name>
              <description>MODE12[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE13</name>
              <description>MODE13[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE14</name>
              <description>MODE14[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE15</name>
              <description>MODE15[1:0]Port B configuration bits. These bits are written by software to configure the I/O mode.
-00: Input mode
-01: output mode
-10: Alternate function mode
-11: Analog mode</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OTYPER</name>
          <displayName>OTYPER</displayName>
          <description>OTYPER register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OT0</name>
              <description>OT0: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT1</name>
              <description>OT1: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT2</name>
              <description>OT2: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT3</name>
              <description>OT3: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT4</name>
              <description>OT4: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT5</name>
              <description>OT5: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT6</name>
              <description>OT6: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT7</name>
              <description>OT7: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT8</name>
              <description>OT8: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT9</name>
              <description>OT9: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT10</name>
              <description>OT10: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT11</name>
              <description>OT11: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT12</name>
              <description>OT12: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT13</name>
              <description>OT13: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT14</name>
              <description>OT14: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OT15</name>
              <description>OT15: Port B configuration bits
These bits are written by software to configure the I/O output type.
-0: Output push-pull (reset state)
-1: Output open-drain</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OSPEEDR</name>
          <displayName>OSPEEDR</displayName>
          <description>OSPEEDR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OSPEED0</name>
              <description>OSPEED0[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED1</name>
              <description>OSPEED1[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED2</name>
              <description>OSPEED2[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED3</name>
              <description>OSPEED3[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED4</name>
              <description>OSPEED4[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED5</name>
              <description>OSPEED5[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED6</name>
              <description>OSPEED6[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED7</name>
              <description>OSPEED7[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED8</name>
              <description>OSPEED8[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED9</name>
              <description>OSPEED9[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED10</name>
              <description>OSPEED10[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED11</name>
              <description>OSPEED11[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED12</name>
              <description>OSPEED12[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED13</name>
              <description>OSPEED13[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED14</name>
              <description>OSPEED14[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSPEED15</name>
              <description>OSPEED15[1:0]: Port B configuration bits
These bits are written by software to configure the I/O output speed.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PUPDR</name>
          <displayName>PUPDR</displayName>
          <description>PUPDR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x55555555</resetValue>
          <fields>
            <field>
              <name>PUPD0</name>
              <description>PUPD0: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD1</name>
              <description>PUPD1: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD2</name>
              <description>PUPD2: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD3</name>
              <description>PUPD3: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD4</name>
              <description>PUPD4: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD5</name>
              <description>PUPD5: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD6</name>
              <description>PUPD6: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD7</name>
              <description>PUPD7: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD8</name>
              <description>PUPD8: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD9</name>
              <description>PUPD9: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD10</name>
              <description>PUPD10: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD11</name>
              <description>PUPD11: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD12</name>
              <description>PUPD12: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD13</name>
              <description>PUPD13: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD14</name>
              <description>PUPD14: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PUPD15</name>
              <description>PUPD15: Port B configuration bits
These bits are written by software to configure the I/O pull-up or pull-down
-00: No pull-up, pull-down
-01: Pull-up
-10: Pull-down
-11: Reserved</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IDR</name>
          <displayName>IDR</displayName>
          <description>IDR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ID0</name>
              <description>ID0:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID1</name>
              <description>ID1:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID2</name>
              <description>ID2:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID3</name>
              <description>ID3:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID4</name>
              <description>ID4:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID5</name>
              <description>ID5:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID6</name>
              <description>ID6:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID7</name>
              <description>ID7:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID8</name>
              <description>ID8:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID9</name>
              <description>ID9: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID10</name>
              <description>ID10:  Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID11</name>
              <description>ID11: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID12</name>
              <description>ID12: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID13</name>
              <description>ID13: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID14</name>
              <description>ID14: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ID15</name>
              <description>ID15: Port B input data bit.These bits are read-only. They contain the input value of the corresponding I/O port</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ODR</name>
          <displayName>ODR</displayName>
          <description>ODR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OD0</name>
              <description>OD0:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD1</name>
              <description>OD1:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD2</name>
              <description>OD2:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD3</name>
              <description>OD3:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD4</name>
              <description>OD4:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD5</name>
              <description>OD5:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD6</name>
              <description>OD6:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD7</name>
              <description>OD7:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD8</name>
              <description>OD8:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD9</name>
              <description>OD9: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD10</name>
              <description>OD10:  Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD11</name>
              <description>OD11: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD12</name>
              <description>OD12: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD13</name>
              <description>OD13: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD14</name>
              <description>OD14: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OD15</name>
              <description>OD15: Port B output data bit
These bits can be read and written by software</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BSRR</name>
          <displayName>BSRR</displayName>
          <description>BSRR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BS0</name>
              <description>BS0: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS1</name>
              <description>BS1: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS2</name>
              <description>BS2: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS3</name>
              <description>BS3: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS4</name>
              <description>BS4: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS5</name>
              <description>BS5: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS6</name>
              <description>BS6: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS7</name>
              <description>BS7: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS8</name>
              <description>BS8: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS9</name>
              <description>BS9: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS10</name>
              <description>BS10: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS11</name>
              <description>BS11: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS12</name>
              <description>BS12: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS13</name>
              <description>BS13: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS14</name>
              <description>BS14: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BS15</name>
              <description>BS15: Port B set bit y 
These bits are write-only. A read to these bits returns the value 0x0000.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR0</name>
              <description>BR0: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR1</name>
              <description>BR1: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR2</name>
              <description>BR2: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR3</name>
              <description>BR3: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR4</name>
              <description>BR4: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR5</name>
              <description>BR5: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR6</name>
              <description>BR6: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR7</name>
              <description>BR7: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR8</name>
              <description>BR8: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR9</name>
              <description>BR9: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR10</name>
              <description>BR10: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR11</name>
              <description>BR11: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR12</name>
              <description>BR12: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR13</name>
              <description>BR13: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR14</name>
              <description>BR14: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR15</name>
              <description>BR15: Port B reset bit y
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit
Note: If both BSx and BRx are set, BSx has priority.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCKR</name>
          <displayName>LCKR</displayName>
          <description>LCKR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LCK0</name>
              <description>LCK0: Port B lock bit 0
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK1</name>
              <description>LCK1: Port B lock bit 1
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK2</name>
              <description>LCK2: Port B lock bit 2
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK3</name>
              <description>LCK3: Port B lock bit 3
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK4</name>
              <description>LCK4: Port B lock bit 4
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK5</name>
              <description>LCK5: Port B lock bit 5
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK6</name>
              <description>LCK6: Port B lock bit 6
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK7</name>
              <description>LCK7: Port B lock bit 7
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK8</name>
              <description>LCK8: Port B lock bit 8
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK9</name>
              <description>LCK9: Port B lock bit 9
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK10</name>
              <description>LCK10: Port B lock bit 10
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK11</name>
              <description>LCK11: Port B lock bit 11
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK12</name>
              <description>LCK12: Port B lock bit 12
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK13</name>
              <description>LCK13: Port B lock bit 13
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK14</name>
              <description>LCK14: Port B lock bit 14
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCK15</name>
              <description>LCK15: Port B lock bit 15
These bits are read/write but can only be written when the LCKK bit is 0, using the specific
sequence described in LCKK bit description.
-0: Port configuration not locked
-1: Port configuration locked</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCKK</name>
              <description>LCKK: Lock key
This bit can be read any time. It can only be modified using the lock key write sequence.
-0: Port configuration lock key not active
-1: Port configuration lock key active. The GPIOx_LCKR register is locked until the next MCU
reset or peripheral reset.
LOCK key write sequence:
WR LCKR[16] = 1 + LCKR[15:0]
WR LCKR[16] = 0 + LCKR[15:0]
WR LCKR[16] = 1 + LCKR[15:0]
RD LCKR
RD LCKR[16] = 1 (this read operation is optional but it confirms that the lock is active)
Note: During the LOCK key write sequence, the value of LCK[15:0] must not change.
Any error in the lock sequence aborts the lock.
After the first lock sequence on any bit of the port, any read access on the LCKK bit will
return 1 until the next MCU reset or peripheral reset</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFRL</name>
          <displayName>AFRL</displayName>
          <description>AFRL register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFSEL0</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL1</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL2</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL3</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL4</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL5</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL6</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL7</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 0..7)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFRH</name>
          <displayName>AFRH</displayName>
          <description>AFRH register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AFSEL8</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL9</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL10</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL11</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL12</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL13</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL14</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFSEL15</name>
              <description>y[3:0]: Alternate function selection for Port B pin y (y = 8..15)
These bits are written by software to configure alternate function I/Os
AFSELy selection:
-0000: AF0
-0001: AF1
-0010: AF2
-0011: AF3
-0100: AF4
-0101: AF5
-0110: AF6
-0111: AF7
1xxx: Reserved</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRR</name>
          <displayName>BRR</displayName>
          <description>BRR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>BR0</name>
              <description>BR0: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR1</name>
              <description>BR1: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR2</name>
              <description>BR2: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR3</name>
              <description>BR3: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR4</name>
              <description>BR4: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR5</name>
              <description>BR5: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR6</name>
              <description>BR6: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR7</name>
              <description>BR7: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR8</name>
              <description>BR8: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR9</name>
              <description>BR9: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR10</name>
              <description>BR10: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR11</name>
              <description>BR11: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR12</name>
              <description>BR12: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR13</name>
              <description>BR13: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR14</name>
              <description>BR14: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BR15</name>
              <description>BR15: Port B reset bit y (y = 0..15)
These bits are write-only. A read to these bits returns the value 0x0000.
-0: No action on the corresponding ODx bit
-1: Resets the corresponding ODx bit</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2C1</name>
      <groupName>I2C1</groupName>
      <baseAddress>0x41000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C1</name>
        <description>I2C1 interrupt</description>
        <value>3</value>
      </interrupt>
      <registers>
        <register>
          <name>I2C_CR1</name>
          <displayName>I2C_CR1</displayName>
          <description>I2C_CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PE</name>
              <description>Peripheral enable
- 0: Peripheral disable
- 1: Peripheral enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIE</name>
              <description>TX Interrupt enable
- 0: Transmit (TXIS) interrupt disabled
- 1: Transmit (TXIS) interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXIE</name>
              <description>RX Interrupt enable
- 0: Receive (RXNE) interrupt disabled
- 1: Receive (RXNE) interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDRIE</name>
              <description>Address match Interrupt enable (slave only)
- 0: Address match (ADDR) interrupts disabled
- 1: Address match (ADDR) interrupts enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACKIE</name>
              <description>Not acknowledge received Interrupt enable
- 0: Not acknowledge (NACKF) received interrupts disabled
- 1: Not acknowledge (NACKF) received interrupts enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOPIE</name>
              <description>STOP detection Interrupt enable
- 0: Stop detection (STOPF) interrupt disabled
- 1: Stop detection (STOPF) interrupt enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>Transfer Complete interrupt enable
- 0: Transfer Complete interrupt disabled
- 1: Transfer Complete interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRIE</name>
              <description>Error interrupts enable
- 0: Error detection interrupts disabled
- 1: Error detection interrupts enabled
Note: Any of these errors generate an interrupt:
Arbitration Loss (ARLO)
Bus Error detection (BERR)
Overrun/Underrun (OVR)
Timeout detection (TIMEOUT)
PEC error detection (PECERR)
Alert pin event detection (ALERT)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DNF</name>
              <description>Digital noise filter
These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter
will filter spikes with a length of up to DNF[3:0] * tI2CCLK
- 0000: Digital filter disabled
- 0001: Digital filter enabled and filtering capability up to 1 tI2CCLK
- 1111: digital filter enabled and filtering capability up to15 tI2CCLK</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANFOFF</name>
              <description>Analog noise filter OFF
- 0: Analog noise filter enabled
- 1: Analog noise filter disabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMAEN</name>
              <description>DMA transmission requests enable
- 0: DMA mode disabled for transmission
- 1: DMA mode enabled for transmission</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMAEN</name>
              <description>DMA reception requests enable
- 0: DMA mode disabled for reception
- 1: DMA mode enabled for reception</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SBC</name>
              <description>Slave byte control
This bit is used to enable hardware byte control in slave mode.
- 0: Slave byte control disabled
- 1: Slave byte control enabled</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOSTRETCH</name>
              <description>Clock stretching disable
This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode.
- 0: Clock stretching enabled
- 1: Clock stretching disabled
Note: This bit can only be programmed when the I2C is disabled (PE = 0).</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GCEN</name>
              <description>General call enable
</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>General call disabled. Address 0b00000000 is NACKed.
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>General call enabled. Address 0b00000000 is ACKed.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMBHEN</name>
              <description>SMBus Host address enable
- 0: Host address disabled. Address 0b0001000x is NACKed.
- 1: Host address enabled. Address 0b0001000x is ACKed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMBDEN</name>
              <description>SMBus Device Default address enable
- 0: Device default address disabled. Address 0b1100001x is NACKed.
- 1: Device default address enabled. Address 0b1100001x is ACKed.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALERTEN</name>
              <description>SMBus alert enable
Device mode (SMBHEN=0):
- 0: Releases SMBA pin high and Alert Response Address Header disabled: 0001100x followed by NACK.
- 1: Drives SMBA pin low and Alert Response Address Header enables: 0001100x followed by ACK.
Host mode (SMBHEN=1):
- 0: SMBus Alert pin (SMBA) not supported.
- 1: SMBus Alert pin (SMBA) supported.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PECEN</name>
              <description>PEC enable
- 0: PEC calculation disabled
- 1: PEC calculation enabled</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CR2</name>
          <displayName>I2C_CR2</displayName>
          <description>I2C_CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SADD</name>
              <description>Slave address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_WRN</name>
              <description>Transfer direction (master mode)
- 0: Master requests a write transfer.
- 1: Master requests a read transfer.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADD10</name>
              <description>Ten-bit addressing mode (master mode)
- 0: The master operates in 7-bit addressing mode,
- 1: The master operates in 10-bit addressing mode</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HEAD10R</name>
              <description>Ten bit (10-bit) address header only read direction (master receiver mode)
- 0: The master sends the complete 10 bit slave address read sequence: Start + 2 bytes 10bit address in write direction + Restart + 1st 7 bits of the 10 bit address in read direction.
- 1: The master only sends the 1st 7 bits of the 10 bit address, followed by Read direction.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>Start generation
This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by a timeout error detection, or when PE = 0. It can also be cleared by software by writing 1 to the ADDRCF bit in the I2C_ICR register.
- 0: No Start generation.
- 1: Restart/Start generation:
If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated Start condition when RELOAD=0, after the end of the NBYTES transfer.
Otherwise setting this bit will generate a START condition once the bus is free.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP</name>
              <description>Stop generation (master mode)
The bit is set by software, cleared by hardware when a Stop condition is detected, or when PE = 0.
In Master Mode:
- 0: No Stop generation.
- 1: Stop generation after current byte transfer.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK</name>
              <description>NACK generation (slave mode)
The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP
condition or an Address matched is received, or when PE=0.
- 0: an ACK is sent after current received byte.
- 1: a NACK is sent after current received byte.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NBYTES</name>
              <description>Number of bytes
The number of bytes to be transmitted/received is programmed there. This field is dont care in
slave mode with SBC=0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOAD</name>
              <description>NBYTES reload mode
This bit is set and cleared by software.
- 0: The transfer is completed after the NBYTES data transfer (STOP or RESTART will follow).
- 1: The transfer is not completed after the NBYTES data transfer (NBYTES will be reloaded).
TCR flag is set when NBYTES data are transferred, stretching SCL low.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOEND</name>
              <description>Automatic end mode (master mode)
This bit is set and cleared by software.
- 0: software end mode: TC flag is set when NBYTES data are transferred, stretching SCL low.
- 1: Automatic end mode: a STOP condition is automatically sent when NBYTES data are
transferred.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PECBYTE</name>
              <description>Packet error checking byte
This bit is set by software, and cleared by hardware when the PEC is transferred, or when a
STOP condition or an Address matched is received, also when PE=0.
- 0: No PEC transfer.
- 1: PEC transmission/reception is requested</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OAR1</name>
          <displayName>I2C_OAR1</displayName>
          <description>I2C_OAR1 register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OA1</name>
              <description>Interface address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA1MODE</name>
              <description>Own Address 1 10-bit mode
- 0: Own address 1 is a 7-bit address.
- 1: Own address 1 is a 10-bit address.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA1EN</name>
              <description>Own Address 1 enable
- 0: Own address 1 disabled. The received slave address OA1 is NACKed.
- 1: Own address 1 enabled. The received slave address OA1 is ACKed.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OAR2</name>
          <displayName>I2C_OAR2</displayName>
          <description>I2C_OAR2 register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OA2</name>
              <description>Interface address
bits 7:1 of address
Note: These bits can be written only when OA2EN=0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA2MSK</name>
              <description>Own Address 2 masks
- 000: No mask
- 001: OA2[1] is masked and dont care. Only OA2[7:2] are compared.
- 010: OA2[2:1] are masked and dont care. Only OA2[7:3] are compared.
- 011: OA2[3:1] are masked and dont care. Only OA2[7:4] are compared.
- 100: OA2[4:1] are masked and dont care. Only OA2[7:5] are compared.
- 101: OA2[5:1] are masked and dont care. Only OA2[7:6] are compared.
- 110: OA2[6:1] are masked and dont care. Only OA2[7] is compared.
- 111: OA2[7:1] are masked and dont care. No comparison is done, and all (except reserved) 7-bit received addresses are acknowledged.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA2EN</name>
              <description>Own Address 2 enable
</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>Own address 2 disabled. The received slave address OA2 is NACKed.
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>Own address 2 enabled. The received slave address OA2 is ACKed.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING</name>
          <displayName>I2C_TIMING</displayName>
          <description>I2C_TIMING register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SCLL</name>
              <description>SCL low period (master mode)
This field is used to generate the SCL low period in master mode.
tSCLL = (SCLL+1) x tPRESC
Note: SCLL is also used to generate tBUF and tSU:STA timings.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLH</name>
              <description>SCL high period (master mode)
This field is used to generate the SCL high period in master mode.
tSCLH = (SCLH+1) x tPRESC
Note: SCLH is also used to generate tSU:STO and tHD:STA timing.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDADEL</name>
              <description>Data hold time
This field is used to generate the delay tSDADEL between SCL falling edge SDA edge in
transmission mode.
tSDADEL= SDADEL x tPRESC
Note: SDADEL is used to generate tHD:DAT timing.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLDEL</name>
              <description>Data setup time
This field is used to generate a delay tSCLDEL between SDA edge and SCL rising edge in
transmission mode.
tSCLDEL = (SCLDEL+1) x tPRESC
Note: tSCLDEL is used to generate tSU:DAT timing.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRESC</name>
              <description>Timing prescaler
This field is used to prescale I2CCLK in order to generate the clock period tPRESC used for data
setup and hold counters and for SCL high and low level
counters
tPRESC = (PRESC+1) x tI2CCLK</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMEOUT</name>
          <displayName>I2C_TIMEOUT</displayName>
          <description>I2C_TIMEOUT register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TIMEOUTA</name>
              <description>Bus Timeout A
This field is used to configure:
The SCL low timeout condition tTIMEOUT when TIDLE=0
tTIMEOUT= (TIMEOUTA+1) x 2048 x tI2CCLK
The bus idle condition (both SCL and SDA high) when TIDLE=1
tIDLE= (TIMEOUTA+1) x 4 x tI2CCLK
Note: These bits can be written only when TIMOUTEN=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIDLE</name>
              <description>Idle clock timeout detection
- 0: TIMEOUTA is used to detect SCL low timeout
- 1: TIMEOUTA is used to detect both SCL and SDA high timeout (bus idle condition)
Note: This bit can be written only when TIMOUTEN=0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUTEN</name>
              <description>Clock timeout enable
- 0: SCL timeout detection is disabled
- 1: SCL timeout detection is enabled: when SCL is low for more than tTIMEOUT (TIDLE=0) or
high for more than tIDLE (TIDLE=1), a timeout error is detected (TIMEOUT=1).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUTB</name>
              <description>Bus timeout B
This field is used to configure the cumulative clock extension timeout:
In master mode, the master cumulative clock low extend time (tLOW:MEXT) is detected
In slave mode, the slave cumulative clock low extend time (tLOW:SEXT) is detected
tLOW:EXT= (TIMEOUTB+1) x 2048 x tI2CCLK
Note: These bits can be written only when TEXTEN=0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEXTEN</name>
              <description>Extended clock timeout enable
- 0: Extended clock timeout detection is disabled
- 1: Extended clock timeout detection is enabled. When a cumulative SCL stretch for more
than tLOW:EXT is done by the I2C interface, a timeout error is detected (TIMEOUT=1).</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ISR</name>
          <displayName>I2C_ISR</displayName>
          <description>I2C_ISR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TXE</name>
              <description>Transmit data register empty (transmitters)
This bit is set by hardware when the I2C_TXDR register is empty. It is cleared when the next data to be sent is written in the I2C_TXDR register.
This bit can be written to 1 by software in order to flush the transmit data register I2C_TXDR.
Note: This bit is set by hardware when PE=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIS</name>
              <description>Transmit interrupt status (transmitters)
This bit is set by hardware when the I2C_TXDR register is empty and the data to be transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be sent is written in the I2C_TXDR register.
This bit can be written to 1 by software when NOSTRETCH=1 only, in order to generate a TXIS event (interrupt if TXIE=1 or DMA request if TXDMAEN=1).
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNE</name>
              <description>Receive data register not empty (receivers)
This bit is set by hardware when the received data is copied into the I2C_RXDR register, and is ready to be read. It is cleared when I2C_RXDR is read.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR</name>
              <description>Address matched (slave mode)
This bit is set by hardware as soon as the received slave address matched with one of the enabled slave addresses. It is cleared by software by setting ADDRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACKF</name>
              <description>Not Acknowledge received flag
This flag is set by hardware when a NACK is received after a byte transmission. It is cleared by software by setting the NACKCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STOPF</name>
              <description>Stop detection flag
This flag is set by hardware when a Stop condition is detected on the bus and the peripheral is involved in this transfer:
either as a master, provided that the STOP condition is generated by the peripheral.
or as a slave, provided that the peripheral has been addressed previously during this transfer.
It is cleared by software by setting the STOPCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Complete (master mode)
This flag is set by hardware when RELOAD=0, AUTOEND=0 and NBYTES data have been transferred. It is cleared by software when START bit or STOP bit is set.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCR</name>
              <description>Transfer Complete Reload
This flag is set by hardware when RELOAD=1 and NBYTES data have been transferred. It is cleared by software when NBYTES is written to a non-zero value.
Note: This bit is cleared by hardware when PE=0.
This flag is only for master mode, or for slave mode when the SBC bit is set.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BERR</name>
              <description>Bus error
This flag is set by hardware when a misplaced Start or Stop condition is detected whereas the peripheral is involved in the transfer. The flag is not set during the address phase in slave mode. It is cleared by software by setting BERRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARLO</name>
              <description>Arbitration lost
This flag is set by hardware in case of arbitration loss. It is cleared by software by setting the ARLOCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR</name>
              <description>Overrun/Underrun (slave mode)
This flag is set by hardware in slave mode with NOSTRETCH=1, when an overrun/underrun error occurs. It is cleared by software by setting the OVRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PECERR</name>
              <description>PEC Error in reception
This flag is set by hardware when the received PEC does not match with the PEC register content. A NACK is automatically sent after the wrong PEC reception. It is cleared by software by setting the PECCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>Timeout or tLOW detection flag
This flag is set by hardware when a timeout or extended clock timeout occurred. It is cleared by software by setting the TIMEOUTCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALERT</name>
              <description>SMBus alert
This flag is set by hardware when SMBHEN=1 (SMBus host configuration), ALERTEN=1 and a SMBALERT event (falling edge) is detected on SMBA pin. It is cleared by software by setting the ALERTCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0. 
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>Bus busy
This flag indicates that a communication is in progress on the bus. It is set by hardware when a START condition is detected. It is cleared by hardware when a Stop condition is detected, or when PE=0.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIR</name>
              <description>Transfer direction (Slave mode)
This flag is updated when an address match event occurs (ADDR=1).
- 0: Write transfer, slave enters receiver mode.
- 1: Read transfer, slave enters transmitter mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDCODE</name>
              <description>Address match code (Slave mode)
These bits are updated with the received address when an address match event occurs (ADDR = 1).
In the case of a 10-bit address, ADDCODE provides the 10-bit header followed by the 2 MSBs of the address.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ICR</name>
          <displayName>I2C_ICR</displayName>
          <description>I2C_ICR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRCF</name>
              <description>Address matched flag clear
Writing 1 to this bit clears the ADDR flag in the I2C_ISR register. Writing 1 to this bit also clears
the START bit in the I2C_CR2 register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NACKCF</name>
              <description>Not Acknowledge flag clear
Writing 1 to this bit clears the ACKF flag in I2C_ISR register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STOPCF</name>
              <description>Stop detection flag clear
Writing 1 to this bit clears the STOPF flag in the I2C_ISR register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BERRCF</name>
              <description>Bus error flag clear
Writing 1 to this bit clears the BERRF flag in the I2C_ISR register.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARLOCF</name>
              <description>Arbitration Lost flag clear
Writing 1 to this bit clears the ARLO flag in the I2C_ISR register.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVRCF</name>
              <description>Overrun/Underrun flag clear
Writing 1 to this bit clears the OVR flag in the I2C_ISR register.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PECCF</name>
              <description>PEC Error flag clear
Writing 1 to this bit clears the PECERR flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMOUTCF</name>
              <description>Timeout detection flag clear
Writing 1 to this bit clears the TIMEOUT flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ALERTCF</name>
              <description>Alert flag clear
Writing 1 to this bit clears the ALERT flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PEC</name>
          <displayName>I2C_PEC</displayName>
          <description>I2C_PEC register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PEC</name>
              <description>Packet error checking register
This field contains the internal PEC when PECEN=1.
The PEC is cleared by hardware when PE=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_RXDR</name>
          <displayName>I2C_RXDR</displayName>
          <description>I2C_RXDR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Eight bit (8-bit) receive data
Data byte received from the I2C bus.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TXDR</name>
          <displayName>I2C_TXDR</displayName>
          <description>I2C_TXDR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Eight bits (8-bit) transmit data
Data byte to be transmitted to the I2C bus.
Note: These bits can be written only when TXE=1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2C2</name>
      <groupName>I2C2</groupName>
      <baseAddress>0x41001000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x2C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>I2C2</name>
        <description>I2C2 interrupt</description>
        <value>4</value>
      </interrupt>
      <registers>
        <register>
          <name>I2C_CR1</name>
          <displayName>I2C_CR1</displayName>
          <description>I2C_CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PE</name>
              <description>Peripheral enable
- 0: Peripheral disable
- 1: Peripheral enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIE</name>
              <description>TX Interrupt enable
- 0: Transmit (TXIS) interrupt disabled
- 1: Transmit (TXIS) interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXIE</name>
              <description>RX Interrupt enable
- 0: Receive (RXNE) interrupt disabled
- 1: Receive (RXNE) interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDRIE</name>
              <description>Address match Interrupt enable (slave only)
- 0: Address match (ADDR) interrupts disabled
- 1: Address match (ADDR) interrupts enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACKIE</name>
              <description>Not acknowledge received Interrupt enable
- 0: Not acknowledge (NACKF) received interrupts disabled
- 1: Not acknowledge (NACKF) received interrupts enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOPIE</name>
              <description>STOP detection Interrupt enable
- 0: Stop detection (STOPF) interrupt disabled
- 1: Stop detection (STOPF) interrupt enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>Transfer Complete interrupt enable
- 0: Transfer Complete interrupt disabled
- 1: Transfer Complete interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRIE</name>
              <description>Error interrupts enable
- 0: Error detection interrupts disabled
- 1: Error detection interrupts enabled
Note: Any of these errors generate an interrupt:
Arbitration Loss (ARLO)
Bus Error detection (BERR)
Overrun/Underrun (OVR)
Timeout detection (TIMEOUT)
PEC error detection (PECERR)
Alert pin event detection (ALERT)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DNF</name>
              <description>Digital noise filter
These bits are used to configure the digital noise filter on SDA and SCL input. The digital filter
will filter spikes with a length of up to DNF[3:0] * tI2CCLK
- 0000: Digital filter disabled
- 0001: Digital filter enabled and filtering capability up to 1 tI2CCLK
- 1111: digital filter enabled and filtering capability up to15 tI2CCLK</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANFOFF</name>
              <description>Analog noise filter OFF
- 0: Analog noise filter enabled
- 1: Analog noise filter disabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMAEN</name>
              <description>DMA transmission requests enable
- 0: DMA mode disabled for transmission
- 1: DMA mode enabled for transmission</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDMAEN</name>
              <description>DMA reception requests enable
- 0: DMA mode disabled for reception
- 1: DMA mode enabled for reception</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SBC</name>
              <description>Slave byte control
This bit is used to enable hardware byte control in slave mode.
- 0: Slave byte control disabled
- 1: Slave byte control enabled</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOSTRETCH</name>
              <description>Clock stretching disable
This bit is used to disable clock stretching in slave mode. It must be kept cleared in master mode.
- 0: Clock stretching enabled
- 1: Clock stretching disabled
Note: This bit can only be programmed when the I2C is disabled (PE = 0).</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GCEN</name>
              <description>General call enable
- 0: General call disabled. Address 0b00000000 is NACKed.
- 1: General call enabled. Address 0b00000000 is ACKed.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMBHEN</name>
              <description>SMBus Host address enable
- 0: Host address disabled. Address 0b0001000x is NACKed.
- 1: Host address enabled. Address 0b0001000x is ACKed.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMBDEN</name>
              <description>SMBus Device Default address enable
- 0: Device default address disabled. Address 0b1100001x is NACKed.
- 1: Device default address enabled. Address 0b1100001x is ACKed.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALERTEN</name>
              <description>SMBus alert enable
Device mode (SMBHEN=0):
- 0: Releases SMBA pin high and Alert Response Address Header disabled: 0001100x followed by NACK.
- 1: Drives SMBA pin low and Alert Response Address Header enables: 0001100x followed by ACK.
Host mode (SMBHEN=1):
- 0: SMBus Alert pin (SMBA) not supported.
- 1: SMBus Alert pin (SMBA) supported.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PECEN</name>
              <description>PEC enable
- 0: PEC calculation disabled
- 1: PEC calculation enabled</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_CR2</name>
          <displayName>I2C_CR2</displayName>
          <description>I2C_CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SADD</name>
              <description>Slave address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_WRN</name>
              <description>Transfer direction (master mode)
- 0: Master requests a write transfer.
- 1: Master requests a read transfer.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADD10</name>
              <description>Ten-bit addressing mode (master mode)
- 0: The master operates in 7-bit addressing mode,
- 1: The master operates in 10-bit addressing mode</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HEAD10R</name>
              <description>Ten bit (10-bit) address header only read direction (master receiver mode)
- 0: The master sends the complete 10 bit slave address read sequence: Start + 2 bytes 10bit address in write direction + Restart + 1st 7 bits of the 10 bit address in read direction.
- 1: The master only sends the 1st 7 bits of the 10 bit address, followed by Read direction.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>Start generation
This bit is set by software, and cleared by hardware after the Start followed by the address sequence is sent, by an arbitration loss, by a timeout error detection, or when PE = 0. It can also be cleared by software by writing 1 to the ADDRCF bit in the I2C_ICR register.
- 0: No Start generation.
- 1: Restart/Start generation:
If the I2C is already in master mode with AUTOEND = 0, setting this bit generates a Repeated Start condition when RELOAD=0, after the end of the NBYTES transfer.
Otherwise setting this bit will generate a START condition once the bus is free.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP</name>
              <description>Stop generation (master mode)
The bit is set by software, cleared by hardware when a Stop condition is detected, or when PE = 0.
In Master Mode:
- 0: No Stop generation.
- 1: Stop generation after current byte transfer.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK</name>
              <description>NACK generation (slave mode)
The bit is set by software, cleared by hardware when the NACK is sent, or when a STOP
condition or an Address matched is received, or when PE=0.
- 0: an ACK is sent after current received byte.
- 1: a NACK is sent after current received byte.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NBYTES</name>
              <description>Number of bytes
The number of bytes to be transmitted/received is programmed there. This field is dont care in
slave mode with SBC=0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RELOAD</name>
              <description>NBYTES reload mode
This bit is set and cleared by software.
- 0: The transfer is completed after the NBYTES data transfer (STOP or RESTART will follow).
- 1: The transfer is not completed after the NBYTES data transfer (NBYTES will be reloaded).
TCR flag is set when NBYTES data are transferred, stretching SCL low.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOEND</name>
              <description>Automatic end mode (master mode)
This bit is set and cleared by software.
- 0: software end mode: TC flag is set when NBYTES data are transferred, stretching SCL low.
- 1: Automatic end mode: a STOP condition is automatically sent when NBYTES data are
transferred.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PECBYTE</name>
              <description>Packet error checking byte
This bit is set by software, and cleared by hardware when the PEC is transferred, or when a
STOP condition or an Address matched is received, also when PE=0.
- 0: No PEC transfer.
- 1: PEC transmission/reception is requested</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OAR1</name>
          <displayName>I2C_OAR1</displayName>
          <description>I2C_OAR1 register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OA1</name>
              <description>Interface address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA1MODE</name>
              <description>Own Address 1 10-bit mode
- 0: Own address 1 is a 7-bit address.
- 1: Own address 1 is a 10-bit address.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA1EN</name>
              <description>Own Address 1 enable
- 0: Own address 1 disabled. The received slave address OA1 is NACKed.
- 1: Own address 1 enabled. The received slave address OA1 is ACKed.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_OAR2</name>
          <displayName>I2C_OAR2</displayName>
          <description>I2C_OAR2 register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>OA2</name>
              <description>Interface address
bits 7:1 of address
Note: These bits can be written only when OA2EN=0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA2MSK</name>
              <description>Own Address 2 masks
- 000: No mask
- 001: OA2[1] is masked and dont care. Only OA2[7:2] are compared.
- 010: OA2[2:1] are masked and dont care. Only OA2[7:3] are compared.
- 011: OA2[3:1] are masked and dont care. Only OA2[7:4] are compared.
- 100: OA2[4:1] are masked and dont care. Only OA2[7:5] are compared.
- 101: OA2[5:1] are masked and dont care. Only OA2[7:6] are compared.
- 110: OA2[6:1] are masked and dont care. Only OA2[7] is compared.
- 111: OA2[7:1] are masked and dont care. No comparison is done, and all (except reserved) 7-bit received addresses are acknowledged.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OA2EN</name>
              <description>Own Address 2 enable
- 0: Own address 2 disabled. The received slave address OA2 is NACKed.
- 1: Own address 2 enabled. The received slave address OA2 is ACKed.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMING</name>
          <displayName>I2C_TIMING</displayName>
          <description>I2C_TIMING register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SCLL</name>
              <description>SCL low period (master mode)
This field is used to generate the SCL low period in master mode.
tSCLL = (SCLL+1) x tPRESC
Note: SCLL is also used to generate tBUF and tSU:STA timings.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLH</name>
              <description>SCL high period (master mode)
This field is used to generate the SCL high period in master mode.
tSCLH = (SCLH+1) x tPRESC
Note: SCLH is also used to generate tSU:STO and tHD:STA timing.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDADEL</name>
              <description>Data hold time
This field is used to generate the delay tSDADEL between SCL falling edge SDA edge in
transmission mode.
tSDADEL= SDADEL x tPRESC
Note: SDADEL is used to generate tHD:DAT timing.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLDEL</name>
              <description>Data setup time
This field is used to generate a delay tSCLDEL between SDA edge and SCL rising edge in
transmission mode.
tSCLDEL = (SCLDEL+1) x tPRESC
Note: tSCLDEL is used to generate tSU:DAT timing.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PRESC</name>
              <description>Timing prescaler
This field is used to prescale I2CCLK in order to generate the clock period tPRESC used for data
setup and hold counters and for SCL high and low level
counters
tPRESC = (PRESC+1) x tI2CCLK</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TIMEOUT</name>
          <displayName>I2C_TIMEOUT</displayName>
          <description>I2C_TIMEOUT register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TIMEOUTA</name>
              <description>Bus Timeout A
This field is used to configure:
The SCL low timeout condition tTIMEOUT when TIDLE=0
tTIMEOUT= (TIMEOUTA+1) x 2048 x tI2CCLK
The bus idle condition (both SCL and SDA high) when TIDLE=1
tIDLE= (TIMEOUTA+1) x 4 x tI2CCLK
Note: These bits can be written only when TIMOUTEN=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIDLE</name>
              <description>Idle clock timeout detection
- 0: TIMEOUTA is used to detect SCL low timeout
- 1: TIMEOUTA is used to detect both SCL and SDA high timeout (bus idle condition)
Note: This bit can be written only when TIMOUTEN=0.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUTEN</name>
              <description>Clock timeout enable
- 0: SCL timeout detection is disabled
- 1: SCL timeout detection is enabled: when SCL is low for more than tTIMEOUT (TIDLE=0) or
high for more than tIDLE (TIDLE=1), a timeout error is detected (TIMEOUT=1).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMEOUTB</name>
              <description>Bus timeout B
This field is used to configure the cumulative clock extension timeout:
In master mode, the master cumulative clock low extend time (tLOW:MEXT) is detected
In slave mode, the slave cumulative clock low extend time (tLOW:SEXT) is detected
tLOW:EXT= (TIMEOUTB+1) x 2048 x tI2CCLK
Note: These bits can be written only when TEXTEN=0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEXTEN</name>
              <description>Extended clock timeout enable
- 0: Extended clock timeout detection is disabled
- 1: Extended clock timeout detection is enabled. When a cumulative SCL stretch for more
than tLOW:EXT is done by the I2C interface, a timeout error is detected (TIMEOUT=1).</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ISR</name>
          <displayName>I2C_ISR</displayName>
          <description>I2C_ISR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TXE</name>
              <description>Transmit data register empty (transmitters)
This bit is set by hardware when the I2C_TXDR register is empty. It is cleared when the next data to be sent is written in the I2C_TXDR register.
This bit can be written to 1 by software in order to flush the transmit data register I2C_TXDR.
Note: This bit is set by hardware when PE=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIS</name>
              <description>Transmit interrupt status (transmitters)
This bit is set by hardware when the I2C_TXDR register is empty and the data to be transmitted must be written in the I2C_TXDR register. It is cleared when the next data to be sent is written in the I2C_TXDR register.
This bit can be written to 1 by software when NOSTRETCH=1 only, in order to generate a TXIS event (interrupt if TXIE=1 or DMA request if TXDMAEN=1).
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNE</name>
              <description>Receive data register not empty (receivers)
This bit is set by hardware when the received data is copied into the I2C_RXDR register, and is ready to be read. It is cleared when I2C_RXDR is read.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDR</name>
              <description>Address matched (slave mode)
This bit is set by hardware as soon as the received slave address matched with one of the enabled slave addresses. It is cleared by software by setting ADDRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NACKF</name>
              <description>Not Acknowledge received flag
This flag is set by hardware when a NACK is received after a byte transmission. It is cleared by software by setting the NACKCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>STOPF</name>
              <description>Stop detection flag
This flag is set by hardware when a Stop condition is detected on the bus and the peripheral is involved in this transfer:
either as a master, provided that the STOP condition is generated by the peripheral.
or as a slave, provided that the peripheral has been addressed previously during this transfer.
It is cleared by software by setting the STOPCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Complete (master mode)
This flag is set by hardware when RELOAD=0, AUTOEND=0 and NBYTES data have been transferred. It is cleared by software when START bit or STOP bit is set.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCR</name>
              <description>Transfer Complete Reload
This flag is set by hardware when RELOAD=1 and NBYTES data have been transferred. It is cleared by software when NBYTES is written to a non-zero value.
Note: This bit is cleared by hardware when PE=0.
This flag is only for master mode, or for slave mode when the SBC bit is set.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BERR</name>
              <description>Bus error
This flag is set by hardware when a misplaced Start or Stop condition is detected whereas the peripheral is involved in the transfer. The flag is not set during the address phase in slave mode. It is cleared by software by setting BERRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARLO</name>
              <description>Arbitration lost
This flag is set by hardware in case of arbitration loss. It is cleared by software by setting the ARLOCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR</name>
              <description>Overrun/Underrun (slave mode)
This flag is set by hardware in slave mode with NOSTRETCH=1, when an overrun/underrun error occurs. It is cleared by software by setting the OVRCF bit.
Note: This bit is cleared by hardware when PE=0.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PECERR</name>
              <description>PEC Error in reception
This flag is set by hardware when the received PEC does not match with the PEC register content. A NACK is automatically sent after the wrong PEC reception. It is cleared by software by setting the PECCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIMEOUT</name>
              <description>Timeout or tLOW detection flag
This flag is set by hardware when a timeout or extended clock timeout occurred. It is cleared by software by setting the TIMEOUTCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ALERT</name>
              <description>SMBus alert
This flag is set by hardware when SMBHEN=1 (SMBus host configuration), ALERTEN=1 and a SMBALERT event (falling edge) is detected on SMBA pin. It is cleared by software by setting the ALERTCF bit.
Note: This bit is cleared by hardware when PE=0.
If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0. 
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>Bus busy
This flag indicates that a communication is in progress on the bus. It is set by hardware when a START condition is detected. It is cleared by hardware when a Stop condition is detected, or when PE=0.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIR</name>
              <description>Transfer direction (Slave mode)
This flag is updated when an address match event occurs (ADDR=1).
- 0: Write transfer, slave enters receiver mode.
- 1: Read transfer, slave enters transmitter mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ADDCODE</name>
              <description>Address match code (Slave mode)
These bits are updated with the received address when an address match event occurs (ADDR = 1).
In the case of a 10-bit address, ADDCODE provides the 10-bit header followed by the 2 MSBs of the address.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_ICR</name>
          <displayName>I2C_ICR</displayName>
          <description>I2C_ICR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDRCF</name>
              <description>Address matched flag clear
Writing 1 to this bit clears the ADDR flag in the I2C_ISR register. Writing 1 to this bit also clears
the START bit in the I2C_CR2 register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NACKCF</name>
              <description>Not Acknowledge flag clear
Writing 1 to this bit clears the ACKF flag in I2C_ISR register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>STOPCF</name>
              <description>Stop detection flag clear
Writing 1 to this bit clears the STOPF flag in the I2C_ISR register.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BERRCF</name>
              <description>Bus error flag clear
Writing 1 to this bit clears the BERRF flag in the I2C_ISR register.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARLOCF</name>
              <description>Arbitration Lost flag clear
Writing 1 to this bit clears the ARLO flag in the I2C_ISR register.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>OVRCF</name>
              <description>Overrun/Underrun flag clear
Writing 1 to this bit clears the OVR flag in the I2C_ISR register.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PECCF</name>
              <description>PEC Error flag clear
Writing 1 to this bit clears the PECERR flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIMOUTCF</name>
              <description>Timeout detection flag clear
Writing 1 to this bit clears the TIMEOUT flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ALERTCF</name>
              <description>Alert flag clear
Writing 1 to this bit clears the ALERT flag in the I2C_ISR register.
Note: If the SMBus feature is not supported, this bit is reserved and forced by hardware to 0.
Please refer to Section 22.3: I2C implementation.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_PEC</name>
          <displayName>I2C_PEC</displayName>
          <description>I2C_PEC register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PEC</name>
              <description>Packet error checking register
This field contains the internal PEC when PECEN=1.
The PEC is cleared by hardware when PE=0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_RXDR</name>
          <displayName>I2C_RXDR</displayName>
          <description>I2C_RXDR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RXDATA</name>
              <description>Eight bit (8-bit) receive data
Data byte received from the I2C bus.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_TXDR</name>
          <displayName>I2C_TXDR</displayName>
          <description>I2C_TXDR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TXDATA</name>
              <description>Eight bits (8-bit) transmit data
Data byte to be transmitted to the I2C bus.
Note: These bits can be written only when TXE=1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>IWDG</name>
      <groupName>IWDG</groupName>
      <baseAddress>0x40003000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x14</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>IWDG_KR</name>
          <displayName>IWDG_KR</displayName>
          <description>IWDG_KR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>Key value.
Software can only write these bits. Reading returns the reset value.
These bits must be written by software at regular intervals with the key value 0xAAAA, otherwise the watchdog generates a reset when the counter reaches 0.
Writing the key value 0x5555 to enables access to the IWDG_PR, IWDG_RLR and IWDG_WINR registers.
Writing the key value CCCCh starts the watchdog</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_PR</name>
          <displayName>IWDG_PR</displayName>
          <description>IWDG_PR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PR</name>
              <description>Prescaler divider.
Set and reset by software.
These bits are write access protected. They are written by software to select the prescaler divider feeding the counter clock. 
PVU bit of IWDG_SR must be reset in order to be able to change the prescaler divider.
000: divider/4
001: divider/8
010: divider/16
011: divider/32
100: divider/64
101: divider/128
110: divider/256
111: divider/256</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_RLR</name>
          <displayName>IWDG_RLR</displayName>
          <description>IWDG_RLR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>RL</name>
              <description>Watchdog counter reload value.
Set and reset by software. 
These bits are write access protected. They are written by software to define the value to be loaded in the watchdog counter each time the value 0xAAAA is written in the IWDG_KR register. The watchdog counter counts down from this value.
The timeout period is a function of this value and the clock prescaler.
The RVU bit in the IWDG_SR register must be reset in order to be able to change the reload value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_SR</name>
          <displayName>IWDG_SR</displayName>
          <description>IWDG_SR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PVU</name>
              <description>Watchdog prescaler value update.
Read only bit.
This bit is set by hardware to indicate that an update of the prescaler value is ongoing. It is
reset by hardware when the prescaler update operation is completed in the VDD voltage
domain (takes up to 5 RC 40 kHz cycles).
Prescaler value can be updated only when PVU bit is reset</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RVU</name>
              <description>Watchdog counter reload value update.
Read only bit.
This bit is set by hardware to indicate that an update of the reload value is ongoing. It is reset by hardware when the reload value update operation is completed in the VDD voltage domain (takes up to 5 RC 40 kHz cycles).
Reload value can be updated only when RVU bit is reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WVU</name>
              <description>Watchdog counter window value update.
Read only bit.
This bit is set by hardware to indicate that an update of the window value is ongoing. It is reset by hardware when the reload value update operation is completed in the VDD voltage domain (takes up to 5 RC 40 kHz cycles).
Window value can be updated only when WVU bit is reset.
This bit is generated only if generic 'window' = 1</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWDG_WINR</name>
          <displayName>IWDG_WINR</displayName>
          <description>IWDG_WINR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>WIN</name>
              <description>Watchdog counter window value.
Set and reset by software. 
These bits are write access protected. These bits contain the high limit of the window value to be compared to the downcounter.
To prevent a reset, the downcounter must be reloaded when its value is lower than the window register value and greater than 0x0
The WVU bit in the IWDG_SR register must be reset in order to be able to change the reload value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LCD</name>
      <groupName>LCD</groupName>
      <baseAddress>0x40007000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x54</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LCD</name>
        <description>LCD interrupt</description>
        <value>27</value>
      </interrupt>
      <registers>
        <register>
          <name>LCD_CR</name>
          <displayName>LCD_CR</displayName>
          <description>LCD_CR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LCDEN</name>
              <description>LCD controller enable
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VSEL</name>
              <description>Voltage source selection
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DUTY</name>
              <description>Duty selection
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS</name>
              <description>Bias selector
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BUFEN</name>
              <description>Voltage output buffer enable
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_FCR</name>
          <displayName>LCD_FCR</displayName>
          <description>LCD_FCR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>HD</name>
              <description>High drive enable
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SOFIE</name>
              <description>Start of frame interrupt enable
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UDDIE</name>
              <description>Update display done interrupt enable
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PON</name>
              <description>Pulse ON duration
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEAD</name>
              <description>Dead time duration
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Contrast control
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLINKF</name>
              <description>Blink frequency selection
</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>fLCD/8</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLINK</name>
              <description>Blink mode selection
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIV</name>
              <description>DIV clock divider
</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PS</name>
              <description>PS 16-bit prescaler
</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_SR</name>
          <displayName>LCD_SR</displayName>
          <description>LCD_SR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000020</resetValue>
          <fields>
            <field>
              <name>ENS</name>
              <description>LCD enabled status
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SOF</name>
              <description>Start of frame flag
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UDR</name>
              <description>Update display request
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UDD</name>
              <description>Update Display Done
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RDY</name>
              <description>Ready flag
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FCRSF</name>
              <description>LCD Frame Control Register Synchronization flag
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CLR</name>
          <displayName>LCD_CLR</displayName>
          <description>LCD_CLR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SOFC</name>
              <description>Start of frame flag clear
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>UDDC</name>
              <description>Update display done clear
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM0</name>
          <displayName>LCD_RAM_COM0</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM1</name>
          <displayName>LCD_RAM_COM1</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM2</name>
          <displayName>LCD_RAM_COM2</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM3</name>
          <displayName>LCD_RAM_COM3</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM4</name>
          <displayName>LCD_RAM_COM4</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM5</name>
          <displayName>LCD_RAM_COM5</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM6</name>
          <displayName>LCD_RAM_COM6</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_RAM_COM7</name>
          <displayName>LCD_RAM_COM7</displayName>
          <description>LCD_RAM_COMx register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEGMENT_DATA</name>
              <description>Each bit corresponds to one pixel of the LCD display.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LPUART</name>
      <groupName>LPUART</groupName>
      <baseAddress>0x41005000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LPUART</name>
        <description>LPUART interrupt</description>
        <value>9</value>
      </interrupt>
      <registers>
        <register>
          <name>CR1</name>
          <displayName>CR1</displayName>
          <description>CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>UE</name>
              <description>UE: USART enable
When this bit is cleared, the USART prescalers and outputs are stopped immediately, and
current operations are discarded. The configuration of the USART is kept, but all the status
flags, in the USART_ISR are reset. This bit is set and cleared by software.
-0: USART prescaler and outputs disabled, low power mode
-1: USART enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UESM</name>
              <description>UESM: LPUART enable in Stop mode
When this bit is cleared, the LPUART is not able to wake up the MCU from Stop mode.
When this bit is set, the LPUART is able to wake up the MCU from Stop mode, provided that
the LPUART clock selection is LSE in the RCC.
This bit is set and cleared by software.
-0: LPUART not able to wake up the MCU from Stop mode.
-1: LPUART able to wake up the MCU from Stop mode. When this function is active, the
clock source for the LPUART must be LSE (see RCC chapter)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RE</name>
              <description>RE: Receiver enable
This bit enables the receiver. It is set and cleared by software.
-0: Receiver is disabled
-1: Receiver is enabled and begins searching for a start bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TE</name>
              <description>TE: Transmitter enable
This bit enables the transmitter. It is set and cleared by software.
-0: Transmitter is disabled
-1: Transmitter is enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLEIE</name>
              <description>IDLEIE: IDLE interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever IDLE=1 in the USART_ISR register</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNEIE_RXFNEIE</name>
              <description>RXNEIE/RXFNEIE: Receive data register not empty/RXFIFO not empty interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated whenever ORE=1 or RXNE/RXFNE=1 in the
USART_ISR register</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transmission complete interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever TC=1 in the USART_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIE_TXFNFIE</name>
              <description>TXEIE/TXFNFIE: Transmit data regsiter empty/TXFIFO not full interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever TXE/TXFNF =1 in the USART_ISR register</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEIE</name>
              <description>PEIE: PE interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever PE=1 in the USART_ISR register</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PS</name>
              <description>PS: Parity selection
This bit selects the odd or even parity when the parity generation/detection is enabled (PCE
bit set). It is set and cleared by software. The parity will be selected after the current byte.
-0: Even parity
-1: Odd parity
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCE</name>
              <description>PCE: Parity control enable
This bit selects the hardware parity control (generation and detection). When the parity
control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit
if M=0) and parity is checked on the received data. This bit is set and cleared by software.
Once it is set, PCE is active after the current byte (in reception and in transmission).
-0: Parity control disabled
-1: Parity control enabled
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKE</name>
              <description>WAKE: Receiver wakeup method
This bit determines the USART wakeup method from Mute mode. It is set or cleared by
software.
-0: Idle line
-1: Address mark
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>M_0</name>
              <description>M0: Word length
This bit, with bit 28 (M1) determine the word length. It is set or cleared by software. See Bit
-28 (M1)description.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MME</name>
              <description>MME: Mute mode enable
This bit activates the mute mode function of the USART. When set, the USART can switch
between the active and mute modes, as defined by the WAKE bit. It is set and cleared by
software.
-0: Receiver in active mode permanently
-1: Receiver can switch between mute mode and active mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMIE</name>
              <description>CMIE: Character match interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated when the CMF bit is set in the USART_ISR register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEDT</name>
              <description>DEDT[4:0]: Driver Enable deassertion time
This 5-bit value defines the time between the end of the last stop bit, in a transmitted
message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample
time units (1/8 or 1/16 bit time, depending on the oversampling rate).
If the USART_TDR register is written during the DEDT time, the new data is transmitted only
when the DEDT and DEAT times have both elapsed.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEAT</name>
              <description>DEAT[4:0]: Driver Enable assertion time
This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and
the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time,
depending on the oversampling rate).
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>21</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>M_1</name>
              <description>Word length
This bit, with bit 12 (M0) determine the word length. It is set or cleared by software.
M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit
M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit
M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit
This bit can only be written when the USART is disabled (UE=0).s</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFOEN</name>
              <description>FIFOEN :FIFO mode enable
This bit is set and cleared by software.
-0: FIFO mode is disabled.
-1: FIFO mode is enabled.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFEIE</name>
              <description>TXFEIE :TXFIFO empty interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when TXFE=1 in the USART_ISR register</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFFIE</name>
              <description>RXFFIE :RXFIFO Full interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when RXFF=1 in the USART_ISR register</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR2</name>
          <displayName>CR2</displayName>
          <description>CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ADDM7</name>
              <description>ADDM7:7-bit Address Detection/4-bit Address Detection
This bit is for selection between 4-bit address detection or 7-bit address detection.
-0: 4-bit address detection
-1: 7-bit address detection (in 8-bit data mode)
This bit can only be written when the USART is disabled (UE=0)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP</name>
              <description>STOP[1:0]: STOP bits
These bits are used for programming the stop bits.
-00: 1 stop bit
-01: 0.5 stop bit.
-10: 2 stop bits
-11: 1.5 stop bits
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWAP</name>
              <description>SWAP: Swap TX/RX pins
This bit is set and cleared by software.
-0: TX/RX pins are used as defined in standard pinout
-1: The TX and RX pins functions are swapped. This allows to work in the case of a cross-wired
connection to another UART.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXINV</name>
              <description>RXINV: RX pin active level inversion
This bit is set and cleared by software.
-0: RX pin signal works using the standard logic levels (VDD =1/idle, Gnd=0/mark)
-1: RX pin signal values are inverted. ((VDD =0/mark, Gnd=1/idle).
This allows the use of an external inverter on the RX line.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXINV</name>
              <description>TXINV: TX pin active level inversion
This bit is set and cleared by software.
-0: TX pin signal works using the standard logic levels (VDD =1/idle, Gnd=0/mark)
-1: TX pin signal values are inverted. ((VDD =0/mark, Gnd=1/idle).
This allows the use of an external inverter on the TX line.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAINV</name>
              <description>DATAINV: Binary data inversion
This bit is set and cleared by software.
-0: Logical data from the data register are send/received in positive/direct logic. (1=H, 0=L)
-1: Logical data from the data register are send/received in negative/inverse logic. (1=L, 0=H). The
parity bit is also inverted.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBFIRST</name>
              <description>MSBFIRST: Most significant bit first
This bit is set and cleared by software.
-0: data is transmitted/received with data bit 0 first, following the start bit.
-1: data is transmitted/received with the MSB (bit 7/8) first, following the start bit.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADD</name>
              <description>ADD[7:0]: Address of the USART node
This bit-field gives the address of the USART node or a character code to be recognized.
This is used in multiprocessor communication during Mute mode or Stop mode, for wakeup with 7-
bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1.
It may also be used for character detection during normal reception, Mute mode inactive (for
example, end of block detection in ModBus protocol). In this case, the whole received character (8-
bit) is compared to the ADD[7:0] value and CMF flag is set on match.
This bit field can only be written when reception is disabled (RE = 0) or the USART is disabled
(UE=0)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR3</name>
          <displayName>CR3</displayName>
          <description>CR3 register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EIE</name>
              <description>EIE: Error interrupt enable
Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing
error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NF=1or UDR
= 1 in the USART_ISR register).
-0: Interrupt is inhibited
-1: An interrupt is generated when FE=1 or ORE=1 or NF=1 or UDR = 1 (in SPI slave mode)
in the USART_ISR register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HDSEL</name>
              <description>HDSEL: Half-duplex selection
Selection of Single-wire Half-duplex mode
-0: Half duplex mode is not selected
-1: Half duplex mode is selected
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAR</name>
              <description>DMAR: DMA enable receiver
This bit is set/reset by software
-1: DMA mode is enabled for reception
-0: DMA mode is disabled for reception</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAT</name>
              <description>DMAT: DMA enable transmitter
This bit is set/reset by software
-1: DMA mode is enabled for transmission
-0: DMA mode is disabled for transmission</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTSE</name>
              <description>RTSE: RTS enable
-0: RTS hardware flow control disabled
-1: RTS output enabled, data is only requested when there is space in the receive buffer. The
transmission of data is expected to cease after the current character has been transmitted.
The nRTS output is asserted (pulled to 0) when data can be received.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSE</name>
              <description>CTSE: CTS enable
-0: CTS hardware flow control disabled
-1: CTS mode enabled, data is only transmitted when the nCTS input is asserted (tied to 0).
If the nCTS input is deasserted while data is being transmitted, then the transmission is
completed before stopping. If data is written into the data register while nCTS is asserted,
the transmission is postponed until nCTS is asserted.
This bit can only be written when the USART is disabled (UE=0)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSIE</name>
              <description>CTSIE: CTS interrupt enable
-0: Interrupt is inhibited
-1: An interrupt is generated whenever CTSIF=1 in the USART_ISR register</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVRDIS</name>
              <description>OVRDIS: Overrun Disable
This bit is used to disable the receive overrun detection.
-0: Overrun Error Flag, ORE, is set when received data is not read before receiving new
data. 
-1: Overrun functionality is disabled. If new data is received while the RXNE flag is still set
the ORE flag is not set and the new received data overwrites the previous content of the
USART_RDR register. When FIFO mode is enabled, the RXFIFO will be bypassed and data
will be written directly in USARTx_RDR register. Even when FIFO management is enabled,
the RXNE flag is to be used.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DDRE</name>
              <description>DDRE: DMA Disable on Reception Error
-0: DMA is not disabled in case of reception error. The corresponding error flag is set but
RXNE is kept 0 preventing from overrun. As a consequence, the DMA request is not
asserted, so the erroneous data is not transferred (no DMA request), but next correct
received data will be transferred. (used for Smartcard mode)
-1: DMA is disabled following a reception error. The corresponding error flag is set, as well
as RXNE. The DMA request is masked until the error flag is cleared. This means that the
software must first disable the DMA request (DMAR = 0) or clear RXNE(RXFNE is case
FIFO mode is enabled) before clearing the error flag.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEM</name>
              <description>DEM: Driver enable mode
This bit allows the user to activate the external transceiver control, through the DE signal.
-0: DE function is disabled. 
-1: DE function is enabled. The DE signal is output on the RTS pin.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEP</name>
              <description>DEP: Driver enable polarity selection
-0: DE signal is active high.
-1: DE signal is active low.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUS</name>
              <description>WUS[1:0]: Wakeup from Stop mode interrupt flag selection
This bit-field specify the event which activates the WUF (Wakeup from Stop mode flag).
-00: WUF active on address match (as defined by ADD[7:0] and ADDM7)
-01:Reserved.
-10: WUF active on Start bit detection
-11: WUF active on RXNE.
This bit field can only be written when the LPUART is disabled (UE=0).</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUFIE</name>
              <description>WUFIE: Wakeup from Stop mode interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An LPUART interrupt is generated whenever WUF=1 in the LPUART_ISR register</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTIE</name>
              <description>TXFTIE: TXFIFO threshold interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when TXFIFO reaches the threshold programmed in
TXFTCFG.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFTCFG</name>
              <description>RXFTCFG: Receive FIFO threshold configuration
-000:Receive FIFO reaches 1/8 of its depth.
-001:Receive FIFO reaches 1/4 of its depth.
-010:Receive FIFO reaches 1/2 of its depth.
-011:Receive FIFO reaches 3/4 of its depth.
-100:Receive FIFO reaches 7/8 of its depth.
-101:Receive FIFO becomes full.
Remaining combinations: Reserved.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFTIE</name>
              <description>RXFTIE: RXFIFO threshold interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when Receive FIFO reaches the threshold
programmed in RXFTCFG.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTCFG</name>
              <description>TXFTCFG: TXFIFO threshold configuration
-000:TXFIFO reaches 1/8 of its depth.
-001:TXFIFO reaches 1/4 of its depth.
-010:TXFIFO reaches 1/2 of its depth.
-011:TXFIFO reaches 3/4 of its depth.
-100:TXFIFO reaches 7/8 of its depth.
-101:TXFIFO becomes empty.
Remaining combinations: Reserved.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRR</name>
          <displayName>BRR</displayName>
          <description>BRR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BRR</name>
              <description>BRR[19:0]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RQR</name>
          <displayName>RQR</displayName>
          <description>RQR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SBKRQ</name>
              <description>SBKRQ: Send break request
Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as
the transmit machine is available.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MMRQ</name>
              <description>MMRQ: Mute mode request
Writing 1 to this bit puts the USART in mute mode and resets the RWU flag.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFRQ</name>
              <description>RXFRQ: Receive data flush request
Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE.
This allows to discard the received data without reading them, and avoid an overrun
condition.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFRQ</name>
              <description>TXFRQ: Transmit data flush request
When FIFO mode is disabled, Writing 1 to this bit sets the TXE flag.
This allows to discard the transmit data. This bit must be used only in Smartcard mode,
when data has not been sent due to errors (NACK) and the FE flag is active in the
USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved
and forced by hardware to 0
When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO . This will set the flag TXFE
(Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is
supported in both UART and Smartcard modes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <displayName>ISR</displayName>
          <description>ISR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000C0</resetValue>
          <fields>
            <field>
              <name>PE</name>
              <description>PE: Parity error
This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by
software, writing 1 to the PECF in the USART_ICR register. 
An interrupt is generated if PEIE = 1 in the USART_CR1 register.
-0: No parity error
-1: Parity error</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>FE: Framing error
This bit is set by hardware when a de-synchronization, excessive noise or a break character
is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register.
In Smartcard mode, in transmission, this bit is set when the maximum number of transmit
attempts is reached without success (the card NACKs the data frame).
An interrupt is generated if EIE = 1 in the USART_CR1 register.
-0: No Framing error is detected
-1: Framing error or break character is detected</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NF</name>
              <description>NF: START bit Noise detection flag
This bit is set by hardware when noise is detected on a received frame. It is cleared by
software, writing 1 to the NFCF bit in the USART_ICR register.
-0: No noise is detected
-1: Noise is detected</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ORE</name>
              <description>ORE: Overrun error
This bit is set by hardware when the data currently being received in the shift register is
ready to be transferred into the USARTx_RDR register while RXNE=1 (RXFF = 1 in case
FIFO mode is enabled) . It is cleared by a software, writing 1 to the ORECF, in the
USARTx_ICR register.
An interrupt is generated if RXNEIE/ RXFNEIE=1 or EIE = 1 in the USARTx_CR1 register.
-0: No overrun error
-1: Overrun error is detected</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDLE</name>
              <description>IDLE: Idle line detected
This bit is set by hardware when an Idle Line is detected. An interrupt is generated if
IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in
the USART_ICR register.
-0: No Idle line is detected
-1: Idle line is detected</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNE_RXFNE</name>
              <description>RXNE/RXFNE:Read data register not empty/RXFIFO not empty
RXNE bit is set by hardware when the content of the USARTx_RDR shift register has been
transferred
to the USARTx_RDR register. It is cleared by a read to the USARTx_RDR register. The
RXNE flag can also be cleared by writing 1 to the RXFRQ in the USARTx_RQR register.
RXFNE bit is set by hardware when the RXFIFO is not empty, and so data can be read from
the USART_RDR register. Every read of the USART_RDR frees a location in the RXFIFO. It
is cleared when the RXFIFO is empty.
The RXNE/RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR
register.
An interrupt is generated if RXNEIE/RXFNEIE=1 in the USART_CR1 register.
-0: Data is not received
-1: Received data is ready to be read.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TC</name>
              <description>TC: Transmission complete
This bit indicates when the last data written in the USART_TDR has been transmitted out of
the shift register.
It is set by hardware if the transmission of a frame containing data is complete and if
TXE/TXFE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. It is
cleared by software, writing 1 to the TCCF in the USART_ICR register or by a write to the
USART_TDR register.
An interrupt is generated if TCIE=1 in the USART_CR1 register.
-0: Transmission is not complete
-1: Transmission is complete</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE_TXFNF</name>
              <description>TXE/TXFNF: Transmit data register empty/TXFIFO not full
When FIFO mode is disabled, TXE is set by hardware when the content of the
USARTx_TDR register has been transferred into the shift register. It is cleared by a write to
the USARTx_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the
USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of
transmission failure).
When FIFO mode is enabled, TXFNF is set by hardware when TXFIFO is not full, and so
data can be written in the USART_TDR. Every write in the USART_TDR places the data in
the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag
is cleared indicating that data can not be written into the USART_TDR.
Note: The TXFNF is kept reset during the flush request until TXFIFO is empty . After
sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to
writing in TXFIFO. (TXFNF and TXFE will be set at the same time).
An interrupt is generated if the TXEIE/TXFNFIE bit =1 in the USART_CR1 register.
-0: Data register is full/Transmit FIFO is full.
-1: Data register/Transmit FIFO is not full</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTSIF</name>
              <description>CTSIF: CTS interrupt flag
This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared
by software, by writing 1 to the CTSCF bit in the USART_ICR register.
An interrupt is generated if CTSIE=1 in the USART_CR3 register.
-0: No change occurred on the nCTS status line
-1: A change occurred on the nCTS status line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTS</name>
              <description>CTS: CTS flag
This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin.
-0: nCTS line set
-1: nCTS line reset</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>BUSY: Busy flag
This bit is set and reset by hardware. It is active when a communication is ongoing on the
RX line (successful start bit detected). It is reset at the end of the reception (successful or
not).
-0: USART is idle (no reception)
-1: Reception on going</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMF</name>
              <description>CMF: Character match flag
This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is
cleared by software, writing 1 to the CMCF in the USART_ICR register.
An interrupt is generated if CMIE=1in the USART_CR1 register.
-0: No Character match detected
-1: Character Match detected</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SBKF</name>
              <description>SBKF: Send break flag
This bit indicates that a send break character was requested. It is set by software, by writing
1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during
the stop bit of break transmission.
-0: No break character is transmitted
-1: Break character will be transmitted</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RWU</name>
              <description>RWU: Receiver wakeup from Mute mode
This bit indicates if the USART is in mute mode. It is cleared/set by hardware when a
wakeup/mute sequence is recognized. The mute mode control sequence (address or IDLE)
is selected by the WAKE bit in the USART_CR1 register.
When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the
MMRQ bit in the USART_RQR register.
-0: Receiver in active mode
-1: Receiver in mute mode</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WUF</name>
              <description>WUF: Wakeup from Stop mode flag
This bit is set by hardware, when a wakeup event is detected. The event is defined by the
WUS bit field. It is cleared by software, writing a 1 to the WUCF in the LPUART_ICR register.
An interrupt is generated if WUFIE=1 in the LPUART_CR3 register</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEACK</name>
              <description>TEACK: Transmit enable acknowledge flag
This bit is set/reset by hardware, when the Transmit Enable value is taken into account by
the USART.
It can be used when an idle frame request is generated by writing TE=0, followed by TE=1
in the USART_CR1 register, in order to respect the TE=0 minimum period.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REACK</name>
              <description>REACK: Receive enable acknowledge flag
This bit is set/reset by hardware, when the Receive Enable value is taken into account by
the USART.
It can be used to verify that the USART is ready for reception before entering Stop mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFE</name>
              <description>TXFE: TXFIFO Empty
This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one
data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in
the USART_RQR register.
An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
-0: TXFIFO is not empty.
-1: TXFIFO is empty.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFF</name>
              <description>RXFF: RXFIFO Full
This bit is set by hardware when RXFIFO is Full.
An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
-0: RXFIFO is not Full.
-1: RXFIFO is Full.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFT</name>
              <description>RXFT: RXFIFO threshold flag
This bit is set by hardware when the programmed threshold in RXFTCFG in USARTx_CR3
register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and
one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in
the USART_CR3 register.
-0: Receive FIFO doesnt reach the programmed threshold.
-1: Receive FIFO reached the programmed threshold</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFT</name>
              <description>TXFT: TXFIFO threshold flag
This bit is set by hardware when the TXFIFO reaches the programmed threshold in TXFTCFG
in USARTx_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is
generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
-0: TXFIFO doesnt reach the programmed threshold.
-1: TXFIFO reached the programmed threshold</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <displayName>ICR</displayName>
          <description>ICR register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PECF</name>
              <description>PECF: Parity error clear flag
Writing 1 to this bit clears the PE flag in the USART_ISR register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FECF</name>
              <description>FECF: Framing error clear flag
Writing 1 to this bit clears the FE flag in the USART_ISR register</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NECF</name>
              <description>NECF: Noise detected clear flag
Writing 1 to this bit clears the NF flag in the USART_ISR register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ORECF</name>
              <description>ORECF: Overrun error clear flag
Writing 1 to this bit clears the ORE flag in the USART_ISR register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDLECF</name>
              <description>IDLECF: Idle line detected clear flag
Writing 1 to this bit clears the IDLE flag in the USART_ISR register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TCCF</name>
              <description>TCCF: Transmission complete clear flag
Writing 1 to this bit clears the TC flag in the USART_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTSCF</name>
              <description>CTSCF: CTS clear flag
Writing 1 to this bit clears the CTSIF flag in the USART_ISR register</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMCF</name>
              <description>CMCF: Character match clear flag
Writing 1 to this bit clears the CMF flag in the USART_ISR register</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>WUCF</name>
              <description>WUCF: Wakeup from Stop mode clear flag
Writing 1 to this bit clears the WUF flag in the LPUART_ISR register.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RDR</name>
          <displayName>RDR</displayName>
          <description>RDR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>RDR</name>
              <description>RDR[8:0]: Receive data value
Contains the received data character.
The RDR register provides the parallel interface between the input shift register and the
internal bus (see Figure 124).
When receiving with the parity enabled, the value read in the MSB bit is the received parity
bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TDR</name>
          <displayName>TDR</displayName>
          <description>TDR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>TDR</name>
              <description>TDR[8:0]: Transmit data value
Contains the data character to be transmitted.
The USARTx_TDR register provides the parallel interface between the internal bus and the
output shift register (see Figure 124).
When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register),
the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect
because it is replaced by the parity.
Note: This register must be written only when TXE/TXFNF=1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESC</name>
          <displayName>PRESC</displayName>
          <description>PRESC register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>PRESCALER</name>
              <description>PRESCALER[3:0]: Clock prescaler
The USART input clock can be divided by a prescaler:
-0000: input clock not divided
-0001: input clock divided by 2
-0010: input clock divided by 4
-0011: input clock divided by 6
-0100: input clock divided by 8
-0101: input clock divided by 10
-0110: input clock divided by 12
-0111: input clock divided by 16
-1000: input clock divided by 32
-1001: input clock divided by 64
-1010: input clock divided by 128
-1011: input clock divided by 256
Remaing combinations: Reserved.
Note: When PRESCALER is programmed with a value different of the allowed ones,
programmed prescaler value will be '1011' i.e. input clock divided by 256</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LCSC</name>
      <groupName>LCSC</groupName>
      <baseAddress>0x4000A000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x48</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LCSC</name>
        <description>LCSC interrupt</description>
        <value>28</value>
      </interrupt>
      <interrupt>
        <name>LC_ACTIVITY</name>
        <description>LCSC LC_ACTIVITY interrupt</description>
        <value>29</value>
      </interrupt>
      <registers>
        <register>
          <name>LCSC_CR0</name>
          <displayName>LCSC_CR0</displayName>
          <description>LCSC_CR0 register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000B005C</resetValue>
          <fields>
            <field>
              <name>TMEAS</name>
              <description>Measurement Time
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCAP</name>
              <description>Capture Time
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TICAP</name>
              <description>Inter Capture Time
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_CR1</name>
          <displayName>LCSC_CR1</displayName>
          <description>LCSC_CR1 register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x3C010C80</resetValue>
          <fields>
            <field>
              <name>LCAB_DAMP_THRES</name>
              <description>LCAB_DAMP_THRES[7:0]: Damping threshold for LCA and LCB
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TREC_VCM</name>
              <description>VCMBUFF Recovery Time
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSTART_VCM</name>
              <description>VCMBUFF Starting Time
</description>
              <bitOffset>20</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_CR2</name>
          <displayName>LCSC_CR2</displayName>
          <description>LCSC_CR2 register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00008000</resetValue>
          <fields>
            <field>
              <name>TAMP_PSC</name>
              <description>Tamper measurement interval.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCT_DAMP_THRES</name>
              <description>Damping threshold for LCT
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_PULSE_CR</name>
          <displayName>LCSC_PULSE_CR</displayName>
          <description>LCSC_PULSE_CR register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000070</resetValue>
          <fields>
            <field>
              <name>LCAB_PULSE_WIDTH</name>
              <description>Low Pulse Width for LCA and LCB
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCT_PULSE_WIDTH</name>
              <description>Low Pulse Width for LCT
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_ENR</name>
          <displayName>LCSC_ENR</displayName>
          <description>LCSC_ENR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLKWISE_IE</name>
              <description>Clock Wise Interrupt and Wakeup Enable
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACLKWISE_IE</name>
              <description>Anti Clock Wise Interrupt and Wakeup Enable
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP_IE</name>
              <description>Tamper Interrupt and Wakeup Enable
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_OFB_WKP_IE</name>
              <description>LCAB Counter Out Of Bound wakeup enable
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSC_EN</name>
              <description>LCSC Enable
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_WHEEL_SR</name>
          <displayName>LCSC_WHEEL_SR</displayName>
          <description>LCSC_WHEEL_SR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLKWISE</name>
              <description>Number of Clock Wise revolutions</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACLKWISE</name>
              <description>Number of Anti Clock Wise revolutions</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_CONFR</name>
          <displayName>LCSC_CONFR</displayName>
          <description>LCSC_CONFR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLKWISE_THRES</name>
              <description>Number of Clock Wise revolutions target</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACLKWISE_THRES</name>
              <description>Number of Anti Clock Wise revolutions target</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_COMP_CTN</name>
          <displayName>LCSC_COMP_CTN</displayName>
          <description>LCSC_COMP_CTN register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CMP_LCA_CNT</name>
              <description>LCA Comparator last damping count</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMP_LCB_CNT</name>
              <description>LCB Comparator last damping count</description>
              <bitOffset>10</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMP_LCT_CNT</name>
              <description>LCT Comparator last damping count</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_SR</name>
          <displayName>LCSC_SR</displayName>
          <description>LCSC_SR register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLKWISE_STATE</name>
              <description>The current state of the LCSC clockwise FSM:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACLKWISE_STATE</name>
              <description>The current state of the LCSC anti clockwise FSM:
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LAST_DIR</name>
              <description>The last direction detected:
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_STAT</name>
          <displayName>LCSC_STAT</displayName>
          <description>LCSC_STAT register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFF0000FF</resetValue>
          <fields>
            <field>
              <name>MIN_LCAB_CNT</name>
              <description>The Minimum of CMP_LCA_CNT, CMP_LCB_CNT reached during the
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MAX_LCAB_CNT</name>
              <description>The Maximum of CMP_LCA_CNT, CMP_LCB_CNT reached during
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MIN_LCAB_CNT_BOUND</name>
              <description>The Minimum bound of CMP_LCA_COUNT,
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MAX_LCAB_CNT_BOUND</name>
              <description>The Maximum bound of CMP_LCA_COUNT,
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_TST_CFG</name>
          <displayName>LCSC_TST_CFG</displayName>
          <description>LCSC Test Configuration Register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TST_EN</name>
              <description>Test Enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TST_CFG</name>
              <description>DTB output selection</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_ANATST_CFG</name>
          <displayName>LCSC_ANATST_CFG</displayName>
          <description>LCSC ANA Test Configuration Register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>VCMBUFF_ENOUT_SEL</name>
              <description>Selection of the signal to be used to supply the DAC in the LCSC</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCMBUFF_ENOUT</name>
              <description>VCMBUFFER output buffer enable pin</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCMBUFF_PWDN_SEL</name>
              <description>Selection of the signal to be used to supply the DAC in the LCSC</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>VCMBUFF_PWDN</name>
              <description>VCMBUFF power-down pin</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_PWDN_SEL</name>
              <description>Selection of the signal to be used to supply the COMP in the LCSC 
Analog part</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_PWDN</name>
              <description>COMP power-down pin</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_PWDN_SEL</name>
              <description>Selection of the signal to be used to supply the DAC in the LCSC Analog 
part</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_PWDN</name>
              <description>DAC power-down pin</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_VER</name>
          <displayName>LCSC_VER</displayName>
          <description>LCSC_VER register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00001000</resetValue>
          <fields>
            <field>
              <name>REV</name>
              <description>Revision of the RFIP to be used for metal fixes)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VER</name>
              <description>Version of the RFIP  (to be used for cut upgrades)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PROD</name>
              <description>Used for major upgrades (new protocols support / new features)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCSC_ISR</name>
          <displayName>LCSC_ISR</displayName>
          <description>LCSC_ISR register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CLKWISE_F</name>
              <description>Clock Wise Flag:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACLKWISE_F</name>
              <description>Anti Clock Wise Flag:
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP_F</name>
              <description>Tamper Flag
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_OFB_F</name>
              <description>Out of Bound Counter Flag
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>LPAWUR</name>
      <groupName>LPAWUR</groupName>
      <baseAddress>0x49001000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>LPAWUR</name>
        <description>LPAWUR interrupt</description>
        <value>18</value>
      </interrupt>
      <interrupt>
        <name>CPU_WKUP</name>
        <description>CPU Wakeup interrupt</description>
        <value>23</value>
      </interrupt>
      <interrupt>
        <name>SUBG_WKUP</name>
        <description>SUBG Wakeup interrupt</description>
        <value>24</value>
      </interrupt>
      <registers>
        <register>
          <name>FRAME_CONFIG0</name>
          <displayName>FRAME_CONFIG0</displayName>
          <description>FRAME_CONFIG0 register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x02074012</resetValue>
          <fields>
            <field>
              <name>PREAMBLE_THRESHOLD_COUNT</name>
              <description>The number of transitions for preamble detection when receiving the manchester encoded preamble.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_LENGTH</name>
              <description>Frame sync pattern length ( Manchester encoded ).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_THRESHOLD_COUNT</name>
              <description>detection threshold when receivng the Frame sync ( Manchester encoded).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PAYLOAD_LENGTH</name>
              <description>The number of data Bytes in the payload ( decoded ).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOW_CLK_CYCLE_PER_BIT_CNT</name>
              <description>The number of expected slow clock cycle per each manchester coded bit.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRAME_CONFIG1</name>
          <displayName>FRAME_CONFIG1</displayName>
          <description>FRAME_CONFIG1 register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00024669</resetValue>
          <fields>
            <field>
              <name>KI</name>
              <description>ki gain value for the timing recovery loop.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KP</name>
              <description>kp gain value for the timing recovery loop.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SYNC_COUNTER_TIMEOUT</name>
              <description>The timeout in manchester encoded bits for the Frame Sync,it represents the number of samples after which in case the frame sync is not detected a sync_error is raised.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREAMBLE_ENABLE</name>
              <description>Preamble detection enable
</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TREC_LOOP_ALGO_SEL</name>
              <description>Timing recovery loop algorithm selection:
</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRAME_SYNC_CONFIG</name>
          <displayName>FRAME_SYNC_CONFIG</displayName>
          <description>FRAME_SYNC_CONFIG register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00009696</resetValue>
          <fields>
            <field>
              <name>FRAME_SYNC_PATTERN_L</name>
              <description>The value of the frame sync pattern, Low word, manchester encoded, used when the frame sync length is 16 bit (default 0x9696 which represent a frame sync value of 0x99)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SYNC_PATTERN_H</name>
              <description>The value of the frame sync pattern, High word, manchester encoded, used only when the frame sync length is 32 bits (default 0x0000 )</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RFIP_CONFIG</name>
          <displayName>RFIP_CONFIG</displayName>
          <description>RFIP_CONFIG register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>LPAWUR_ENABLE</name>
              <description>Enable (start) or Disable (stop) the LPAWUR feature (0: disabled by default)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_LEVEL</name>
              <description>- 00: the bit Sync has been detected
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_CONFIG</name>
          <displayName>RF_CONFIG</displayName>
          <description>RF_CONFIG register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000133EE</resetValue>
          <fields>
            <field>
              <name>ED_SWITCH</name>
              <description>- 0 : Normal operation (default) 
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKDIV</name>
              <description>Calibrate 4kHz clock (programmable divider)
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_LOW_LVL</name>
              <description>AGC level (Low) (default value: 0x2)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ED_DC_CTRL</name>
              <description>DC current subtraction enabling signal (default value: 0x1)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_HIGH_LVL</name>
              <description>AGC level (High) (default value: 0x4)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ED_ICAL</name>
              <description>Current versus VBAT calibration for ED
</description>
              <bitOffset>18</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPF3_CAL</name>
              <description> </description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC_CONFIG</name>
          <displayName>AGC_CONFIG</displayName>
          <description>AGC_CONFIG register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>AGC_MODE</name>
              <description>Define the working mode of the AGC:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_HOLD_MODE</name>
              <description>The behavior when the AGC is ON and is working in HOLD mode
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_RESET_MODE</name>
              <description>The AGC reset behavior when the AGC is working in ON or HOLD mode
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAYLOAD_0</name>
          <displayName>PAYLOAD_0</displayName>
          <description>PAYLOAD_0 register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PAYLOAD_0</name>
              <description>First part of the payload (Least significant Byte First)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAYLOAD_1</name>
          <displayName>PAYLOAD_1</displayName>
          <description>PAYLOAD_1 register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PAYLOAD_1</name>
              <description>Second part of the payload  (Least significant Byte First)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MISC</name>
      <groupName>MISC</groupName>
      <baseAddress>0x49000700</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x80</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RFIP_VERSION</name>
          <displayName>RFIP_VERSION</displayName>
          <description>RFIP_VERSION register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00001200</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Revision of the MR_SubG (to be used for metal fixes)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VERSION</name>
              <description>Version of the MR_SubG (to be used for cut upgrades)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRODUCT</name>
              <description>Used for major upgrades (new protocols support / new features)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RRM_UDRA_CTRL</name>
          <displayName>RRM_UDRA_CTRL</displayName>
          <description>RRM_UDRA_CTRL register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>write-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RRM_CMD_REQ</name>
              <description>Action bit: write 1 to request a RRM-UDRA command.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQUENCER_CTRL</name>
          <displayName>SEQUENCER_CTRL</displayName>
          <description>SEQUENCER_CTRL register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>GEN_SEQ_TRIGGER</name>
              <description>Action bit: write 1 to generate a trigger event on Sequencer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DISABLE_SEQ</name>
              <description>Enable/disable the Sequencer
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ABSOLUTE_TIME</name>
          <displayName>ABSOLUTE_TIME</displayName>
          <description>ABSOLUTE_TIME register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ABSOLUTE_TIME</name>
              <description>Indicate the interpolated absolute.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCM_COUNTER_VAL</name>
          <displayName>SCM_COUNTER_VAL</displayName>
          <description>SCM_COUNTER_VAL register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SCM_COUNTER_CURRVAL</name>
              <description>Slow Clock Measurement: number of 16 MHz clock cycles contained in 32 slow clock periods.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCM_MIN_MAX</name>
          <displayName>SCM_MIN_MAX</displayName>
          <description>SCM_MIN_MAX register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00007FFF</resetValue>
          <fields>
            <field>
              <name>SCM_COUNTER_MINVAL</name>
              <description>Slow Clock Measurement: minimum SCM_COUNTER value seen since the counter is ON and since last clear request.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCM_COUNTER_MAXVAL</name>
              <description>Slow Clock Measurement: maximum SCM_COUNTER value seen since the counter is ON and since last clear request.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLEAR_MIN_MAX</name>
              <description>Write 1' to clear the SCM_COUNTER_MINVAL and SCM_COUNTER_MAXVAL bit fields.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_IRQ_STATUS</name>
          <displayName>WAKEUP_IRQ_STATUS</displayName>
          <description>WAKEUP_IRQ_STATUS register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CPU_WAKEUP_F</name>
              <description>Set when the interpolated absolute time matches the CPU_WAKEUPTIME while WAKEUP_CTRL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RFIP_WAKEUP_F</name>
              <description>Set when the interpolated absolute time matches the RFIP_WAKEUPTIME while WAKEUP_CTRL.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MR_SUBG</name>
      <groupName>MR_SUBG</groupName>
      <baseAddress>0x49000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>MR_SUBG_BUSY</name>
        <description>MR_SUBG Busy interrupt</description>
        <value>20</value>
      </interrupt>
      <interrupt>
        <name>MR_SUBG</name>
        <description>MR_SUBG interrupt</description>
        <value>21</value>
      </interrupt>
      <interrupt>
        <name>TX_RX_SEQUENCE</name>
        <description>MR_SUBG TX/RX Sequence
interrupt</description>
        <value>22</value>
      </interrupt>
      <registers>
        <register>
          <name>RF_FSM0_TIMEOUT</name>
          <displayName>RF_FSM0_TIMEOUT</displayName>
          <description>RF_FSM0_TIMEOUT register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ENA_RFREG_TIMER</name>
              <description>Timeout for the RF regulator startup (duration in ENA_RF_REG state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM1_TIMEOUT</name>
          <displayName>RF_FSM1_TIMEOUT</displayName>
          <description>RF_FSM1_TIMEOUT register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>SYNTH_SETUP_TIMER</name>
              <description>Timeout management for the RF regulator to stabilize after RF PLL power on
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM2_TIMEOUT</name>
          <displayName>RF_FSM2_TIMEOUT</displayName>
          <description>RF_FSM2_TIMEOUT register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000050</resetValue>
          <fields>
            <field>
              <name>VCO_CALIB_LOCK_TIMER</name>
              <description>Timeout for the RF PLL calibration + RF PLL lock (duration in CALIB_VCO+LOCKRXTX state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM3_TIMEOUT</name>
          <displayName>RF_FSM3_TIMEOUT</displayName>
          <description>RF_FSM3_TIMEOUT register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000028</resetValue>
          <fields>
            <field>
              <name>VCO_LOCK_TIMER</name>
              <description>Timeout for the RF PLL lock event when no calibration is requested (duration in LOCKRXTX state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM4_TIMEOUT</name>
          <displayName>RF_FSM4_TIMEOUT</displayName>
          <description>RF_FSM4_TIMEOUT register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000000F</resetValue>
          <fields>
            <field>
              <name>EN_RX_TIMER</name>
              <description>Timeout for the analog RX chain setup (duration in EN_RX state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM5_TIMEOUT</name>
          <displayName>RF_FSM5_TIMEOUT</displayName>
          <description>RF_FSM5_TIMEOUT register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000019</resetValue>
          <fields>
            <field>
              <name>EN_PA_TIMER</name>
              <description>Timeout for the analog PA (DAC) setup (duration in EN_PA state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM6_TIMEOUT</name>
          <displayName>RF_FSM6_TIMEOUT</displayName>
          <description>RF_FSM6_TIMEOUT register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000019</resetValue>
          <fields>
            <field>
              <name>PA_DWN_ANA_TIMER</name>
              <description>Timeout for the analog PA (DAC) ramp down (duration in PA_DWN_ANA state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM7_TIMEOUT</name>
          <displayName>RF_FSM7_TIMEOUT</displayName>
          <description>RF_FSM7_TIMEOUT register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>EN_LNA_TIMER</name>
              <description>Timeout for the analog RX chain signals settlement once PGA precharge is shut down (duration in EN_LNA state)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFC0_CONFIG</name>
          <displayName>AFC0_CONFIG</displayName>
          <description>AFC0_CONFIG register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000025</resetValue>
          <fields>
            <field>
              <name>AFC_SLOW_GAIN_LOG2</name>
              <description>AFC loop gain in slow mode (2's log)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_FAST_GAIN_LOG2</name>
              <description>AFC loop gain in fast mode (2's log)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFC1_CONFIG</name>
          <displayName>AFC1_CONFIG</displayName>
          <description>AFC1_CONFIG register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000018</resetValue>
          <fields>
            <field>
              <name>AFC_FAST_PERIOD</name>
              <description>Length of the AFC fast period (in number of samples unit)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFC2_CONFIG</name>
          <displayName>AFC2_CONFIG</displayName>
          <description>AFC2_CONFIG register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000C8</resetValue>
          <fields>
            <field>
              <name>AFC_PD_LEAKAGE</name>
              <description>AFC Peak Detection leakage.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_MODE</name>
              <description>Select AFC mode: 
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_EN</name>
              <description>Enable AFC.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_FREEZE_ON_SYNC</name>
              <description>Freeze AFC correction upon SYNC word detection</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AFC3_CONFIG</name>
          <displayName>AFC3_CONFIG</displayName>
          <description>AFC3_CONFIG register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000E8</resetValue>
          <fields>
            <field>
              <name>AFC_INIT_MODE</name>
              <description>Control the initialization phase of the AFC and clock recovery algorithms:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_SIGN_PERM_CHECK</name>
              <description>Enable the check of sign permanence of AFC corrected signal.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_TH_SIGN_PERM</name>
              <description>Threshold of chech sign permanence mechanism.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AFC_REINIT_OPTION</name>
              <description>Select the AFC reinitialization option:
</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKREC_CTRL0</name>
          <displayName>CLKREC_CTRL0</displayName>
          <description>CLKREC_CTRL0 register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000B8</resetValue>
          <fields>
            <field>
              <name>CLKREC_I_GAIN_FAST</name>
              <description>Integral fast gain for the clock recovery loop (PLL mode only)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKREC_P_GAIN_FAST</name>
              <description>Clock recovery fast loop gain (log2)
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PSTFLT_LEN</name>
              <description>Control the length of the demodulator post-filter
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLKREC_CTRL1</name>
          <displayName>CLKREC_CTRL1</displayName>
          <description>CLKREC_CTRL1 register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000005C</resetValue>
          <fields>
            <field>
              <name>CLKREC_I_GAIN_SLOW</name>
              <description>Integral slow gain for the clock recovery loop (PLL mode only)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKREC_P_GAIN_SLOW</name>
              <description>Clock recovery slow loop gain (log2)
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKREC_ALGO_SEL</name>
              <description>Symbol timing recovery algorithm selection
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCREM_CTRL0</name>
          <displayName>DCREM_CTRL0</displayName>
          <description>DCREM_CTRL0 register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000E8</resetValue>
          <fields>
            <field>
              <name>START_GAIN</name>
              <description>Filter gain in start mode for the DC removal block.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRACK_GAIN</name>
              <description>Filter gain in track mode for the DC removal block.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CTRL0</name>
          <displayName>IQC_CTRL0</displayName>
          <description>IQC_CTRL0 register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000E3</resetValue>
          <fields>
            <field>
              <name>FAST_GAIN</name>
              <description>Gain of the correction loop in fast mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLOW_GAIN</name>
              <description>Gain of the correction loop in slow mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CTRL1</name>
          <displayName>IQC_CTRL1</displayName>
          <description>IQC_CTRL1 register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>QPD_ATTACK</name>
              <description>Attack coefficient for QPD:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CTRL2</name>
          <displayName>IQC_CTRL2</displayName>
          <description>IQC_CTRL2 register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>QPD_DECAY</name>
              <description>Decay coefficient for QPD:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CTRL3</name>
          <displayName>IQC_CTRL3</displayName>
          <description>IQC_CTRL3 register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>FAST_TIME</name>
              <description>Duration of the fast mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC_ANA_ENG</name>
          <displayName>AGC_ANA_ENG</displayName>
          <description>AGC_ANA_ENG register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FORCE_AGC_GAINS</name>
              <description>Select the mode for AGC analog part:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFD_RX_ATTEN_AGCGAIN</name>
              <description>Attenuation at LNA level by step of 6dB with thermometric code:
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFD_RX_PGA_AGCGAIN</name>
              <description>Attenuation at PGA level by step of 6dB with binary code:
</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC0_CTRL</name>
          <displayName>AGC0_CTRL</displayName>
          <description>AGC0_CTRL register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000099</resetValue>
          <fields>
            <field>
              <name>AGC_HOLD_TIME</name>
              <description>AGC hold time.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_START_ONHOLD</name>
              <description>Start the AGC with a hold phase.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_EN</name>
              <description>Enable the AGC
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC1_CTRL</name>
          <displayName>AGC1_CTRL</displayName>
          <description>AGC1_CTRL register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000062</resetValue>
          <fields>
            <field>
              <name>AGC_MIN_THR</name>
              <description>Minimum signal threshold.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_MAX_THR</name>
              <description>Maximum signal threshold.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC2_CTRL</name>
          <displayName>AGC2_CTRL</displayName>
          <description>AGC2_CTRL register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000AF</resetValue>
          <fields>
            <field>
              <name>AGC_MEAS_TIME</name>
              <description>Measure time.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_START_MAX_ATTEN</name>
              <description>Start the AGC with maximum attenuation.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREEZE_ON_SYNC</name>
              <description>Enable the freeze on SYNC detection feature</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREEZE_ON_STEADY</name>
              <description>Enable the autofreeze feature</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_HIGH_ATTEN_MODE</name>
              <description>Enable the high attenuation mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC3_CTRL</name>
          <displayName>AGC3_CTRL</displayName>
          <description>AGC3_CTRL register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000090</resetValue>
          <fields>
            <field>
              <name>AGC_MIN_ATTEN</name>
              <description>Minimum AGC attenuation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_MAX_ATTEN</name>
              <description>Maximum AGC attenuation.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC4_CTRL</name>
          <displayName>AGC4_CTRL</displayName>
          <description>AGC4_CTRL register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>AGC_FREEZE_THR</name>
              <description>Signal threshold for the autofreeze feature.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC_PGA_HWTRIM_OUT</name>
          <displayName>AGC_PGA_HWTRIM_OUT</displayName>
          <description>AGC_PGA_HWTRIM_OUT register</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>AGC_HW_PGA_TRIM</name>
              <description>AGC PGA calibration information loaded by HW from the SoC flash.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_REG</name>
          <displayName>PA_REG</displayName>
          <description>PA_REG register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CFG_FILT</name>
              <description>FIR configuration:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DEGEN_ON</name>
              <description>Enable a 'degeneration' mode, which introduces a pre-distortion to linearize the power control curve.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_HWTRIM_OUT</name>
          <displayName>PA_HWTRIM_OUT</displayName>
          <description>PA_HWTRIM_OUT register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000088</resetValue>
          <fields>
            <field>
              <name>PA_HW_DEGEN_TRIM</name>
              <description>MSB part meaning:
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RSSI_FLT</name>
          <displayName>RSSI_FLT</displayName>
          <description>RSSI_FLT register</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000E0</resetValue>
          <fields>
            <field>
              <name>OOK_PEAK_DECAY</name>
              <description>Peak decay control for OOK: 3 slow decay; 0 fast decay</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSSI_FLT</name>
              <description>Gain of the RSSI filter</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNTH2_ANA_ENG</name>
          <displayName>SYNTH2_ANA_ENG</displayName>
          <description>SYNTH2_ANA_ENG register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000004C</resetValue>
          <fields>
            <field>
              <name>RFD_PLL_VCO_ALC_AMP</name>
              <description>Select the level of max VCO amplitude in amplitude level control loop.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFD_PLL_LD_WIN_ACC</name>
              <description>Select the PLL lock detector window selection:
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RXADC_HWDELAYTRIM_OUT</name>
          <displayName>RXADC_HWDELAYTRIM_OUT</displayName>
          <description>RXADC_HWDELAYTRIM_OUT register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000001B</resetValue>
          <fields>
            <field>
              <name>RXADC_HW_DELAYTRIM_I</name>
              <description>Control bits of the RX ADC loop delay for I channel (from SoC Flash).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXADC_HW_DELAYTRIM_Q</name>
              <description>Control bits of the RX ADC loop delay for Q channel (from SoC Flash).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_AAF_HWTRIM_OUT</name>
          <displayName>RX_AAF_HWTRIM_OUT</displayName>
          <description>RX_AAF_HWTRIM_OUT register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>AAF_HW_FCTRIM</name>
              <description>AAF calibration information loaded by HW.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SINGEN_ANA_ENG</name>
          <displayName>SINGEN_ANA_ENG</displayName>
          <description>SINGEN_ANA_ENG register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RFD_SINGEN_ENA</name>
              <description>Enable SINGEN signal for the RFSUBGanalog IP.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFD_SINGEN_DIV2_PUP</name>
              <description>This bit value is directly connected to the RFSUBG analog IP pin.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFD_SINGEN_LBE</name>
              <description>This bit value is directly connected to the RFSUBG analog IP pin.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_INFO_OUT</name>
          <displayName>RF_INFO_OUT</displayName>
          <description>RF_INFO_OUT register</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000040</resetValue>
          <fields>
            <field>
              <name>FQCY_BAND_ID</name>
              <description>FQCY_BAND_ID[3:0]: Indicates the version of the RFSUBG IP embedded in the device
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RFSUBG_ID</name>
              <description>Indicate the version of the analog RFSUBG IP embedded in the device
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM8_TIMEOUT</name>
          <displayName>RF_FSM8_TIMEOUT</displayName>
          <description>RF_FSM8_TIMEOUT register</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000000A</resetValue>
          <fields>
            <field>
              <name>SYNTH_PDWN_TIMER</name>
              <description>Timeout management for the RF regulator to stabilize after PLL shut down
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM9_TIMEOUT</name>
          <displayName>RF_FSM9_TIMEOUT</displayName>
          <description>RF_FSM9_TIMEOUT register</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>END_RX_TIMER</name>
              <description>Timeout management for the RF regulator to stabilize after analog RX chain shut down
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_FSM10_TIMEOUT</name>
          <displayName>RF_FSM10_TIMEOUT</displayName>
          <description>RF_FSM10_TIMEOUT register</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000006</resetValue>
          <fields>
            <field>
              <name>END_TX_TIMER</name>
              <description>Timeout management for the RF regulator to stabilize after clock stops on the analog PA block
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUBG_DIG_CTRL0</name>
          <displayName>SUBG_DIG_CTRL0</displayName>
          <description>SUBG_DIG_CTRL0 register</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>FORCE_GPIO_OUTPUT</name>
              <description>Option for the direct GPIO signal output
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CHAIN_ENG</name>
          <displayName>RX_CHAIN_ENG</displayName>
          <description>RX_CHAIN_ENG register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>LNA_ISOL_ENA</name>
              <description>Option for LNA during the EN_RX state of the Radio FSM:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PGA_PRECH_ENA</name>
              <description>Option for PGA precharge during the EN_RX state of the Radio FSM:
</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEMOD_DIG_ENG</name>
          <displayName>DEMOD_DIG_ENG</displayName>
          <description>DEMOD_DIG_ENG register</description>
          <addressOffset>0x14C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000003</resetValue>
          <fields>
            <field>
              <name>RX_BLANKING_LENGTH</name>
              <description>Number of data samples at RX start for which the signal at the output of the channel filter is kept forced to zero:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWRC</name>
      <groupName>PWRC</groupName>
      <baseAddress>0x48500000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xA8</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>PVD</name>
        <description>PVD / BORH</description>
        <value>2</value>
      </interrupt>
      <registers>
        <register>
          <name>CR1</name>
          <displayName>CR1</displayName>
          <description>CR1 register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x114</resetValue>
          <fields>
            <field>
              <name>LPMS</name>
              <description>LPMS Low Power Mode Selection
Selection of the low power mode entered when CPU enters DEEP SLEEP mode and BLE is rdy2sleep.
- 0: Deep Stop mode (default)
- 1: Shutdown mode</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENSDNBOR</name>
              <description>ENSDNBOR: Enable BOR supply monitoring during shutdown mode.
- 1: the PD_ALL_SHUTDOWN signal is not set during SHUTDOWN mode
- 0: the PD_ALL_SHUTDOWN signal is set during SHUTDOWN mode.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBIAS_RUN_AUTO</name>
              <description>IBIAS_RUN_AUTO: Enable automatic IBIAS control during RUN/DEEPSTOP mode.
- 0: IBIAS control is manual (and controlled by IBIAS_RUN_STATE register)
- 1: IBIAS control is automatic (default).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IBIAS_RUN_STATE</name>
              <description>IBIAS_RUN_STATE: Enable/Disable IBIAS during RUN mode when automatic mode is
disabled.
- 0: IBIAS control is disabled (default).
- 1: IBIAS control is enabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>APC</name>
              <description>APC Apply Pull-up and pull-down configuration from CPU
- 1: the I/O pull-up and pull-down configurations defined in the PUCRx and PDCRx registers is applied. 
- 0: the PUCRx and PDCRx are not used to control the I/O pull-up and pull-down configuration of the product I/Os.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENBORH</name>
              <description>ENBORH: enable BORH configuration
- 1: BORH is enabled, threshold level depends on SELBOR[1:0]
- 0: BORH off (VBOR0):  threshold level for above 1.60V voltage operation.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SELBORH</name>
              <description>SELBORH[1:0]: BORH selection of Vbor threshold
- 11: BORH Level 4(VBOR4):  threshold level for above 2.81 V voltage operation.
- 10: BORH Level 3 (VBOR3):  threshold level for above 2.52 V voltage operation
- 01: BORH Level 2 (VBOR2):  threshold level for above 2.21 V voltage operation
- 00: BORH Level 1 (VBOR1):  threshold level for above 2.0V voltage operation.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENBORL</name>
              <description>ENBORL: Enable BORL reset supervising during RUN mode.
- 0: No BORL is monitored during RUN mode.
- 1: BORL is monitored during RUN mode (a POR reset will happen if VDDIO goes below 1.6V during RUN mode) (default).
Note: Enabling this feature prevents blocking the device if VDDIO goes below supported voltages during RUN.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR2</name>
          <displayName>CR2</displayName>
          <description>CR2 register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>PVDE</name>
              <description>PVDE Programmable Voltage Detector Enable
When this bit is set the Power Voltage Detector is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVDLS</name>
              <description>PVDLS[2:0] Programmable Voltage Detector Level selection
- 000: 2.05 V - Lowest level
- 001: 2.20 V
- 010: 2.36 V
- 011: 2.52 V
- 100: 2.64 V
- 101: 2.81 V
- 110: 2.91 V - Highest level
- 111: External input analog voltage (compare internally to VBGP; When external input  VBGP
then PVDO=1)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGRET</name>
              <description>DBGRET: PA2 and PA3 retention enable after DEEPSTOP
- 0: PA2, PA3 don't retain their status exiting from DEEPSTOP (default).
- 1: PA2, PA3 retain their status exiting from DEEPSTOP.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RAMRET1</name>
              <description>RAMRET1: RAM1 retention during low power mode
- 1: RAM1 bank is powered during low power mode 
- 0: RAM1 bank is disabled during low power mode (by default)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPREG_FORCE_VH</name>
              <description>force LPREG=1.2V during DEEPSTOP
- 1: Force LPREG=1.2V during DEEPSTOP
- 0: No Force (Default)
Note LPREG= 1.2v can still apply when LCDEN or COMP.SCALEREN request it</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPREG_VH_STATUS</name>
              <description>status LPREG VH (1.2v) during DEEPSTOP
- 1: LPREG=1.2V during DEEPSTOP
- 0: LPREG=1V during DEEPSTOP</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>GPIORET</name>
              <description>GPIORET: GPIO retention enable.
- 0: Release GPIO retention after deepstop (Should be reset after restore Context)
- 1: Enable GPIO Retention during deepstop (Must be set before deepstop)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENTS</name>
              <description>ENTS: Enable Temperature Sensor
- 1: Temperature sensor is enabled
- 0: Temperature sensor is disabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFREGEN</name>
              <description>RFREGEN: RF Regulator Enable
- 1: Enable RF Regulator
- 0: Disable RF Regulator (Note: RF Regulator can still be enabled by the RFSUGB or RCC_CR.HSEON)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFREGCEXT</name>
              <description>RFREGCEXT: RF Regulator External Supply Bypass
- 1: External supply bypass capability 
- 0: Internal supply only</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFREGBYP</name>
              <description>RFREGBYP: RF Regulator Bypass Enable
- 1: LDO output connected to VSMPS.
- 0: internally generated 1.2V</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFREGRDY</name>
              <description>RFDREGRDY: RF Regulator Ready flag
- 1: RF Regulator is ready
- 0: RF Regulator is not ready</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RFREGON_STATUS</name>
              <description>RFREGON_STATUS:  RF Regulator On Status 
- 1:  RF Regulator is enabled 
- 0:  RF Regulator is disabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IEWU</name>
          <displayName>IEWU</displayName>
          <description>IEWU register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000</resetValue>
          <fields>
            <field>
              <name>EIWL0</name>
              <description>EWL0 Enable Internal WakeUp line LPUART
When this bit is set the internal wakeup line is enabled and a rising edge will trigger a CPU wakeup event.
- 0: wakeup disabled.
- 1: wakeup enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EIWL1</name>
              <description>EIWL1 Enable Internal WakeUp line RTC
When this bit is set the internal wakeup line is enabled and a rising edge will trigger a CPU wakeup event.
- 0: wakeup disabled.
- 1: wakeup enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EIWL2</name>
              <description>EIWL2 Enable Internal WakeUp line LCD
When this bit is set the internal wakeup line is enabled and a rising edge will trigger a CPU wakeup event.
- 0: wakeup disabled.
- 1: wakeup enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EIWL3</name>
              <description>EIWL3 Enable Internal Wakeup line COMP 
When this bit is set the COMP wakeup is enabled and an  edge will trigger a COMP wakeup event
- 0: wakeup disabled.
- 1: wakeup enabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EIWL4</name>
              <description>EIWL4 Enable Internal Wakeup line LCSC 
When this bit is set the LCSC wakeup is enabled and an  edge will trigger a LCSC wakeup event
- 0: wakeup disabled.
- 1: wakeup enabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EWMRSUBG</name>
              <description>EWMRSUB Wakeup MRSUBG Enable
When this bit is set the MRSUBG wakeup is enabled and a rising edge will trigger a MRSUBG wakeup event
- 0: MRSUBG wakeup disabled.
- 1: MRSUBG wakeup enabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EWMRSUBGHCPU</name>
              <description>EWMRSUBGHCPU Wakeup MRSUBG Host CPU Enable
When this bit is set the MRSUBG HOST CPU wakeup is enabled and a rising edge will trigger a MRSUBG Host CPU wakeup event
- 0: MRSUBG Host CPU wakeup disabled.
- 1: MRSUBG Host CPU wakeup enabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EWLPAWUR</name>
              <description>EWLPAWUR: Wakeup Bubble Enable
When this bit is set the Bubble wakeup is enabled and a rising edge will trigger a LPAWUR wakeup event
- 0: LPAWUR wakeup disabled.
- 1: LPAWUR wakeup enabled.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWUP</name>
          <displayName>IWUP</displayName>
          <description>IWUP register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>IWUP0</name>
              <description>IWUP0: Wakeup polarity for internal wakeup line 0 event (LPUART).
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUP1</name>
              <description>IWUP1: Wakeup polarity for internal wakeup line 1 event (RTC).
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUP2</name>
              <description>IWUP2: Wakeup polarity for internal wakeup line 2 event (LCD).
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUP3</name>
              <description>IWUP3: Wakeup polarity for internal wakeup line 3 event (COMP).
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUP4</name>
              <description>IWUP4: Wakeup polarity for internal wakeup line 4 event (LCSC).
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WMRSUBGHP</name>
              <description>WMRSUBGHP: Wakeup polarity for internal wakeup MRSUBG event
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WMRSUBGHCPUP</name>
              <description>WMRSUBGHCPUP: Wakeup polarity for internal wakeup MRSUBG Host CPU event
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WLPAWURP</name>
              <description>WLPAWURP: Wakeup polarity for wakeup LPAWUR event.
- 0: Detection of wakeup event on rising edge (default).
- 1: Detection of wakeup event on falling edge.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IWUF</name>
          <displayName>IWUF</displayName>
          <description>IWUF register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>IWUF0</name>
              <description>IWUF0: Internal wakeup flag (LPUART).
- 0: no wakeup from LPUART occurred since last clear.
- 1: a wakeup from LPUART occurred since last clear.
Cleared by writing 1 in this bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUF1</name>
              <description>IWUF1: Internal wakeup flag (RTC).
- 0: no wakeup from RTC occurred since last clear.
- 1: a wakeup from RTC occurred</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUF2</name>
              <description>IWUF2: Internal wakeup flag (LCD).
- 0: no wakeup from LCD occurred since last clear.
- 1: a wakeup from LCD occurred since last clear.
Cleared by writing 1 in this bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUF3</name>
              <description>IWUF3: Internal wakeup flag (COMP).
- 0: no wakeup from COMP occurred since last clear.
- 1: a wakeup from COMP occurred since last clear.
Cleared by writing 1 in this bit.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IWUF4</name>
              <description>IWUF4: Internal wakeup flag (LCSC).
- 0: no wakeup from LCSC occurred since last clear.
- 1: a wakeup from LCSC occurred since last clear.
Cleared by writing 1 in this bit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WMRSUBGF</name>
              <description>WMRSUBGF Wakeup MRSUBG Flag
This bit is set by hardware when a MRSUBG wakeup is detected 
It is cleared by a reset pad or by software writing 1 in this bit field.
- 0: No MRSUBG Wakeup detected
- 1: MRSUBG Wakeup detected
writting 1 in this bit, clears the interrupt</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WMRSUBGHCPUF</name>
              <description>WMRSUBGHCPUF Wakeup MRSUBG HOST CPU Flag (cf. user manual)
This bit is set by hardware when a MRSUBG HOST CPU wakeup is detected 
It is cleared by a reset pad or by software writing 1 in this bit field.
- 0: No MRSUBG Host CPU wakeup detected
- 1: MRSUBG Host CPU wakeup detected
writting 1 in this bit, clears the interrupt</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WLPAWURF</name>
              <description>WLPAWURF Wakeup LPAWUR Flag (cf. user manual)
This bit is set by hardware when a LPAWUR wakeup is detected 
It is cleared by a reset pad or by software writing 1 in this bit field.
- 0: No LPAWUR wakeup detected
- 1: LPAWUR wakeup detected
writting 1 in this bit, clears the interrupt</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR2</name>
          <displayName>SR2</displayName>
          <description>SR2 register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0xF3F6</resetValue>
          <fields>
            <field>
              <name>SMPSBYPR</name>
              <description>SMPSBYPR: SMPS Force Bypass Control Replica
This bit mirrors the actual BYPASS_3V3 control signal driven to the SMPS regulator, dependant on the real working state.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SMPSENR</name>
              <description>SMPSENR: SMPS Enable Control Replica
This bit mirrors the actual ENABLE_3V3 control signal driven to the SMPS regulator, dependant on the real working state.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SMPSRDY</name>
              <description>SMPSRDY: SMPS Ready Status
This bit provides the information whether SMPS is ready. 
- 0: SMPS regulator is not ready 
- 1: SMPS regulator is ready.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IOBOOTVAL2</name>
              <description>Bit3: PB15  input value on VDD33 latched at POR
Bit2: PB14  input value on VDD33 latched at POR
Bit1: PB13  input value on VDD33 latched at POR
Bit0: PB12 input value on VDD33 latched at POR</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REGLPS</name>
              <description>REGLPS: Regulator Low Power Started
This bit provides the information whether low power regulator is ready. 
- 0: LP regulator is not ready.
- 1: LP regulator is ready.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REGMS</name>
              <description>REGMS: Main regulator ready status.
- 0: The Main regulator is not ready.
- 1: The Main regulator is ready.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PVDO</name>
              <description>PVDO: Power Voltage Detector Output
When the Power Voltage Detector is enabled (CR2.PVDE) this bit is set when the system supply (VDDIO) is
lower than the selected PVD threshold (CR2.PVDLS)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IOBOOTVAL</name>
              <description>Bit3: PA11  input value on VDD33 latched at POR
Bit2: PA10  input value on VDD33 latched at POR
Bit1: PA9  input value on VDD33 latched at POR
Bit0: PA8 input value on VDD33 latched at POR</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR5</name>
          <displayName>CR5</displayName>
          <description>CR5 register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x6014</resetValue>
          <fields>
            <field>
              <name>SMPSLVL</name>
              <description>SMPSLVL[3:0] SMPS Output Level Voltage Selection
Select the SMPS output voltage with a granularity of 50mV. Default = '0100' (1.4V)
Vout = 1.2 + 0.05*SMPSOUT (V)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPSBOMSEL</name>
              <description>SMPSBOMSEL: SMPS BOM Selection:
- 00: BOM1
- 01: BOM2 (default)
- 10: BOM3
- 11: n/a</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_BOF_STATIC</name>
              <description>SMPS_BOF_STATIC: SMPS Bypass on the Fly static
- 0 : disabled (by default)
- 1 : SMPS Bypass on  the fly static is enabled (EN_SW=1)</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOSMPS_BOF</name>
              <description>NOSMPS_BOF: No SMPS Mode to be used in accordance to SMPS_BOF_STATIC =1  
When this bit is set, the SMPS regulator will be disabled. Note that this configuration should be used only SMPS_BOF_STATIC=1.
- 0 : No effect, SMPS is enabled. (default)
- 1 : SMPS is disabled;</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPSLPOPEN</name>
              <description>SMPSLPOPEN: In Low Power mode SMPS is in OPEN mode (instead of PRECHARGE mode).
When this bit is set, when the chip is in Low power mode the SMPS regulator will be disabled (HZ) Documentation needed.
- 0 : in Low Power mode, SMPS is in PRECHARGE, output is connected to VDDIO. (default)
- 1 : in Low Power mode, SMPS is disabled, output is floating</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPSFBYP</name>
              <description>SMPSFB Force SMPS Regulator in bypass mode
When this bit is set, the SMPS regulator will be forced to operate in precharge mode. the actual state of  SMPS can be observed thanks to the replica SR2.SMPSBYPR.
- 0 : no effect (by default)
- 1 : SMPS is disabled and bypassed (ENABLE_3V3=0 and PRECHARGE_3V3=1)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NOSMPS</name>
              <description>NOSMPS: No SMPS Mode  
When this bit is set, the SMPS regulator will be disabled. Note that this configuration should be used only when SMPS_FB pad is directly connected to VBATT or Vext, without L/C BOM.
- 0 : No effect, SMPS is enabled. (Default)
- 1 : SMPS is disabled;</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_ENA_DCM</name>
              <description>SMPS_ENA_DCM: enable discontinuous conduction mode
- 0 : disable (Default)
- 1 : enable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKDETR_DISABLE</name>
              <description>CLKDETR_DISABLE: disable SMPS clock detection
The SMPS clock detection enables an automatic SMPS bypass switching in case of unwanted loss of SMPS clock.
- 0 : SMPS clock detection enabled (default)
- 1 : SMPS clock detection disabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_PRECH_CUR_SEL</name>
              <description>SMPS_PRECH_CUR_SEL[1:0] Selection for SMPS PRECHARGE limit current
- 00: 2.5mA 
- 01: 5mA
- 10: 10mA 
- 11: 20mA (default)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_BOF_DYN</name>
              <description>SMPS_BOF_DYN: SMPS Bypass on the Fly dynamic
- 0 : disabled (by default)
- 1 : SMPS Bypass on  the fly dynamic is enabled (EN_LDO=1)</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PUCRA</name>
          <displayName>PUCRA</displayName>
          <description>PUCRA register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFF7</resetValue>
          <fields>
            <field>
              <name>PUA</name>
              <description>PUA[x] : Pull Up Port A
Pull up activation on port A[i] pad when APC bit of PWRC CR1 is set
- 1: Pull-Up activated on port A[i] when APC bit of PWRC CR1 bit is set and PWR_PDCRA[x] is reset
- 0: Pull-Up not activated on port A[i]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PDCRA</name>
          <displayName>PDCRA</displayName>
          <description>PDCRA register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x8</resetValue>
          <fields>
            <field>
              <name>PDA</name>
              <description>PDA[x]: Pull Down Port A
Pull Down activation on port A[i] pad when APC bit of PWRC CR1 is set
- 1: Pull-Down activated on Port A[i] when APC bit of PWRC CR1 bit is set
- 0: Pull-Down not activated on Port A[i]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PUCRB</name>
          <displayName>PUCRB</displayName>
          <description>PUCRB register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <fields>
            <field>
              <name>PUB</name>
              <description>PUB[x] : Pull Up Port B
Pull up activation on port B[i] pad when APC bit of PWRC CR1 is set
- 1: Pull-Up activated on port B[i] when APC bit of PWRC CR1 bit is set and PWR_PDCRB[x] is reset
- 0: Pull-Up not activated on port B[i]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PDCRB</name>
          <displayName>PDCRB</displayName>
          <description>PDCRB register</description>
          <addressOffset>0x2c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>PDB</name>
              <description>PDB[x]: Pull Down Port B
Pull Down activation on port B[i] pad when APC bit of PWRC CR1 is set
- 1: Pull-Down activated on Port B[i] when APC bit of PWRC CR1 bit is set
- 0: Pull-Down not activated on Port B[i]</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EWUA</name>
          <displayName>EWUA</displayName>
          <description>EWUA register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>EWUA</name>
              <description>EWUA[x] Enable WakeUp line PA[x]
When this bit is set the PA[x] wakeup line is enabled and a rising or falling edge on wakeup line PA[x] will trigger a CPU wakeup event depending on CR7.WUPA[x] bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WUPA</name>
          <displayName>WUPA</displayName>
          <description>WUPA register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUPA</name>
              <description>WUPA[x] Wake-up Line PA[x] Polarity 
This bit defines the polarity used for event detection on external wake-up line PA[x]
- 0: Detection on high level (rising edge)
- 1: Detection on low level (falling edge)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WUFA</name>
          <displayName>WUFA</displayName>
          <description>WUFA register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUFA</name>
              <description>WUFA[x] WakeUp Flag PA[x]
This bit is set when a wakeup is detected on wakeup line PA[x]. It is cleared by a reset pad or by writing 1 in this bit field.
Writing 1 this bit, clears the interrupt:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EWUB</name>
          <displayName>EWUB</displayName>
          <description>EWUB register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>EWUB</name>
              <description>EWUB[x] Enable WakeUp line PB[x]
When this bit is set the PB[x] wakeup line is enabled and a rising or falling edge on wakeup line PB[x] will trigger a CPU wakeup event depending on CR9.WUPB[x] bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WUPB</name>
          <displayName>WUPB</displayName>
          <description>WUPB register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUPB</name>
              <description>WUPB[x] Wake-up Line PB[x] Polarity 
This bit defines the polarity used for event detection on external wake-up line PB[x]
- 0: Detection on high level (rising edge)
- 1: Detection on low level (falling edge)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WUFB</name>
          <displayName>WUFB</displayName>
          <description>WUFB register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUFB</name>
              <description>WUFB[x] WakeUp Flag PB[x]
This bit is set when a wakeup is detected on wakeup line PB[x]. It is cleared by a reset pad or by writing 1 in this bit field.
Writing 1 this bit, clears the interrupt:</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDWN_WUEN</name>
          <displayName>SDWN_WUEN</displayName>
          <description>SDWN_WUEN register</description>
          <addressOffset>0x4c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUEN</name>
              <description>WUEN PB0 I/O WakeUp from shutdown Enable
When this bit is set the PB0 wakeup from shutdown is enabled so that a rising or falling edge on PB0 (depending on SDWN_WUPOL..WUPOL bit) will trigger a CPU wakeup. It is cleared by a PORESETn.
- 0: PB0 wakeup from shutdown disabled
- 1: PB0 wakeup from shutdown enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDWN_WUPOL</name>
          <displayName>SDWN_WUPOL</displayName>
          <description>SDWN_WUPOL register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUPOL</name>
              <description>WUPOL PB0 I/O WakeUp from shutdown Polarity
This bit defines the polarity used for wakeup from shutdown detection on PB0 pin. It is cleared by a PORESETn.
- 0: Detection on high level  (rising edge)
- 1: Detection on low level  (falling edge)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDWN_WUF</name>
          <displayName>SDWN_WUF</displayName>
          <description>SDWN_WUF register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>WUF</name>
              <description>WUF PB0 I/O WakeUp from shutdown Flag
This bit is set when a wakeup from shutdown is detected on PB0 pin.  It is cleared by a PORESETn or by writing 0 in this bit field.
- 0: Shutdown wakeup from PB0 not occurred
- 1: Shutdown wakeup from PB0 occurred</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BOF_TUNE</name>
          <displayName>BOF_TUNE</displayName>
          <description>BOF_TUNE register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x4</resetValue>
          <fields>
            <field>
              <name>BOF_TUNE</name>
              <description>BOF_TUNE:  selection of the Bypass on the Fly LDO output voltage.
- 0:	1.2V
- 1:	1.2V
- 2:	1.2V
- 3:	1.3V
- 4:	1.4V (Default)
- 5:	1.5V
- 6:	1.6V
- 7:	1.7V
- 8:	1.8V
- 9:	1.9V
- 10:	2V
- 11:	2.1V
- 12:	2.2V
- 13:	2.3V
- 14:	2.4V
- 15:	2.4V</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGR</name>
          <displayName>DBGR</displayName>
          <description>DBGR register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>DEEPSTOP2</name>
              <description>DEEPSTOP2 low power saving mode emulation enable
this bit enable an emulated debug DEEPSTOP low power mode. 
If emulation is enabled, entering in DEEPSTOP mode, the v12i power domain still enters power saving mode, but its clock and power are maintained.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPSFRDY</name>
              <description>SMPSFB Force ready check 
When this bit is set, the SMPS regulator will be forced to operate in precharge mode. the actual state of  SMPS can be observed thanks to the replica SR2.SMPSBYPR.
- 0 : no effect (by default)
- 1 : SMPS is disabled and bypassed (ENABLE_3V3=0 and PRECHARGE_3V3=1)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KELVIN_TEST</name>
              <description>KELVIN_TEST[2:0]: Enable TEST mode Kelvin for LDO_RF (Write protected by IFR3 key)
- 000: 0mA (open) (default 0x0)
- 001 for 1mA
- 010 for 3mA
- 011 for 5mA
- 100 for 8mA
- 101 for 10mA
else: 0mA (open) for other combinations.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_PRECH</name>
              <description>DIS_PRECH[2:0]: disable precharge during deepstop (debug)
allowed combination are: 
- 111: precharge and SMPS monitoring are disabled (whatever CR5.SMPSLPOPEN)
- 101: precharge are activated only at deepstop exit (to be used only with CR5.SMPSLPOPEN=1) 
else: No effect (default 0x0)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXTSRR</name>
          <displayName>EXTSRR</displayName>
          <description>EXTSRR register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>DEEPSTOPF</name>
              <description>DEEPSTOPF System DeepStop Flag
This bit is set by hardware and cleared only by a POR reset or by writing '1' in this bit field
- 0: System has not been in DEEPSTOP mode
- 1: System has been in DEEPSTOP mode</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFPHASEF</name>
              <description>RFPHASEF RFPHASE Flag
This bit is set by hardware after a S3LP wake-up event (S3LP activation); it
is cleared either by software, writing '1' in this bit field, or by hardware when Ready2Sleep signal is asserted by the Radio IP.
- 0: RF IP does not require attention
- 1: RF IP awake and requesting system attention</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGSMPS</name>
          <displayName>DBGSMPS</displayName>
          <description>DBGSMPS register</description>
          <addressOffset>0x8c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x8000</resetValue>
          <fields>
            <field>
              <name>TESTDIG</name>
              <description>TESTDIG: SMPS TEST_DIG_3V3[3:0] SMPS control signal</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTKEL</name>
              <description>TESTKEL: SMPS TEST_KEL_3V3[1:0] SMPS control signal</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HOT_STUP</name>
              <description>HOT_STUP_3V3 SMPS control signal</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_STUP</name>
              <description>NO_STUP_3V3 SMPS control signal</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTILIM</name>
              <description>TESTILIM: SMPS TEST_ILIM_3V3 SMPS control signal</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTLRES_RAMP</name>
              <description>CTLRES_RAM_3V3 SMPS control signal</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_BIG_MOS</name>
              <description>DIS_BIG_MOS_3V3 SMPS control signal</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TEST_OL</name>
              <description>TEST_OL_3V3 SMPS control signal</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_ILIM</name>
              <description>DIS_ILIM_3V3 SMPS control signal</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ILIM_BOOST</name>
              <description>ILIM_BOOST_3V3 SMPS current limitation Boost
- 0: Max current = 110mA (Default)
- 1: Max current = 130mA</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOF_CUR_SEL</name>
              <description>BOF_CUR_SEL Bypass On the Fly current limitation 
- 00 : 20mA 
- 01 : 40mA
- 10 : 60mA (default)
- 11 : no limit</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TRIMR</name>
          <displayName>TRIMR</displayName>
          <description>TRIMR register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x2304</resetValue>
          <fields>
            <field>
              <name>RFD_REG_TRIM</name>
              <description>RFD_REG_TRIM[2:0]: RF LDO Trimming
By default, this value is taken from the engi bytes; and saved on V12o domain when OBL done.
if associated ENGTRIM is enabled the RF LDO trimming can be controlled by the dedicated ENGTRIM register. Default= '100'.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SPARE</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRIM_MR</name>
              <description>TRIM_MR[3:0]: Main Regulator Voltage Trimming
By default, this value is taken from the engi bytes; and saved on V12o domain when OBL done.
if associated ENGTRIM.TRIMMREN is enabled the Main Regulator Voltage can be controlled by the dedicated ENGTRIM.TRIM_MR register. Default= '0000'.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SMPS_TRIM</name>
              <description>SMPS_TRIM[2:0]: SMPS Output Voltage Trimming
By default, this value is taken from the engi bytes; and saved on V12o domain when OBL done.
if associated ENGTRIM is enabled the SMPS output voltage can be controlled by the dedicated ENGTRIM register. Default= '011'.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BOF_TRIM</name>
              <description>BOF_TRIM[2:0]: Bypass On the Fly Output Voltage Trimming
By default, this value is taken from the engi bytes; and saved on V12o domain when OBL done.
if associated ENGTRIM is enabled the SMPS output voltage can be controlled by the dedicated ENGTRIM register. Default= '100'.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENGTRIM</name>
          <displayName>ENGTRIM</displayName>
          <description>ENGTRIM register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>TRIMRFDREGEN</name>
              <description>TRIMRFDREGEN: trimming RFREG enabled
- 1: trimming bit applied from ENGTRIM register
- 0: trimming bit applied from OBL (can be read on TRIMR register)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_RFDREG</name>
              <description>TRIM_RFDREG:  RF Regulator Trimming
By default, this value is not applied, but taken from the engi bytes; if ENGTRIM.TRIMRFDREGEN=1, the startup current can be controlled by this register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPARE</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIMMREN</name>
              <description>TRIMMREN: trimming MR enabled
- 1: trimming bit applied from ENGTRIM register
- 0: trimming bit applied from OBL (can be read on TRIMR register)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIM_MR</name>
              <description>TRIM_MR: Main Regulator Output Voltage Trimming
By default, this value is not applied, but taken from the engi bytes; if ENGTRIM.TRIMMREN=1, the startup current can be controlled by this register.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPSTRIMEN</name>
              <description>SMPSTRIMEN: trimming SMPS enabled
- 1: trimming bit applied from ENGTRIM register
- 0: trimming bit applied from OBL (can be read on TRIMR register)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMPS_TRIM</name>
              <description>SMPS_TRIM: SMPS Output Voltage Trimming
By default, this value is not applied, but taken from the engi bytes; if ENGTRIM.SMPSTRIMEN=1, the SMPS output voltage can be controlled by this register.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_STATUS_REG1</name>
          <displayName>DBG_STATUS_REG1</displayName>
          <description>DBG_STATUS_REG1 register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x202</resetValue>
          <fields>
            <field>
              <name>SMPS_FSM_STATE</name>
              <description>SMPS_FSM_STATE[2:0]: Indicates the current state of the SMPS FSM inside the PWRC.:
- 000: STARTUP
- 001: SMPS_REQ
- 010: SMPS_RUN
- 011: STOP
- 100: NOSMPS
- 101: PRECHARGE
- 110: NOSMPS_BOF</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FLASH_FSM_STATE</name>
              <description>FLASH_FSM_STATE[2:0]: Indicates the current state of the FLASH FSM inside the PWRC:
- 000: STATE1: FLASH POR
- 001: STATE2: FLASH PWRUP
- 010: STATE3: FLASH READY
- 101: STATE4: FLASH SWITCH OFF
- 110: STATE5: FLASH PWR DOWN</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_STATUS_REG2</name>
          <displayName>DBG_STATUS_REG2</displayName>
          <description>DBG_STATUS_REG2 register</description>
          <addressOffset>0x9c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x201</resetValue>
          <fields>
            <field>
              <name>PMU_FSM_STATE</name>
              <description>PMU_FSM_STATE[3:0]: Indicates the current state of the PMU FSM inside the PWRC.
- 0000: POR
- 0001: RUN
- 0010: DS ENTRY
- 0011: WAIT1
- 0100: WAIT2
- 0101: WAIT
- 0110: WAIT3
- 0111: WAIT4
- 1000: ISOLATION
- 1001: DEEPSTOP
- 1010: SHUTDOWN
- 1011: DEEPSTOP EXIT</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RAM_FSM_STATE</name>
              <description>RAM_FSM_STATE[1:0]: Indicates the current state of the RAM FSM inside the PWRC:
- 00: POR
- 01: POWER UP
- 10: READY
- 11: OFF</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ENGTRIM2</name>
          <displayName>ENGTRIM2</displayName>
          <description>ENGTRIM2 register</description>
          <addressOffset>0xa0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>BOFTRIMEN</name>
              <description>BOFTRIMEN: trimming BOF enabled
- 1: trimming bit applied from ENGTRIM2 register
- 0: trimming bit applied from OBL (can be read on TRIMR register)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BOF_TRIM</name>
              <description>SMPS_TRIM: SMPS Output Voltage Trimming
By default, this value is not applied, but taken from the engi bytes; if ENGTRIM.BOFTRIMEN=1, the SMPS output voltage can be controlled by this register.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RCC</name>
      <groupName>RCC</groupName>
      <baseAddress>0x48400000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xB0</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RCC</name>
        <description>Reset and Clock Controller</description>
        <value>1</value>
      </interrupt>
      <registers>
        <register>
          <name>CR</name>
          <displayName>CR</displayName>
          <description>CR register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00001400</resetValue>
          <fields>
            <field>
              <name>LSION</name>
              <description>Internal Low Speed oscillator enable
Set and reset by software.
Reset source only for this field: PORESETn
0: LSI RC oscillator OFF
1: LSI RC oscillator ON</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSIRDY</name>
              <description>Internal Low Speed oscillator Ready
Set and reset by hardware to indicate when the Low Speed Internal RC oscillator is stable.
Reset source only for this field: PORESETn
0: LSI RC oscillator not ready
1: LSI RC oscillator ready</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSEON</name>
              <description>External Low Speed Clock enable.
Set and reset by software.
Reset source only for this field: PORESETn
0: LSE oscillator OFF
1: LSE oscillator ON
Note that enablng this bit, the configuration of PB12 and PB13 will be bypassed (whatever DFTMUX or AF selection)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSERDY</name>
              <description>External Low Speed Clock ready flag.
Set by hardware to indicate that LSE oscillator is stable. 
0: LSE oscillator not ready
1: LSE oscillator ready</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSEBYP</name>
              <description>External Low Speed Clock bypass.
Set and reset by software.
Reset source only for this field: PORESETn
0: LSE oscillator bypass OFF
1: LSE oscillator bypass ON 
Note that enablng this bit, the configuration of PB13 will be bypassed (whatever DFTMUX or AF selection)</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOCKDET_NSTOP</name>
              <description>Lock detector Nstop value
When start_stop signal is high; a counter is incremented every 16 MHz clock cycle. When the counter reaches (NSTOP+1) x 64 value, the lock_det signal is set high indicating that the PLL is locked. As soon as the start_stop signal is low the counter is reset to 0.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIRDY</name>
              <description>Internal High Speed clock ready flag.
Set by hardware to indicate that internal RC 64MHz oscillator is stable. 
This bit is activated only if the RC is enabled by HSION (it is not activated if the RC is enabled by an IP request).
0: internal RC 64 MHz oscillator not ready
1: internal RC 64 MHz oscillator ready</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HSEPLLBUFON</name>
              <description>External High Speed Clock Buffer for PLL RF  enable.
Set and reset by software.
0: HSE PLL Buffer OFF
1: HSE PLL Buffer ON (default)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLON</name>
              <description>Internal High Speed Clock PLL enable
0: PLL is OFF
1: PLL is ON</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLRDY</name>
              <description>Internal High Speed Clock PLL ready flag.
0: PLL is unlocked
1: PLL is locked</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FMRAT</name>
              <description>Force MRSUBG accurate clock ready status (for debug purpose)
0: no effect
1: active_transmission is force to '1' whatever the HSIPLLRDY/HSE status</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSEON</name>
              <description>External High Speed Clock enable.
Set and reset by software.
in low power mode, HSE is turned off.  
HSE is turned ON only when RFSUBG LDO is Ready
0: HSE oscillator OFF
1: HSE oscillator ON</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSERDY</name>
              <description>External High Speed Clock ready flag.
Set by hardware to indicate that HSE oscillator is stable. 
0: HSE oscillator not ready
1: HSE oscillator ready</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICSCR</name>
          <displayName>ICSCR</displayName>
          <description>ICSCR register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x3f000000</resetValue>
          <fields>
            <field>
              <name>LSITRIMEN</name>
              <description>Low Speed oscillator trimming enable
Set and reset by software.
Reset source only for this field: PORESETn
0: LSI oscillator Bias trimming disabled
1: LSI oscillator Bias trimming enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSITRIMOK</name>
              <description>LSITRIMOK: Low Speed oscillator trimming OK
Set and reset by hardware to indicate when the Low Speed Internal RC oscillator has reached an optimal trimming of its bias current; this bit is only valid when LSITRIMEN is active.
0: LSI Bias trimming (LSIBW) is not good
1: LSI Bias trimming (LSIBW) value is OK</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LSIBW</name>
              <description>Trimming in test mode
The value stored is the correspondent Engi Byte and represents the actual value driving the input of the hardware macro.
This value is loaded soon after the completion of the Option Byte Loading procedure.
This field is directly writeable only in Test Mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>HSITRIMOFFSET</name>
              <description>ICSCR[18:16] = HSITRIMOFFSET[2:0]: High Speed oscillator signed trimming offset 
 000: 0 (+ 0 MHz / default)
 001: 1 (-0.5 MHz)
 010: 2 (-1MHz)
 011: 3 (-1.5 MHz)
 100: -1 (+2 MHz)
 101: -2 (+1.5MHz)
 110: -3 (+1 MHz)
 111: -4 (+0.5 MHz)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSITRIM</name>
              <description>High Speed Internal clock trimming.
This value is loaded soon after the completion of the Option Byte Loading procedure.
When max value 0x3f is set, HSI is less than 64MHz</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CFGR</name>
          <displayName>CFGR</displayName>
          <description>CFGR register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000240</resetValue>
          <fields>
            <field>
              <name>HSESEL</name>
              <description>Clock source selection request:
0: HSI clock source is requested (default)
1: HSE clock source is requested</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOPHSI</name>
              <description>Stop HSI clock source request
0: HSI is enabled (default)
1: disable HSI is requested</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSESEL_STATUS</name>
              <description>Clock source selection Status
0: HSI clock source is selected
1: HSE clock source is selected
Mirror the actual system clock source, depending on clock switching mechanism and limitations</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLKSYSDIV</name>
              <description>system clock frequency selection request
000: div1 (HSI 64M / HSE 48M)
001: div2 (HSI 32M / HSE 24M)
010: div4/div3 (HSI/HSE)  (16M)
011: div8/div6 (HSI/HSE)  (8M) *
100: div16/div12 (HSI/HSE)  (4M) *
101: div32/div24 (HSI/HSE)  (2M) *
110: div64/div48 (HSI/HSE)  (1M) *
Note: behavior depends on depending on CFGR.HSESEL and (*) APB2ENR.MRSUBGEN or LPAWUREN register</description>
              <bitOffset>5</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSYSDIV_STATUS</name>
              <description>system clock frequency selection status
000: div1 (HSI 64M / HSE 48M)
001: div2 (HSI 32M / HSE 24M)
010: div4/div3 (HSI/HSE)  (16M)
011: div8/div6 (HSI/HSE)  (8M)
100: div16/div12 (HSI/HSE)  (4M)
101: div32/div24 (HSI/HSE)  (2M)
110: div64/div48 (HSI/HSE)  (1M)
Note: behavior depends on depending on CFGR.HSESEL and APB2ENR.MRSUBGEN register</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SMPSDIV</name>
              <description>SMPS clock prescaling factor to generate 4MHz or 8MHz 
0: SMPS clock 8MHz   (default )
1: SMPS clock 4MHz</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPUCLKSEL</name>
              <description>LPUCLKSEL: Selection of LPUART clock
0: 16 MHz peripheral clock (default)
1: LSE clock (Mandatory in LPUART deepstop mode)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSLOWSEL</name>
              <description>slow clock source selection
Set by software to select the clock source. This is no glitch free mechanism
Reset source only for this field: PORESETn
00: '0' (default)
01: LSE oscillator clock used as slow clock
10: LSI oscillator clock used as slow clock
11:HSI_64M divided by 2048 used as slow clock</description>
              <bitOffset>15</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IOBOOSTEN</name>
              <description>IOBOOSTEN: IO BOOSTER enable
0: IO BOOSTER block is disabled
1: IO BOOSTER block is enabled.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCOEN</name>
              <description>LCOEN: LCO enable on PA10 also in deepstop.
0: LCO output on PA10 is disabled
1: LCO output on PA10 is enabled.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3I2SCLKSEL</name>
              <description>SPI3I2SCLKSEL: Selection of I2S clock for SPI3 IP.
00: 32 MHz peripheral clock (default)
01: 16 MHz peripheral clock
10: CLK_SYS
11: CLK_SYS
Note: the I2S clock frequency must be higher or equal to the system clock (configured
through RCC_CFGR.CLKSYSDIV[2:0] bit field).</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCOSEL</name>
              <description>Low speed Configurable Clock Output Selection.
Set and reset by software. Glitches propagation possible.
Reset source only for this field: PORESETn
00: LCO output disabled, no clock on LCO
01: not used
10: internal 32 KHz (LSI) oscillator clock selected
11: external 32 KHz (LSE) oscillator clock selected</description>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCOSEL</name>
              <description>Main Configurable Clock Output Selection.
Set and reset by software. Glitches propagation possible.
000: MCO output disabled, no clock on MCO
001: system clock selected
010: na
011: internal RC 64 MHz (HSI) oscillator clock selected
100: external oscillator (HSE) clock selected
101: internal RC 64 MHz (HSI) oscillator divided by 2048 and used as slow clock selected
110: SMPS clock selected
111: AUX ADC ANA clock selected</description>
              <bitOffset>26</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCOPRE</name>
              <description>Configurable Clock Output Prescaler.
Set and reset by software. 
Glitches propagation if CCOPRE is modified after CCO output is enabled.
000: CCO clock is divided by 1
001: CCO clock is divided by 2
010: CCO clock is divided by 4
011: CCO clock is divided by 8
100: CCO clock is divided by 16
101: CCO clock is divided by 32
Others: not used</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSSWCR</name>
          <displayName>CSSWCR</displayName>
          <description>CSSWCR register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LSISWTRIMEN</name>
              <description>Low Speed oscillator trimming by SW enable
Set and reset by software.
Reset source only for this field: PORESETn
0: LSI oscillator Bias trimming by SW disabled
1: LSI oscillator Bias trimming by  SW enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSISWBW</name>
              <description>Low Speed Internal clock trimming value to set by SW
Reset source only for this field: PORESETn</description>
              <bitOffset>1</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSEDRV</name>
              <description>Maximum Crystal gm for Low Speed External XO
(to connect to XTDRV of 32kHz LSE XO =&gt; into IO V33?) to amplify drinving capacity modulation
Set by software. 
Reset source only for this field: PORESETn
00: 0.0, low drive capability
01: 0.1,  medium low drive capability
10: 1.0, medium high drive capability
11: 1.1, highdrive capability</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSISWTRIMEN</name>
              <description>High Speed oscillator trimming by SW enable
Set and reset by software.
0: HSI oscillator Bias trimming by SW disabled
1: HSI oscillator Bias trimming by SW enabled</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSITRIMSW</name>
              <description>High Speed Internal clock trimming value to set by SW.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KRMR</name>
          <displayName>KRMR</displayName>
          <description>KRMR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>KRM_EN</name>
              <description>KRM_EN: Variable rate multiplier Enable
Reset source only for this field: PORESETn
0: KRM is disabled (default)
1: KRM is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>KRM</name>
              <description>KRM[4:0] :SMPS clock dividing Ratio (CLK_SPMS_KRM frequency= CLK_ROOT frequency
(depending on RCC_CFGR.HSESEL) divided by KRM when KRMEN=1)
Reset source only for this field: PORESETn
- 0x00 to 0x08: SMPS clock frequency equals CLK_ROOT/8 (8.00 MHz / 6.00 MHz)
- 0x09: SMPS clock frequency equals CLK_ROOT/9 (7.11 MHz / 5.33 MHz)
- 0x0A: SMPS clock frequency equals CLK_ROOT/10 (6.40 MHz / 4.80 MHz)
- 0x0B: SMPS clock frequency equals CLK_ROOT/11 (5.82 MHz / 4.36 MHz)
- 0x0C: SMPS clock frequency equals CLK_ROOT/12 (5.33 MHz / 4.00 MHz)
- 0x0D: SMPS clock frequency equals CLK_ROOT/13 (4.92 MHz / 3.69 MHz)
- 0x0E: SMPS clock frequency equals CLK_ROOT/14 (4.57 MHz / 3.43 MHz)
- 0x0F: SMPS clock frequency equals CLK_ROOT/15 (4.27 MHz / 3.20 MHz)
- 0x10: SMPS clock frequency equals CLK_ROOT/16 (4.00 MHz / 3.00 MHz)
- 0x1x: Reserved
Note: SMPS clock frequency must be selected in a range [4-8] MHz (depending on
RCC_KRMR.KRM and RCC_CFGR.HSESEL).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIER</name>
          <displayName>CIER</displayName>
          <description>CIER register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>LSIRDYIE</name>
              <description>LSI Ready Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by internal RC 32 kHz oscillator stabilization. 
0: LSI ready interrupt disabled
1: LSI ready interrupt enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSERDYIE</name>
              <description>LSE Ready Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the external 32 kHz oscillator stabilization.
0: LSE ready interrupt disabled
1: LSE ready interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIRDYIE</name>
              <description>HSI Ready Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the internal RC 64MHz oscillator stabilization.
0: HSI ready interrupt disabled
1: HSI ready interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSERDYIE</name>
              <description>HSE Ready Interrupt Enable
Set and reset by software to enable/disable interrupt caused by the external HSE oscillator stabilization.
0: HSE ready interrupt disabled
1: HSE ready interrupt enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLRDYIE</name>
              <description>HSI PLL Ready Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the HSI 64MHz PLL locked on HSE.
0: HSI PLL ready interrupt disabled
1: HSI PLL ready interrupt enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLUNLOCKDETIE</name>
              <description>HSIPLLUNLOCKDETIE: HSI PLL unlock detection Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the HSI 64MHz PLL unlock.
0: HSI PLL unlock detection interrupt disabled
1: HSI PLL unlock detection interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCRSTIE</name>
              <description>RTCRSTIE: RTC reset end Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the RTC reset end.
0: HSI PLL unlock detection interrupt disabled
1: HSI PLL unlock detection interrupt enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDGRSTIE</name>
              <description>WDGRSTIE: Watchdog reset end Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the watchdog reset end.
0: interrupt disabled
1: interrupt enabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPURSTIE</name>
              <description>LPURSTIE: LPUART reset end Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the LPUART reset end.
0: interrupt disabled
1: interrupt enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCDRSTIE</name>
              <description>LCDRSTIE: LCD reset end Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the LCD reset end.
0: interrupt disabled
1: interrupt enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSCRSTIE</name>
              <description>LCSCRSTIE: LCSC reset release interrupt enable.
0: LCSC reset release interrupt is disabled.
1: LCSC reset release interrupt is enabled.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIFR</name>
          <displayName>CIFR</displayName>
          <description>CIFR register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>LSIRDYIF</name>
              <description>LSI Ready Interrupt flag
Set by hardware when LSI clock becomes stable. 
0: No clock ready interrupt caused by the internal RC 32 KHz oscillator
1: Clock ready interrupt caused by the internal RC 32 kHz oscillator</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSERDYIF</name>
              <description>LSE Ready Interrupt Flag.
Set by hardware when LSE clock becomes stable. 
0: No clock ready interrupt caused by the LSE oscillator
1: Clock ready interrupt caused by the LSE oscillator</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIRDYIF</name>
              <description>HSI Ready Interrupt Flag.
Set by hardware when HSI becomes stable. 
0: No clock ready interrupt caused by the HSI oscillator
1: Clock ready interrupt caused by the HSI oscillator</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSERDYIF</name>
              <description>HSE Ready Interrupt Flag.
Set by hardware when HSE becomes stable. 
0: No clock ready interrupt caused by the HSE oscillator
1: Clock ready interrupt caused by the HSE oscillator</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLRDYIF</name>
              <description>HSI PLL Ready Interrupt Flag.
Set by hardware when HSI PLL 64MHz becomes stable. 
0: No clock ready interrupt caused by the HSI PLL64 MHz oscillator
1: Clock ready interrupt caused by the HSI PLL64 MHz oscillator</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIPLLUNLOCKDETIF</name>
              <description>HSIPLLUNLOCKDETIF: HSI PLL unlock detection Interrupt Flag.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCRSTIF</name>
              <description>RTC reset end Interrupt Flag. Raised when reset is released on 32kHz clock</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDGRSTIF</name>
              <description>WDG reset end Interrupt Flag. Raised when reset is released on 32kHz clock</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPURSTIF</name>
              <description>LPUART reset end Interrupt Flag. Raised when reset is released on 32kHz clock</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCDRSTIF</name>
              <description>LCD reset end Interrupt Flag. Raised when reset is released on 32kHz clock</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSCRSTIF</name>
              <description>LCSC reset end Interrupt Flag. Raised when reset is released on 32kHz clock</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSCMDR</name>
          <displayName>CSCMDR</displayName>
          <description>CSCMDR register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000080</resetValue>
          <fields>
            <field>
              <name>REQUEST</name>
              <description>Request for system clock switching
Cleared by hardware when system clock frequency switch is done 
0: To cancel an ongiong request - still possible until IRQ assertion
1: To update the system clock frequency</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSYSDIV_REQ</name>
              <description>system clock frequency selection request
000: div1 (HSI 64M / HSE) (48M)
001: div2 (HSI 32M / HSE (24M*)
010: div4/div3 (HSI/HSE)  (16M)
011: div8/div6 (HSI/HSE)  (8M) *
100: div16/div12 (HSI/HSE)  (4M) *
101: div32/div24 (HSI/HSE)  (2M) *
110: div64/div48 (HSI/HSE)  (1M) *
Note: behavior depends on depending on CFGR.HSESEL and (*) APB2ENR.MRSUBGEN or LPAWUREN</description>
              <bitOffset>1</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STATUS</name>
              <description>Status of clock switch sequence
00: IDLE no switch requested
01: ONGOING clock frequency switch is ongoing
10: DONE clock frequency switch done
11: Reserved</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EOFSEQ_IE</name>
              <description>End of sequence Interrupt Enable.
Set and reset by software to enable/disable interrupt caused by the clock system switch.
0: End of sequence interrupt disabled
1: End of sequence interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOFSEQ_IRQ</name>
              <description>End of Sequence flag
Set by hardware when clock system swtich is ended
0: No end of sequence event occured
1: End of sequece event occured</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBRSTR</name>
          <displayName>AHBRSTR</displayName>
          <description>AHBRSTR register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DMARST</name>
              <description>DMA and DMAMUX reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOARST</name>
              <description>GPIOA reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOBRST</name>
              <description>GPIOB reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCRST</name>
              <description>CRC reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RNGRST</name>
              <description>RNG reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AESRST</name>
              <description>AES reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB0RSTR</name>
          <displayName>APB0RSTR</displayName>
          <description>APB0RSTR register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TIM2RST</name>
              <description>TIM2RST: TIM2 reset.
0: TIM2 IP is not under reset.
1: TIM2 IP is under reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIM16RST</name>
              <description>TIM16RST: TIM16 reset.
0: TIM16 IP is not under reset.
1: TIM16 IP is under reset.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSCFGRST</name>
              <description>SYSCFGRST: system controller reset.
0: system controller IP is not under reset.
1: system controller IP is under reset.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCDCRST</name>
              <description>LCDCRST: LCD controller reset.
0: LCD controller IP is not under reset.
1: LCD controller IP is under reset.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMPRST</name>
              <description>COMPRST: COMP reset.
0: COMP IP is not under reset.
1: COMP IP is under reset.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DACRST</name>
              <description>DACRST: DAC reset.
0: DAC IP is not under reset.
1: DAC IP is under reset.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCRST</name>
              <description>RTCRST: RTC reset.
0: RTC IP is not under reset.
1: RTC IP is under reset.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSCRST</name>
              <description>LCSCRST: LCSC reset.
0: LCSC IP is not under reset.
1: LCSC IP is under reset.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDGRST</name>
              <description>WDGRST: Watchdog reset.
0: Watchdog IP is not under reset.
1: Watchdog IP is under reset.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGMCURST</name>
              <description>DBGMCURST: DBGMCU reset.
0: DBGMCU IP is not under reset.
1: DBGMCU IP is under reset.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB1RSTR</name>
          <displayName>APB1RSTR</displayName>
          <description>APB1RSTR register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SPI1RST</name>
              <description>SPI1 reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCRST</name>
              <description>ADC reset for Aux-ADC IP
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPUARTRST</name>
              <description>LPUART reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USARTRST</name>
              <description>USART reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3RST</name>
              <description>SPI3 reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1RST</name>
              <description>I2C1 reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2RST</name>
              <description>I2C2 reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2RSTR</name>
          <displayName>APB2RSTR</displayName>
          <description>APB2RSTR register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>MRSUBGRST</name>
              <description>Radio MRSUBG reset.
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPAWURRST</name>
              <description>Bubble reset
Set and reset by software.
0: IP is not under reset.
1: IP is under reset.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBENR</name>
          <displayName>AHBENR</displayName>
          <description>AHBENR register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000000C</resetValue>
          <fields>
            <field>
              <name>DMAEN</name>
              <description>DMA and DMAMUX enable
Set and enable by software.
0: does not enable 
1: enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOAEN</name>
              <description>GPIOA enable. It must be enabled by default</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOBEN</name>
              <description>GPIOB enable. It must be enabled by default</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCEN</name>
              <description>CRC enable
Set and enable by software.
0: does not enable 
1: enable</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RNGEN</name>
              <description>RNG clock enable
Set and enable by software.
0: does not enable 
1: enable</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AESEN</name>
              <description>AESEN: AES clock enable.
0: AES IP is clock gated.
1: AES IP is clocked.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB0ENR</name>
          <displayName>APB0ENR</displayName>
          <description>APB0ENR register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TIM2EN</name>
              <description>TIM2: Advanced Timer  clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIM16EN</name>
              <description>TIM16: Advanced Timer  clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSCFGEN</name>
              <description>SYSTEM CONFIG clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCDEN</name>
              <description>LCD clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMPEN</name>
              <description>COMP clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DACEN</name>
              <description>DAC clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCEN</name>
              <description>RTC clock enable
Set and enable by software.
Reset source only for this field: PORESETn
0: clock disable
1: clock enable</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSCEN</name>
              <description>LCSC  clock enable.
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDGEN</name>
              <description>Watchdog  clock enable.
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGMCUEN</name>
              <description>DBG MCU  clock enable.
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB1ENR</name>
          <displayName>APB1ENR</displayName>
          <description>APB1ENR register</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SPI1EN</name>
              <description>SPI1 clock enable 
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCDIGEN</name>
              <description>AUXADC clock enable for Aux-ADC digital clock 
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCANAEN</name>
              <description>ADC clock enable for Aux-ADC analog clock 
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPUARTEN</name>
              <description>LPUART clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USARTEN</name>
              <description>USART clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3EN</name>
              <description>SPI3 clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1EN</name>
              <description>I2C1 clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2EN</name>
              <description>I2C2 clock enable
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2ENR</name>
          <displayName>APB2ENR</displayName>
          <description>APB2ENR register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>MRSUBGEN</name>
              <description>MRSUBG clock enable.
Note: when this bit is '1', it must prevent clk_sys different from 16, 32, 64. If the configured clock is lower than 16MHz (1, 2, 4 or 8 MHz) or equal to 24MHz, clk_sys must be 16MHz
0: clock disable
1: clock enable</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPAWUREN</name>
              <description>Bubble clock enable 
Set and enable by software.
0: clock disable
1: clock enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGR</name>
          <displayName>DBGR</displayName>
          <description>DBGR register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBGHSIOFF</name>
              <description>used for debug or test
0: No effect (default)
1: HSI forced off.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGBYPHSI</name>
              <description>used for debug mode with HSI bypassed by HSE
0: No effect (default)
1: HSI bypassed  HSE.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGXOEXT</name>
              <description>used for debug mode with HSE bypassed by FXTAL_IN clock and ZIV12 output used.
0: No effect (default)
1: HSE bypassed by FXTAL_IN clock and ZIV12 output used.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCEXO48MREADY</name>
              <description>FORCEXO48MREADY Force XO48M Ready input signal 
This bit is for debug and force the XO48M ready input, in order to bypass XO48M comparators.
0: No effect (default)
1: Force XOREADY=1</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSR</name>
          <displayName>CSR</displayName>
          <description>CSR register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0C000000</resetValue>
          <fields>
            <field>
              <name>RMVF</name>
              <description>Remove reset flag
Set by software to clear the value of the reset flags.
It auto clears by HW after clearing reason flags 
0: Nothing done
1: Reset the value of the reset flags</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>PADRSTF</name>
              <description>SYSTEM reset flag  
Reset by software by writing the RMVF bit.
Set by hardware when a reset from pad occurs.
0: No reset from pad occurred
1: Reset from pad occurred</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PORRSTF</name>
              <description>POWER reset flag
Reset by software by writing the RMVF bit.
Set by hardware when a power reset occurs from LPMURESET block. 
0: No POWER reset occurred
1: POWER reset occurred</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SFTRSTF</name>
              <description>Software reset flag
Reset by software by writing the RMVF bit.
Set by hardware when a software reset occurs.
0: No software reset occurred
1: Software reset occurred</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WDGRSTF</name>
              <description>Watchdog reset flag
Reset by software by writing the RMVF bit.
Set by hardware when a watchdog reset from V33 domain occurs.
0: No watchdog reset occurred
1: Watchdog reset occurred</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCKUPRSTF</name>
              <description>LOCK UP reset flag from CM0
Reset by software by writing the RMVF bit.
Set by hardware from unrecoverable exception CPU. It reset V12i domain, FLASH controller and peripherals.
0: No lockup reset occurred
1: lockup reset occurred</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RFSWHSECR</name>
          <displayName>RFSWHSECR</displayName>
          <description>RFSWHSECR register</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000803F</resetValue>
          <fields>
            <field>
              <name>GMC</name>
              <description>GMC[6:5]: High speed external XO current control reference
00: 10 uA
01: 20 uA
1x: 40 uA
GMC[4:0]: High speed external XO current control multiplying factor
IcoreHSE= GMC[4:0] * GMC[6:5]
Example: GMC[6:0]=0x1111001 -&gt; IcoreHSE=25*40uA / Default 3F:  IcoreHSE= 10uA x 31 = 310uA
Note: this value is set only by software.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWXOTUNEEN</name>
              <description>RF-HSE capacitor bank tuning by SW enable
Set by software</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWXOTUNE</name>
              <description>RF-HSE capacitor bank tuning value by SW
Set by software</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ISTARTUP</name>
              <description>RF-HSE Startup current
Set by software
Default value 2</description>
              <bitOffset>14</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMPLTHRESH</name>
              <description>RF-HSE Amplitude Control threshold 
Set by software
Default value 0</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RFHSECR</name>
          <displayName>RFHSECR</displayName>
          <description>RFHSECR register</description>
          <addressOffset>0x9c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>XOTUNE</name>
              <description>RF-HSE capacitor bank tuning
Set by option byte loading soon after Power On Reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AMPLREADY</name>
              <description>RF-HSE Amplitude Control Ready output</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHBSMENR</name>
          <displayName>AHBSMENR</displayName>
          <description>AHBSMENR register</description>
          <addressOffset>0xa0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0014160F</resetValue>
          <fields>
            <field>
              <name>DMASMEN</name>
              <description>DMA clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: DMA clock disabled in Sleep mode
- 1: DMA clock enabled in Sleep mode (if enabled in DMAEN)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FLASHSMEN</name>
              <description>Flash clocks enable during Flash Sleep PD and CPU Sleep mode bit
This bit is set and reset by software.
- 0: Flash clocks are disabled in Flash Sleep PD* and CPU Sleep mode
- 1: Flash clocks are enabled in Sleep mode
Note: Flash Sleep PD is enabled through nvm_control register CONFIG.SLEEP_PD</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOASMEN</name>
              <description>GPIOA clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: GPIOA clock disabled in Sleep mode
- 1: GPIOA clock enabled in Sleep mode (if enabled by GPIOAEN)</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIOBSMEN</name>
              <description>GPIOB clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: GPIOB clock disabled in Sleep mode
- 1: GPIOB clock enabled in Sleep mode (if enabled in GPIOBEN)</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM0SMEN</name>
              <description>SRAM0 clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: SRAM0 clock disabled in Sleep mode
- 1: SRAM0 clock enabled in Sleep mode</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM1SMEN</name>
              <description>SRAM1 clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: SRAM1 clock disabled in Sleep mode
- 1: SRAM1 clock enabled in Sleep mode</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCSMEN</name>
              <description>CRC clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: CRC clock disabled in Sleep mode
- 1: CRC clock enabled in Sleep mode (if enabled in CRCEN)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RNGSMEN</name>
              <description>RNG bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: RNG bus clock disabled in Sleep mode
- 1: RNG bus clock enabled in Sleep mode (if enabled in RNGEN)</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AESSMEN</name>
              <description>AES bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: AES bus clock disabled in Sleep mode
- 1: AES bus clock enabled in Sleep mode (if enabled in AESEN)</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB0SMENR</name>
          <displayName>APB0SMENR</displayName>
          <description>APB0SMENR register</description>
          <addressOffset>0xa4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000FF03</resetValue>
          <fields>
            <field>
              <name>TIM2SMEN</name>
              <description>TIM2 bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: TIM2 bus clock disabled in Sleep mode
- 1: TIM2 bus clock enabled in Sleep mode (if enabled in TIM2EN)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIM16SMEN</name>
              <description>TIM16 bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: TIM16 bus clock disabled in Sleep mode
- 1: TIM16 bus clock enabled in Sleep mode (if enabled in TIM16EN)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYSCFGSMEN</name>
              <description>SYSCFG bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: SYSCFG bus clock disabled in Sleep mode
- 1: SYSCFG bus clock enabled in Sleep mode (if enabled in SYSCFGEN)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCDCSMEN</name>
              <description>LCDC bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: LCDC bus clock disabled in Sleep mode
- 1: LCDC bus clock enabled in Sleep mode (if enabled in LCDCEN)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMPSMEN</name>
              <description>COMP bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: COMP bus clock disabled in Sleep mode
- 1: COMP bus clock enabled in Sleep mode (if enabled in COMPEN)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DACSMEN</name>
              <description>DAC bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: DAC bus clock disabled in Sleep mode
- 1: DAC bus clock enabled in Sleep mode (if enabled in DACEN)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCSMEN</name>
              <description>RTC bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: RTC bus clock disabled in Sleep mode
- 1: RTC bus clock enabled in Sleep mode (if enabled in RTCEN)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LCSCSMEN</name>
              <description>LCSC bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: LCSC bus clock disabled in Sleep mode
- 1: LCSC bus clock enabled in Sleep mode (if enabled in LCSCEN)</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDGSMEN</name>
              <description>WDG clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: WDG clock disabled in Sleep mode
- 1: WDG clock enabled in Sleep mode (if enabled in WDGEN)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBGMCUSMEN</name>
              <description>DBGMCU clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: DBGMCU clock disabled in Sleep mode
- 1: DBGMCU clock enabled in Sleep mode (if enabled in DBGMCUEN)</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB1SMENR</name>
          <displayName>APB1SMENR</displayName>
          <description>APB1SMENR register</description>
          <addressOffset>0xa8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00A04511</resetValue>
          <fields>
            <field>
              <name>SPI1SMEN</name>
              <description>SPI1 bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: SPI1 bus clock disabled in Sleep mode
- 1: SPI1 bus clock enabled in Sleep mode (if enabled in SPI1EN)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCDIGSMEN</name>
              <description>ADCDIG bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: ADCDIG bus clock disabled in Sleep mode
- 1: ADCDIG bus clock enabled in Sleep mode (if enabled by ADCDIGEN)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LPUARTSMEN</name>
              <description>LPUART bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: LPUART bus clock disabled in Sleep mode
- 1: LPUART bus clock enabled in Sleep mode (if enabled in LPUARTEN)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USARTSMEN</name>
              <description>USART bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: USART bus clock disabled in Sleep mode
- 1: USART bus clock enabled in Sleep mode (if enabled in USARTEN)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPI3SMEN</name>
              <description>SPI3 bus clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: SPI3 bus clock disabled in Sleep mode
- 1: SPI3 bus clock enabled in Sleep mode (if enabled in SPI3EN)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1SMEN</name>
              <description>I2C1 clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: I2C1 clock disabled in Sleep mode
- 1: I2C1 clock enabled in Sleep mode (if enabled in I2C1EN)</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2SMEN</name>
              <description>I2C2 clock enable during Sleep mode bit
This bit is set and reset by software.
- 0: I2C2 clock disabled in Sleep mode
- 1: I2C2 clock enabled in Sleep mode (if enabled in I2C2EN)</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RETAINED</name>
      <groupName>RETAINED</groupName>
      <baseAddress>0x49000780</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x80</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RFIP_WAKEUPTIME</name>
          <displayName>RFIP_WAKEUPTIME</displayName>
          <description>RFIP_WAKEUPTIME register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RFIP_WAKEUPTIME</name>
              <description>(Absolute) Target time to wakeup the RFIP.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_WAKEUPTIME</name>
          <displayName>CPU_WAKEUPTIME</displayName>
          <description>CPU_WAKEUPTIME register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CPU_WAKEUPTIME</name>
              <description>(Absolute) Target time to wakeup the CPU.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>31</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_CTRL</name>
          <displayName>WAKEUP_CTRL</displayName>
          <description>WAKEUP_CTRL register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SOC_WAKEUP_OFFSET</name>
              <description>Delay to be considered by the Wakeup block to anticipate the wakeup request to the PWRC of the SoC versus the target to wakeup the RFIP (or the CPU).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_WAKEUP_EN</name>
              <description>Indicates if the wakeup timer has to wakeup the SoC (match on CPU_WAKEUPTIME[31:4] bit field only) + set the CPU_WAKEUP_F in the WAKEUP_IRQ_STATUS Misc register when match on CPU_WAKEUPTIME[31:0] occurs.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_WAKEUP_EN</name>
              <description>Indicates if the wakeup timer has to wakeup the SoC (match on RFIP_WAKEUPTIME[31:4] bit field only) + trigger an event on the Sequencer and set the RFIP_WAKEUP_F in the WAKEUP_IRQ_STATUS Misc register when match on RFIP_WAKEUPTIME[31:0] occurs.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RRM_CMDLIST_PTR</name>
          <displayName>RRM_CMDLIST_PTR</displayName>
          <description>RRM_CMDLIST_PTR register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CMDLIST_PTR_OFFSET</name>
              <description>Contain the offset versus the SoC RAM base address where to find the RRM-UDRA command list entry point.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMDLIST_PTR_VALID</name>
              <description>Indicate if a command list has to be executed or not
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQ_GLOBALTABLE_PTR</name>
          <displayName>SEQ_GLOBALTABLE_PTR</displayName>
          <description>SEQ_GLOBALTABLE_PTR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEQ_GLOBALTABLE_PTR</name>
              <description>Contain the offset versus the SoC RAM base address of the GlobalConfiguration RAM table entry point.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RNG</name>
      <groupName>RNG</groupName>
      <baseAddress>0x48600000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1000</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RNG_CR</name>
          <displayName>RNG_CR</displayName>
          <description>RNG_CR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RNG_DIS</name>
              <description>RNG Disable bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TST_CLK</name>
              <description>RNG Test Clock bit.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNG_SR</name>
          <displayName>RNG_SR</displayName>
          <description>RNG_SR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RNGRDY</name>
              <description>New Random Value Ready.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REVCLK</name>
              <description>RNGCLK Clock Reveal bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FAULT</name>
              <description>Fault Reveal bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNG_VAL</name>
          <displayName>RNG_VAL</displayName>
          <description>RNG_VAL register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RANDOM_VALUE</name>
              <description>Random Value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNG_TCR</name>
          <displayName>RNG_TCR</displayName>
          <description>RNG_TCR register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TCR</name>
              <description>Test-control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNG_ITIP</name>
          <displayName>RNG_ITIP</displayName>
          <description>RNG_ITIP register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ITIP</name>
              <description>Integration-test input register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPeriphID0</name>
          <displayName>RNGPeriphID0</displayName>
          <description>RNGPeriphID0 register</description>
          <addressOffset>0xFE0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000E1</resetValue>
          <fields>
            <field>
              <name>PartNumber0</name>
              <description>These bits are read back as 0xE1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPeriphID1</name>
          <displayName>RNGPeriphID1</displayName>
          <description>RNGPeriphID1 register</description>
          <addressOffset>0xFE4</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000005</resetValue>
          <fields>
            <field>
              <name>PartNumber1</name>
              <description>These bits are read back as 0x05</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Designer0</name>
              <description>These bits are read back as 0x00</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPeriphID2</name>
          <displayName>RNGPeriphID2</displayName>
          <description>RNGPeriphID2 register</description>
          <addressOffset>0xFE8</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000028</resetValue>
          <fields>
            <field>
              <name>Designer1</name>
              <description>These bits are read back as 0x08</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>Revision</name>
              <description>These bits are read back as 0x02</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPeriphID3</name>
          <displayName>RNGPeriphID3</displayName>
          <description>RNGPeriphID3 register</description>
          <addressOffset>0xFEC</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>Configuration</name>
              <description>These bits are read back as 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPCellID0</name>
          <displayName>RNGPCellID0</displayName>
          <description>RNGPCellID0 register</description>
          <addressOffset>0xFF0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000000D</resetValue>
          <fields>
            <field>
              <name>RNGPCellID0</name>
              <description>These bits are read back as 0x0D</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPCellID1</name>
          <displayName>RNGPCellID1</displayName>
          <description>RNGPCellID1 register</description>
          <addressOffset>0xFF4</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000F0</resetValue>
          <fields>
            <field>
              <name>RNGPCellID1</name>
              <description>These bits are read back as 0xF0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPCellID2</name>
          <displayName>RNGPCellID2</displayName>
          <description>RNGPCellID2 register</description>
          <addressOffset>0xFF8</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000005</resetValue>
          <fields>
            <field>
              <name>RNGPCellID2</name>
              <description>These bits are read back as 0x05</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RNGPCellID3</name>
          <displayName>RNGPCellID3</displayName>
          <description>RNGPCellID3 register</description>
          <addressOffset>0xFFC</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000B1</resetValue>
          <fields>
            <field>
              <name>RNGPCellID3</name>
              <description>These bits are read back as 0xB1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <groupName>RTC</groupName>
      <baseAddress>0x40004000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x58</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RTC</name>
        <description>RTC interrupt</description>
        <value>11</value>
      </interrupt>
      <registers>
        <register>
          <name>RTC_TR</name>
          <displayName>RTC_TR</displayName>
          <description>RTC_TR register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SU</name>
              <description>Second units in BCD format.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ST</name>
              <description>Second tens in BCD format.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNU</name>
              <description>Minute units in BCD format.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNT</name>
              <description>Minute tens in BCD format.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HU</name>
              <description>Hour units in BCD format.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Hour tens in BCD format.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PM</name>
              <description>AM/PM notation. 
0: AM or 24-hour format
1: PM</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_DR</name>
          <displayName>RTC_DR</displayName>
          <description>RTC_DR register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00002101</resetValue>
          <fields>
            <field>
              <name>DU</name>
              <description>Date units in BCD format.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT</name>
              <description>Date tens in BCD format.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MU</name>
              <description>Month units in BCD format.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MT</name>
              <description>Month tens in BCD format.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDU</name>
              <description>Week day units
000: forbidden
001: Monday
010: Tuesday
011: Wednesday
100: Thursday
101: Friday
110: Saturday
111: Sunday</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>YU</name>
              <description>Year units in BCD format.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>YT</name>
              <description>Year tens in BCD format.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CR</name>
          <displayName>RTC_CR</displayName>
          <description>RTC_CR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>WUCKSEL</name>
              <description>Wakeup clock selection
000: RTC/16 clock is selected
001: RTC/8 clock is selected
010: RTC/4 clock is selected
011: RTC/2 clock is selected
10x: ck_spre (usually 1 Hz) clock is selected
11x: ck_spre (usually 1 Hz) clock is selected and 216 is added to the WUT counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSEDGE</name>
              <description>Time-stamp event active edge
0: RTC_TS input rising edge generates a time-stamp event
1: RTC_TS input falling edge generates a time-stamp event
TSE must be reset when TSEDGE is changed to avoid unwanted TSF setting.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYPSHAD</name>
              <description>Bypass the shadow registers
0: Calendar values (when reading from RTC_SSR, RTC_TR, and RTC_DR) are taken from the shadow registers, which are updated once every two RTCCLK cycles.
1: Calendar values (when reading from RTC_SSR, RTC_TR, and RTC_DR) are taken directly from the calendar counters.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FMT</name>
              <description>Hour format
</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>24 hour/day format
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>AM/PM hour format</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALRAE</name>
              <description>Alarm A enable
0: Alarm A disabled
1: Alarm A enabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTE</name>
              <description>Wakeup timer enable
0: Wakeup timer disabled
1: Wakeup timer enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSE</name>
              <description>Timestamp enable
0: Timestamp disable
1: Timestamp enable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALRAIE</name>
              <description>Alarm A interrupt enable
0: Alarm A interrupt disabled
1: Alarm A interrupt enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTIE</name>
              <description>Wakeup timer interrupt enable
0: Wakeup timer interrupt disabled
1: Wakeup timer interrupt enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSIE</name>
              <description>Time-stamp interrupt enable
</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>Time-stamp Interrupt disable
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>Time-stamp Interrupt enable</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADD1H</name>
              <description>Add 1 hour (summer time change)
When this bit is set outside initialization mode, 1 hour is added to the calendar time. This bit is always read as 0.
0: No effect
1: Adds 1 hour to the current time. This can be used for summer time change</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SUB1H</name>
              <description>Subtract 1 hour (winter time change)
When this bit is set outside initialization mode, 1 hour is subtracted to the calendar time if the current hour is not 0. This bit is always read as 0.
Setting this bit has no effect when current hour is 0.
0: No effect
1: Subtracts 1 hour to the current time. This can be used for winter time change.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BKP</name>
              <description>Backup
This bit can be written by the user to memorize whether the daylight saving time change has been performed or not.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COSEL</name>
              <description>Calibration output selection
When COE=1, this bit selects which signal is output on RTC_CALIB.
0: Calibration output is 512 Hz
1: Calibration output is 1 Hz
These frequencies are valid for RTCCLK at 32.768 kHz and prescalers at their default values (PREDIV_A=127 and PREDIV_S=255).</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POL</name>
              <description>Output polarity
This bit is used to configure the polarity of RTC_ALARM output
0: The pin is high when ALRAF/WUTF is asserted (depending on OSEL[1:0])
1: The pin is low when ALRAF/WUTF is asserted (depending on OSEL[1:0]).</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSEL</name>
              <description>Output selection
These bits are used to select the flag to be routed to RTC_ALARM output
00: Output disabled
01: Alarm A output enabled
10: Reserved
11: Wakeup output enabled</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COE</name>
              <description>Calibration output enable
This bit enables the RTC_CALIB output
0: Calibration output disabled
1: Calibration output enabled</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ITSE</name>
              <description>Timestamp on internal event enable
0: Internal event timestamp disable
1: Internal event timestamp enable</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ISR</name>
          <displayName>RTC_ISR</displayName>
          <description>RTC_ISR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>ALRAWF</name>
              <description>Alarm A write flag
This bit is set by hardware when Alarm A values can be changed, after the ALRAE bit has been set to 0 in RTC_CR.
It is cleared by hardware in initialization mode.
0: Alarm A update not allowed
1: Alarm A update allowed.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTWF</name>
              <description>Wakeup timer write flag
This bit is set by hardware when the wakeup timer values can be changed, after the WUTE bit has been set to 0 in RTC_CR.
0: Wakeup timer configuration update not allowed
1: Wakeup timer configuration update allowed.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SHPF</name>
              <description>Shift operation pending
0: No shift operation is pending
1: A shift operation is pending
This flag is set by hardware as soon as a shift operation is initiated by a write to the RTC_SHIFTR register. It is cleared by hardware when the corresponding shift operation has been executed. Writing to the SHPF bit has no effect.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INITS</name>
              <description>Initialization status flag
This bit is set by hardware when the calendar year field is different from 0 (power-on reset state).
0: Calendar has not been initialized
1: Calendar has been initialized</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RSF</name>
              <description>Registers synchronization flag
This bit is set by hardware each time the calendar registers are copied into the shadow registers (RTC_SSRx, RTC_TRx and RTC_DRx). This bit is cleared by hardware in initialization mode, while a shift operation is pending (SHPF=1), or when in bypass shadow regsiter mode (BYPSHAD=1). This bit can also be cleared by software.
It is cleared either by software or by hardware in initialization mode.
0: Calendar shadow registers not yet synchronized
1: Calendar shadow registers synchronized.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INITF</name>
              <description>Initialization flag
When this bit is set to 1, the RTC is in initialization state, and the time, date and prescaler registers can be updated.
0: Calendar registers update is not allowed
1: Calendar registers update is allowed.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INIT</name>
              <description>Initialization mode
0: Free running mode
1: Initialization mode used to program time and date register (RTC_TR and RTC_DR), and prescaler register (RTC_PRER). Counters are stopped and start counting from the new value when INIT is reset.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ALRAF</name>
              <description>Alarm A flag
This flag is set by hardware when the time/date registers (RTC_TR and RTC_DR) match the Alarm A register (RTC_ALRMAR).
This flag is cleared by software by writing 0.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WUTF</name>
              <description>Wakeup timer flag
This flag is set by hardware when the wakeup auto-reload counter reaches 0.
This flag is cleared by software by writing 0.
This flag must be cleared by software at least 1.5 RTCCLK periods before WUTF is set to 1 again.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSF</name>
              <description>This flag is set by hardware when a time-stamp event occurs.
This flag is cleared by software by writing 0. If ITSF flag is set, TSF must be cleared together with ITSF by writing 0 in both bits.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSOVF</name>
              <description>This flag is set by hardware when a time-stamp event occurs while TSF is already set.
This flag is cleared by software by writing 0. 
It is recommended to check and then clear TSOVF only after clearing the TSF bit. Otherwise, an overflow might not be noticed if a timestamp
event occurs immediately before the TSF bit is cleared.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP1F</name>
              <description>RTC_TAMP1 detection flag
This flag is set by hardware when a tamper detection event is detected on the RTC_TAMP1 input.
It is cleared by software writing 0</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RECALPF</name>
              <description>Recalibration pending Flag
The RECALPF status flag is automatically set to 1 when software writes to the RTC_CALR register, indicating that the RTC_CALR register is blocked. When the new calibration settings are taken into account, this bit returns to 0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ITSF</name>
              <description>Internal time-stamp flag
This flag is set by hardware when a time-stamp on the internal event occurs.
This flag is cleared by software by writing 0, and must be cleared together with TSF bit by writing 0 in both bits.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PRER</name>
          <displayName>RTC_PRER</displayName>
          <description>RTC_PRER register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x007F00FF</resetValue>
          <fields>
            <field>
              <name>PREDIV_S</name>
              <description>Synchronous prescaler factor
This is the synchronous division factor:
ck_spre frequency = ck_apre frequency/(PREDIV_S+1)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREDIV_A</name>
              <description>Asynchronous prescaler factor
This is the asynchronous division factor: 
ck_apre frequency = RTCCLK frequency/(PREDIV_A+1)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WUTR</name>
          <displayName>RTC_WUTR</displayName>
          <description>RTC_WUTR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000FFFF</resetValue>
          <fields>
            <field>
              <name>WUT</name>
              <description>Wakeup auto-reload value bits
When the wakeup timer is enabled (WUTE set to 1), the WUTF flag is set every (WUT[15:0] + 1) ck_wut cycles. The ck_wut period is selected through WUCKSEL[2:0] bits of the RTC_CR register
When WUCKSEL[2] = 1, the wakeup timer becomes 17-bits and WUCKSEL[1] effectively becomes WUT[16] the most-significant bit to be reloaded into the timer.
The first assertion of WUTF occurs (WUT+1) ck_wut cycles after WUTE is set. Setting WUT[15:0] to 0x0000 with WUCKSEL[2:0] =011 (RTCCLK/2) is forbidden.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALRMAR</name>
          <displayName>RTC_ALRMAR</displayName>
          <description>RTC_ALRMAR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SU</name>
              <description>Second units in BCD format.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ST</name>
              <description>Second tens in BCD format.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK1</name>
              <description>Alarm A seconds mask
0: Alarm A set if the seconds match
1: Seconds dont care in Alarm A comparison</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNU</name>
              <description>Minute units in BCD format.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNT</name>
              <description>Minute tens in BCD format.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK2</name>
              <description>Alarm A minutes mask
0: Alarm A set if the minutes match
1: Minutes dont care in Alarm A comparison</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HU</name>
              <description>Hour units in BCD format.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Hour tens in BCD format.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PM</name>
              <description>AM/PM notation
0: AM or 24-hour format
1: PM</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK3</name>
              <description>Alarm A hours mask
0: Alarm A set if the hours match
1: Hours dont care in Alarm A comparison</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DU</name>
              <description>Date units or day in BCD format.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT</name>
              <description>Date tens in BCD format.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDSEL</name>
              <description>Week day selection
0: DU[3:0] represents the date units
1: DU[3:0] represents the week day. DT[1:0] is dont care.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSK4</name>
              <description>Alarm A date mask
0: Alarm A set if the date/day match
1: Date/day dont care in Alarm A comparison</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_WPR</name>
          <displayName>RTC_WPR</displayName>
          <description>RTC_WPR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>KEY</name>
              <description>Write protection key
This byte is written by software.
Reading this byte always returns 0x00</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_SSR</name>
          <displayName>RTC_SSR</displayName>
          <description>RTC_SSR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SS</name>
              <description>Sub second value
SS[15:0] is the value in the synchronous prescalers counter. The fraction of a second is given by the formula below:
Second fraction = ( PREDIV_S - SS ) / ( PREDIV_S + 1 )</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_SHIFTR</name>
          <displayName>RTC_SHIFTR</displayName>
          <description>RTC_SHIFTR register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SUBFS</name>
              <description>Subtract a fraction of a second
These bits are write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF=1, in RTC_ISR).
The value which is written to SUBFS is added to the synchronous prescalers counter. 
Since this counter counts down, this operation effectively subtracts from (delays) the clock by:
Delay (seconds) = SUBFS / ( PREDIV_S + 1 )
A fraction of a second can effectively be added to the clock (advancing the clock) when the ADD1S function is used in conjunction with SUBFS, effectively advancing the clock by :
Advance (seconds) = ( 1 - ( SUBFS / ( PREDIV_S + 1 ) ) ) .</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ADD1S</name>
              <description>Add one second
0: No effect
1: Add one second to the clock/calendar
This bit is write only and is always read as zero. Writing to this bit has no effect when a shift operation is pending (when SHPF=1, in RTC_ISR).
This function is intended to be used with SUBFS (see description below) in order to effectively add a fraction of a second to the clock in an atomic operation.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_TSTR</name>
          <displayName>RTC_TSTR</displayName>
          <description>RTC_TSTR register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SU</name>
              <description>Second units in BCD format.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ST</name>
              <description>Second tens in BCD format.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNU</name>
              <description>Minute units in BCD format.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MNT</name>
              <description>Minute tens in BCD format.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HU</name>
              <description>Hour units in BCD format.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Hour tens in BCD format.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PM</name>
              <description>AM/PM notation
0: AM or 24-hour format
1: PM</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_TSDR</name>
          <displayName>RTC_TSDR</displayName>
          <description>RTC_TSDR register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DU</name>
              <description>Date units in BCD format.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DT</name>
              <description>Date tens in BCD format.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MU</name>
              <description>Month units in BCD format.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MT</name>
              <description>Month tens in BCD format.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDU</name>
              <description>Week day units</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_TSSSR</name>
          <displayName>RTC_TSSSR</displayName>
          <description>RTC_TSSSR register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SS</name>
              <description>Sub second value
SS[15:0] is the value of the synchronous prescalers counter when the timestamp event occurred.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_CALR</name>
          <displayName>RTC_CALR</displayName>
          <description>RTC_CALR register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CALM</name>
              <description>Calibration minus
The frequency of the calendar is reduced by masking CALM out of 220 RTCCLK pulses (32 seconds if the input frequency is 32768 Hz). This decreases the frequency of the calendar with a resolution of 0.9537 ppm.
To increase the frequency of the calendar, this feature should be used in conjunction with CALP.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CALW16</name>
              <description>Use a 16-second calibration cycle period
When CALW16 is set to 1 , the 16-second calibration cycle period is selected.This bit must not be set to 1 if CALW8=1.
Note: CALM[0] is stucked at 0 when CALW16=1.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CALW8</name>
              <description>Use an 8-second calibration cycle period
When CALW8 is set to 1 , the 8-second calibration cycle period is selected.
Note: CALM[1:0] are stucked at '00' when CALW8=1.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CALP</name>
              <description>Increase frequency of RTC by 488.5 ppm
0: No RTCCLK pulses are added.
1: One RTCCLK pulse is effectively inserted every 211 pulses (frequency incresed by 488.5 ppm).
This feature is intended to be used in conjunction with CALM, which lowers the frequency of the calendar with a fine resolution. if the input frequency is 32768 Hz, the number of RTCCLK pulses added during a 32-second window is calculated as follows: (512 * CALP) - CALM.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_TAMPCR</name>
          <displayName>RTC_TAMPCR</displayName>
          <description>RTC_TAMPCR register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TAMP1E</name>
              <description>RTC_TAMP1 input detection enable
0: RTC_TAMP1 detection disabled
1: RTC_TAMP1 detection enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP1TRG</name>
              <description>Active level for RTC_TAMP1 input
If TAMPFLT != 00
0: RTC_TAMP1 input staying low triggers a tamper detection event.
1: RTC_TAMP1 input staying high triggers a tamper detection event.
if TAMPFLT = 00:
0: RTC_TAMP1 input rising edge triggers a tamper detection event.
1: RTC_TAMP1 input falling edge triggers a tamper detection event.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPIE</name>
              <description>Tamper interrupt enable
0: Tamper interrupt disabled
1: Tamper interrupt enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPTS</name>
              <description>Activate timestamp on tamper detection event
0: Tamper detection event does not cause a timestamp to be saved
1: Save timestamp on tamper detection event
TAMPTS is valid even if TSE=0 in the RTC_CR register.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPFREQ</name>
              <description>Tamper sampling frequency
Determines the frequency at which each of the RTC_TAMPx inputs are sampled.
0x0: RTCCLK / 32768 (1 Hz when RTCCLK = 32768 Hz)
0x1: RTCCLK / 16384 (2 Hz when RTCCLK = 32768 Hz)
0x2: RTCCLK / 8192 (4 Hz when RTCCLK = 32768 Hz)
0x3: RTCCLK / 4096 (8 Hz when RTCCLK = 32768 Hz)
0x4: RTCCLK / 2048 (16 Hz when RTCCLK = 32768 Hz)
0x5: RTCCLK / 1024 (32 Hz when RTCCLK = 32768 Hz)
0x6: RTCCLK / 512 (64 Hz when RTCCLK = 32768 Hz)
0x7: RTCCLK / 256 (128 Hz when RTCCLK = 32768 Hz)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPFLT</name>
              <description>RTC_TAMPx filter count
These bits determines the number of consecutive samples at the specified level (TAMP*TRG) needed to activate a Tamper event. 
TAMPFLT is valid for each of the RTC_TAMPx inputs.
0x0: Tamper event is activated on edge of RTC_TAMPx input transitions to the active level (no internal pull-up on RTC_TAMPx input).
0x1: Tamper event is activated after 2 consecutive samples at the active level.
0x2: Tamper event is activated after 4 consecutive samples at the active level.
0x3: Tamper event is activated after 8 consecutive samples at the active level.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPPRCH</name>
              <description>RTC_TAMPx precharge duration
These bit determines the duration of time during which the pull-up/is activated before each sample. TAMPPRCH is valid for each of the RTC_TAMPx inputs.
0x0: 1 RTCCLK cycle
0x1: 2 RTCCLK cycles
0x2: 4 RTCCLK cycles
0x3: 8 RTCCLK cycles</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMPPUDIS</name>
              <description>RTC_TAMPx pull-up disable
This bit determines if each of the RTC_TAMPx pins are pre-charged before each sample.
0: Precharge RTC_TAMPx pins before sampling (enable internal pull-up)
1: Disable precharge of RTC_TAMPx pins.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP1IE</name>
              <description>Tamper 1 interrupt enable
0: Tamper 1 interrupt is disabled if TAMPIE = 0.
1: Tamper 1 interrupt enabled.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP1NOERASE</name>
              <description>Tamper 1 no erase
0: Tamper 1 event erases the backup registers.
1: Tamper 1 event does not erase the backup registers.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TAMP1MF</name>
              <description>Tamper 1 mask flag
0: Tamper 1 event generates a trigger event and TAMP1F must be cleared by software to allow next tamper event detection.
1: Tamper 1 event generates a trigger event. TAMP1F is masked and internally cleared by hardware.The backup registers are not erased.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_ALRMASSR</name>
          <displayName>RTC_ALRMASSR</displayName>
          <description>RTC_ALRMASSR register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SS</name>
              <description>Sub seconds value
This value is compared with the contents of the synchronous prescalers counter to
determine if Alarm A is to be activated. Only bits 0 up MASKSS-1 are compared.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MASKSS</name>
              <description>Mask the most-significant bits starting at this bit
0: No comparison on sub seconds for Alarm A. The alarm is set when the seconds unit is incremented (assuming that the rest of the fields match).
1: SS[14:1] are dont care in Alarm A comparison. Only SS[0] is compared.
2: SS[14:2] are dont care in Alarm A comparison. Only SS[1:0] are compared.
3: SS[14:3] are dont care in Alarm A comparison. Only SS[2:0] are compared.
...
12: SS[14:12] are dont care in Alarm A comparison. SS[11:0] are compared.
13: SS[14:13] are dont care in Alarm A comparison. SS[12:0] are compared.
14: SS[14] is dont care in Alarm A comparison. SS[13:0] are compared.
15: All 15 SS bits are compared and must match to activate alarm.
The overflow bits of the synchronous counter (bits 15) is never compared. This bit can be different from 0 only after a shift operation.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_OR</name>
          <displayName>RTC_OR</displayName>
          <description>RTC_OR register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ALARMOUTTYPE</name>
              <description>RTC_ALARM on PA8 output type
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>RTC_ALARM, when mapped on PA8, is open-drain output
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>RTC_ALARM, when mapped on PA8, is push-pull output</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTC_OUT_RMP</name>
              <description>RTC_OUT remap
Setting this bit allows to remap the RTC outputs on PA9 as follows:
0 :
If OSEL/= '00' : RTC_ALARM is ouput on PA8
If OSEL= '00' and COE = 1 : RTC_CALIB is output on PA8
1 : 
If OSEL /= '00' and COE = 0 : RTC_ALARM is output on PA9
If OSEL = '00' and COE = 1: RTC_CALIB is output on PA9
If OSEL /= '00' and COE = 1: RTC_CALIB is output on PA9 and RTC_ALARM is output on PA8.
Note: the RTC outputs are functional in DEEPSTOP mode only on PA8.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_BKP0R</name>
          <displayName>RTC_BKP0R</displayName>
          <description>RTC_BKPxR register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BKP</name>
              <description>The application can write or read data to and from these registers.
They are powered-on by VDD12o so they are retained during DEEPSTOP mode.
The application can write or read data to and from these registers. 
This register is reset on PORESETn only.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_BKP1R</name>
          <displayName>RTC_BKP1R</displayName>
          <description>RTC_BKPxR register</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BKP</name>
              <description>The application can write or read data to and from these registers.
They are powered-on by VDD12o so they are retained during DEEPSTOP mode.
The application can write or read data to and from these registers. 
This register is reset on PORESETn only.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI</name>
      <groupName>SPI</groupName>
      <baseAddress>0x41002000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x1C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI1</name>
        <description>SPI1 interrupt</description>
        <value>5</value>
      </interrupt>
      <registers>
        <register>
          <name>SPI_SSPCR1</name>
          <displayName>SPI_SSPCR1</displayName>
          <description>SPI_SSPCR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CPHA</name>
              <description>Clock phase
- 0: The first clock transition is the first data capture edge
- 1: The second clock transition is the first data capture edge</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPOL</name>
              <description>Clock polarity
- 0: CK to 0 when idle
- 1: CK to 1 when idle</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTR</name>
              <description>Master selection
- 0: Slave configuration
- 1: Master configuration</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BR</name>
              <description>Baud rate control
- 000: fPCLK/2
- 001: fPCLK/4
- 010: fPCLK/8
- 011: fPCLK/16
- 100: fPCLK/32
- 101: fPCLK/64
- 110: fPCLK/128
- 111: fPCLK/256</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPE</name>
              <description>SPI enable
- 0: Peripheral disabled
- 1: Peripheral enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSBFIRST</name>
              <description>Frame format
- 0: data is transmitted / received with the MSB first
- 1: data is transmitted / received with the LSB first</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSI</name>
              <description>Internal slave select
This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the NSS pin and the I/O value of the NSS pin is ignored.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSM</name>
              <description>Software slave management
When the SSM bit is set, the NSS pin input is replaced with the value from the SSI bit.
- 0: Software slave management disabled
- 1: Software slave management enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXONLY</name>
              <description>Receive only mode enabled.
This bit enables simplex communication using a single unidirectional line to receive data exclusively. Keep BIDIMODE bit clear when receive only mode is active.This bit is also useful in a multislave system in which this particular slave is not accessed, the output from the accessed slave is not corrupted.
- 0: Full duplex (Transmit and receive)
- 1: Output disabled (Receive-only mode)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCL</name>
              <description>CRC length
This bit is set and cleared by software to select the CRC length.
- 0: 8-bit CRC length
- 1: 16-bit CRC length</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCNEXT</name>
              <description>Transmit CRC next
- 0: Next transmit value is from Tx buffer
- 1: Next transmit value is from Tx CRC register</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCEN</name>
              <description>Hardware CRC calculation enable
- 0: CRC calculation disabled
- 1: CRC calculation Enabled</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIOE</name>
              <description>Output enable in bidirectional mode
This bit combined with the BIDIMODE bit selects the direction of transfer in bidirectional mode
- 0: Output disabled (receive-only mode)
- 1: Output enabled (transmit-only mode)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIMODE</name>
              <description>Bidirectional data mode enable. This bit enables half-duplex communication using
common single bidirectional data line. Keep RXONLY bit clear when bidirectional mode is
active.
- 0: 2-line unidirectional data mode selected
- 1: 1-line bidirectional data mode selected</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPCR2</name>
          <displayName>SPI_SSPCR2</displayName>
          <description>SPI_SSPCR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000700</resetValue>
          <fields>
            <field>
              <name>RXDMAEN</name>
              <description>Rx buffer DMA enable
When this bit is set, a DMA request is generated whenever the RXNE flag is set.
- 0: Rx buffer DMA disabled
- 1: Rx buffer DMA enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMAEN</name>
              <description>Tx buffer DMA enable
When this bit is set, a DMA request is generated whenever the TXE flag is set.
- 0: Tx buffer DMA disabled
- 1: Tx buffer DMA enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSOE</name>
              <description>SS output enable
- 0: SS output is disabled in master mode and the SPI interface can work in multimaster configuration
- 1: SS output is enabled in master mode and when the SPI interface is enabled. The SPI interface cannot work in a multimaster environment.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NSSP</name>
              <description>NSS pulse management
This bit is used in master mode only. it allow the SPI to generate an NSS pulse between two consecutive data when doing continuous transfers. In the case of a single data transfer, it forces the NSS pin high level after the transfer.
It has no meaning if CPHA = 1, or FRF = 1.
- 0: No NSS pulse
- 1: NSS pulse generated</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRF</name>
              <description>Frame format
- 0: SPI Motorola mode
- 1 SPI TI mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRIE</name>
              <description>Error interrupt enable
This bit controls the generation of an interrupt when an error condition occurs (CRCERR, OVR, MODF in SPI mode, FRE at TI mode and UDR, OVR, and FRE in I2S mode).
- 0: Error interrupt is masked
- 1: Error interrupt is enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNEIE</name>
              <description>RX buffer not empty interrupt enable
- 0: RXNE interrupt masked
- 1: RXNE interrupt not masked. Used to generate an interrupt request when the RXNE flag is set.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIE</name>
              <description>Tx buffer empty interrupt enable
- 0: TXE interrupt masked
- 1: TXE interrupt not masked. Used to generate an interrupt request when the TXE flag is set.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DS</name>
              <description>Data size
These bits configure the data length for SPI transfers:
- 0000: Not used
- 0001: Not used
- 0010: Not used
- 0011: 4-bit
- 0100: 5-bit
- 0101: 6-bit
- 0110: 7-bit
- 0111: 8-bit
- 1000: 9-bit
- 1001: 10-bit
- 1010: 11-bit
- 1011: 12-bit
- 1100: 13-bit
- 1101: 14-bit
- 1110: 15-bit
- 1111: 16-bit
If software attempts to write one of the 'Not used' values, they are forced to the value '0111'(8-bit).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRXTH</name>
              <description>FIFO reception threshold
FRXTH shall be set according the read access (16-bit or 8-bit) to the FIFO.
This bit is used to set the threshold of the RXFIFO that triggers an RXNE event
- 0: RXNE event is generated if the FIFO level is greater than or equal to 1/2 (16-bit)
- 1: RXNE event is generated if the FIFO level is greater than or equal to 1/4 (8-bit)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LDMA_RX</name>
              <description>Last DMA transfer for reception
This bit is used in data packing mode, to define if the total number of data to receive by DMA is odd or even. It has significance only if the RXDMAEN bit in the SPIx_CR2 register is set and if packing mode is used (data length =  8-bit and write access to SPIx_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPIx_CR1 register).
- 0: Number of data to transfer is even
- 1: Number of data to transfer is odd</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LDMA_TX</name>
              <description>Last DMA transfer for transmission
This bit is used in data packing mode, to define if the total number of data to transmit by DMA is odd or even. It has significance only if the TXDMAEN bit in the SPIx_CR2 register is set and if packing mode is used (data length =  8-bit and write access to SPIx_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPIx_CR1 register).
- 0: Number of data to transfer is even
- 1: Number of data to transfer is odd</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPSR</name>
          <displayName>SPI_SSPSR</displayName>
          <description>SPI_SSPSR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RXNE</name>
              <description>Receive buffer not empty
- 0: Rx buffer empty
- 1: Rx buffer not empty</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE</name>
              <description>Transmit buffer empty
- 0: No more empty space in Tx buffer. (software shall not write data to the Tx buffer).
- 1: At least one empty space in Tx buffer. (software may write data to the Tx buffer).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CHSIDE</name>
              <description>Channel side
- 0: Channel Left has to be transmitted or has been received
- 1: Channel Right has to be transmitted or has been received</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UDR</name>
              <description>Underrun flag
- 0: No underrun occurred
- 1: Underrun occurred</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRCERR</name>
              <description>CRC error flag
- 0: CRC value received matches the SPIx_RXCRCR value
- 1: CRC value received does not match the SPIx_RXCRCR value
This flag is set by hardware and cleared by software writing 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODF</name>
              <description>Mode fault
- 0: No mode fault occurred
- 1: Mode fault occurred</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR</name>
              <description>Overrun flag
- 0: No overrun occurred
- 1: Overrun occurred</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BSY</name>
              <description>Busy flag
- 0: SPI (or I2S) not busy
- 1: SPI (or I2S) is busy in communication or Tx buffer is not empty
This flag is set and cleared by hardware.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRE</name>
              <description>Frame format error
This flag is used for SPI in TI slave mode and I2S slave mode. Refer to Section 18.5.10: SPI error flags and Section 18.7.6: I2S error flags.
This flag is set by hardware and reset when SPIx_SR is read by software.
- 0: No frame format error
- 1: A frame format error occurred</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRLVL</name>
              <description>FIFO reception level
These bits are set and cleared by hardware.
- 00: FIFO empty
- 01: 1/4 FIFO
- 10: 1/2 FIFO
- 11: FIFO full</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FTLVL</name>
              <description>FIFO Transmission Level
These bits are set and cleared by hardware.
- 00: FIFO empty
- 01: 1/4 FIFO
- 10: 1/2 FIFO
- 11: FIFO full (considered as FULL when the FIFO threshold is greater than 1/2)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPDR</name>
          <displayName>SPI_SSPDR</displayName>
          <description>SPI_SSPDR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DR</name>
              <description>Data register
Data received or to be transmitted
The data register serves as an interface between the Rx and Tx FIFOs. When the data register is read, RxFIFO is accessed while the write to data register accesses TxFIFO
(See Section 18.5.8: Data transmission and reception procedures).
Note: Data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. The Rx threshold setting must always correspond with the read access currently used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPCRCPR</name>
          <displayName>SPI_SSPCRCPR</displayName>
          <description>SPI_SSPCRCPR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CRCPOLY</name>
              <description>CRC polynomial register
This register contains the polynomial for the CRC calculation.
The CRC polynomial (0007h) is the reset value of this register. Another polynomial can be configured as required.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPRXCRCR</name>
          <displayName>SPI_SSPRXCRCR</displayName>
          <description>SPI_SSPRXCRCR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RXCRC</name>
              <description>Rx CRC register
When CRC calculation is enabled, the RxCRC[15:0] bits contain the computed CRC value of the subsequently received bytes. This register is reset when the CRCEN bit in SPIx_CR1 register is written to 1. The CRC is calculated serially using the polynomial programmed in the SPIx_CRCPR register.
Only the 8 LSB bits are considered when the data frame format is set to be 8-bit data (CRCL bit in the SPIx_CR1 is cleared). CRC calculation is done based on any CRC8 standard.
The entire 16-bits of this register are considered when a 16-bit data frame format is selected (CRCL bit in the SPIx_CR1 register is set). CRC calculation is done based on any CRC16 standard.
A read to this register when the BSY Flag is set could return an incorrect value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPTXCRCR</name>
          <displayName>SPI_SSPTXCRCR</displayName>
          <description>SPI_SSPTXCRCR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TXCRC</name>
              <description>Tx CRC register
When CRC calculation is enabled, the TxCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPIx_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the Tx CRC register
When CRC calculation is enabled, the TxCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPIx_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the SPIx_CRCPR register.
Only the 8 LSB bits are considered when the data frame format is set to be 8-bit data (CRCL bit in the SPIx_CR1 is cleared). CRC calculation is done based on any CRC8 standard.
The entire 16-bits of this register are considered when a 16-bit data frame format is selected (CRCL bit in the SPIx_CR1 register is set). CRC calculation is done based on any CRC16 standard.
Note: A read to this register when the BSY flag is set could return an incorrect value. These bits are not used in I2S mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI3</name>
      <groupName>SPI3</groupName>
      <baseAddress>0x41007000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x24</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>SPI3</name>
        <description>SPI3 interrupt</description>
        <value>7</value>
      </interrupt>
      <registers>
        <register>
          <name>SPI_SSPCR1</name>
          <displayName>SPI_SSPCR1</displayName>
          <description>SPI_SSPCR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CPHA</name>
              <description>Clock phase
- 0: The first clock transition is the first data capture edge
- 1: The second clock transition is the first data capture edge</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPOL</name>
              <description>Clock polarity
- 0: CK to 0 when idle
- 1: CK to 1 when idle</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSTR</name>
              <description>Master selection
- 0: Slave configuration
- 1: Master configuration</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BR</name>
              <description>Baud rate control
- 000: fPCLK/2
- 001: fPCLK/4
- 010: fPCLK/8
- 011: fPCLK/16
- 100: fPCLK/32
- 101: fPCLK/64
- 110: fPCLK/128
- 111: fPCLK/256</description>
              <bitOffset>3</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPE</name>
              <description>SPI enable
- 0: Peripheral disabled
- 1: Peripheral enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSBFIRST</name>
              <description>Frame format
- 0: data is transmitted / received with the MSB first
- 1: data is transmitted / received with the LSB first</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSI</name>
              <description>Internal slave select
This bit has an effect only when the SSM bit is set. The value of this bit is forced onto the NSS pin and the I/O value of the NSS pin is ignored.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSM</name>
              <description>Software slave management
When the SSM bit is set, the NSS pin input is replaced with the value from the SSI bit.
- 0: Software slave management disabled
- 1: Software slave management enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXONLY</name>
              <description>Receive only mode enabled.
This bit enables simplex communication using a single unidirectional line to receive data exclusively. Keep BIDIMODE bit clear when receive only mode is active.This bit is also useful in a multislave system in which this particular slave is not accessed, the output from the accessed slave is not corrupted.
- 0: Full duplex (Transmit and receive)
- 1: Output disabled (Receive-only mode)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCL</name>
              <description>CRC length
This bit is set and cleared by software to select the CRC length.
- 0: 8-bit CRC length
- 1: 16-bit CRC length</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCNEXT</name>
              <description>Transmit CRC next
- 0: Next transmit value is from Tx buffer
- 1: Next transmit value is from Tx CRC register</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CRCEN</name>
              <description>Hardware CRC calculation enable
- 0: CRC calculation disabled
- 1: CRC calculation Enabled</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIOE</name>
              <description>Output enable in bidirectional mode
This bit combined with the BIDIMODE bit selects the direction of transfer in bidirectional mode
- 0: Output disabled (receive-only mode)
- 1: Output enabled (transmit-only mode)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIDIMODE</name>
              <description>Bidirectional data mode enable. This bit enables half-duplex communication using
common single bidirectional data line. Keep RXONLY bit clear when bidirectional mode is
active.
- 0: 2-line unidirectional data mode selected
- 1: 1-line bidirectional data mode selected</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPCR2</name>
          <displayName>SPI_SSPCR2</displayName>
          <description>SPI_SSPCR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000700</resetValue>
          <fields>
            <field>
              <name>RXDMAEN</name>
              <description>Rx buffer DMA enable
When this bit is set, a DMA request is generated whenever the RXNE flag is set.
- 0: Rx buffer DMA disabled
- 1: Rx buffer DMA enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDMAEN</name>
              <description>Tx buffer DMA enable
When this bit is set, a DMA request is generated whenever the TXE flag is set.
- 0: Tx buffer DMA disabled
- 1: Tx buffer DMA enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SSOE</name>
              <description>SS output enable
- 0: SS output is disabled in master mode and the SPI interface can work in multimaster configuration
- 1: SS output is enabled in master mode and when the SPI interface is enabled. The SPI interface cannot work in a multimaster environment.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NSSP</name>
              <description>NSS pulse management
This bit is used in master mode only. it allow the SPI to generate an NSS pulse between two consecutive data when doing continuous transfers. In the case of a single data transfer, it forces the NSS pin high level after the transfer.
It has no meaning if CPHA = 1, or FRF = 1.
- 0: No NSS pulse
- 1: NSS pulse generated</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRF</name>
              <description>Frame format
- 0: SPI Motorola mode
- 1 SPI TI mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERRIE</name>
              <description>Error interrupt enable
This bit controls the generation of an interrupt when an error condition occurs (CRCERR, OVR, MODF in SPI mode, FRE at TI mode and UDR, OVR, and FRE in I2S mode).
- 0: Error interrupt is masked
- 1: Error interrupt is enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNEIE</name>
              <description>RX buffer not empty interrupt enable
- 0: RXNE interrupt masked
- 1: RXNE interrupt not masked. Used to generate an interrupt request when the RXNE flag is set.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIE</name>
              <description>Tx buffer empty interrupt enable
- 0: TXE interrupt masked
- 1: TXE interrupt not masked. Used to generate an interrupt request when the TXE flag is set.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DS</name>
              <description>Data size
These bits configure the data length for SPI transfers:
- 0000: Not used
- 0001: Not used
- 0010: Not used
- 0011: 4-bit
- 0100: 5-bit
- 0101: 6-bit
- 0110: 7-bit
- 0111: 8-bit
- 1000: 9-bit
- 1001: 10-bit
- 1010: 11-bit
- 1011: 12-bit
- 1100: 13-bit
- 1101: 14-bit
- 1110: 15-bit
- 1111: 16-bit
If software attempts to write one of the 'Not used' values, they are forced to the value '0111'(8-bit).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRXTH</name>
              <description>FIFO reception threshold
FRXTH shall be set according the read access (16-bit or 8-bit) to the FIFO.
This bit is used to set the threshold of the RXFIFO that triggers an RXNE event
- 0: RXNE event is generated if the FIFO level is greater than or equal to 1/2 (16-bit)
- 1: RXNE event is generated if the FIFO level is greater than or equal to 1/4 (8-bit)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LDMA_RX</name>
              <description>Last DMA transfer for reception
This bit is used in data packing mode, to define if the total number of data to receive by DMA is odd or even. It has significance only if the RXDMAEN bit in the SPIx_CR2 register is set and if packing mode is used (data length =  8-bit and write access to SPIx_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPIx_CR1 register).
- 0: Number of data to transfer is even
- 1: Number of data to transfer is odd</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LDMA_TX</name>
              <description>Last DMA transfer for transmission
This bit is used in data packing mode, to define if the total number of data to transmit by DMA is odd or even. It has significance only if the TXDMAEN bit in the SPIx_CR2 register is set and if packing mode is used (data length =  8-bit and write access to SPIx_DR is 16-bit wide). It has to be written when the SPI is disabled (SPE = 0 in the SPIx_CR1 register).
- 0: Number of data to transfer is even
- 1: Number of data to transfer is odd</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPSR</name>
          <displayName>SPI_SSPSR</displayName>
          <description>SPI_SSPSR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>RXNE</name>
              <description>Receive buffer not empty
- 0: Rx buffer empty
- 1: Rx buffer not empty</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE</name>
              <description>Transmit buffer empty
- 0: No more empty space in Tx buffer. (software shall not write data to the Tx buffer).
- 1: At least one empty space in Tx buffer. (software may write data to the Tx buffer).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CHSIDE</name>
              <description>Channel side
- 0: Channel Left has to be transmitted or has been received
- 1: Channel Right has to be transmitted or has been received</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UDR</name>
              <description>Underrun flag
- 0: No underrun occurred
- 1: Underrun occurred</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CRCERR</name>
              <description>CRC error flag
- 0: CRC value received matches the SPIx_RXCRCR value
- 1: CRC value received does not match the SPIx_RXCRCR value
This flag is set by hardware and cleared by software writing 0.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MODF</name>
              <description>Mode fault
- 0: No mode fault occurred
- 1: Mode fault occurred</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OVR</name>
              <description>Overrun flag
- 0: No overrun occurred
- 1: Overrun occurred</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BSY</name>
              <description>Busy flag
- 0: SPI (or I2S) not busy
- 1: SPI (or I2S) is busy in communication or Tx buffer is not empty
This flag is set and cleared by hardware.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRE</name>
              <description>Frame format error
This flag is used for SPI in TI slave mode and I2S slave mode. Refer to Section 18.5.10: SPI error flags and Section 18.7.6: I2S error flags.
This flag is set by hardware and reset when SPIx_SR is read by software.
- 0: No frame format error
- 1: A frame format error occurred</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FRLVL</name>
              <description>FIFO reception level
These bits are set and cleared by hardware.
- 00: FIFO empty
- 01: 1/4 FIFO
- 10: 1/2 FIFO
- 11: FIFO full</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FTLVL</name>
              <description>FIFO Transmission Level
These bits are set and cleared by hardware.
- 00: FIFO empty
- 01: 1/4 FIFO
- 10: 1/2 FIFO
- 11: FIFO full (considered as FULL when the FIFO threshold is greater than 1/2)</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPDR</name>
          <displayName>SPI_SSPDR</displayName>
          <description>SPI_SSPDR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DR</name>
              <description>Data register
Data received or to be transmitted
The data register serves as an interface between the Rx and Tx FIFOs. When the data register is read, RxFIFO is accessed while the write to data register accesses TxFIFO
(See Section 18.5.8: Data transmission and reception procedures).
Note: Data is always right-aligned. Unused bits are ignored when writing to the register, and read as zero when the register is read. The Rx threshold setting must always correspond with the read access currently used.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPCRCPR</name>
          <displayName>SPI_SSPCRCPR</displayName>
          <description>SPI_SSPCRCPR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000007</resetValue>
          <fields>
            <field>
              <name>CRCPOLY</name>
              <description>CRC polynomial register
This register contains the polynomial for the CRC calculation.
The CRC polynomial (0007h) is the reset value of this register. Another polynomial can be configured as required.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPRXCRCR</name>
          <displayName>SPI_SSPRXCRCR</displayName>
          <description>SPI_SSPRXCRCR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RXCRC</name>
              <description>Rx CRC register
When CRC calculation is enabled, the RxCRC[15:0] bits contain the computed CRC value of the subsequently received bytes. This register is reset when the CRCEN bit in SPIx_CR1 register is written to 1. The CRC is calculated serially using the polynomial programmed in the SPIx_CRCPR register.
Only the 8 LSB bits are considered when the data frame format is set to be 8-bit data (CRCL bit in the SPIx_CR1 is cleared). CRC calculation is done based on any CRC8 standard.
The entire 16-bits of this register are considered when a 16-bit data frame format is selected (CRCL bit in the SPIx_CR1 register is set). CRC calculation is done based on any CRC16 standard.
A read to this register when the BSY Flag is set could return an incorrect value.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_SSPTXCRCR</name>
          <displayName>SPI_SSPTXCRCR</displayName>
          <description>SPI_SSPTXCRCR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TXCRC</name>
              <description>Tx CRC register
When CRC calculation is enabled, the TxCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPIx_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the Tx CRC register
When CRC calculation is enabled, the TxCRC[7:0] bits contain the computed CRC value of the subsequently transmitted bytes. This register is reset when the CRCEN bit of SPIx_CR1 is written to 1. The CRC is calculated serially using the polynomial programmed in the SPIx_CRCPR register.
Only the 8 LSB bits are considered when the data frame format is set to be 8-bit data (CRCL bit in the SPIx_CR1 is cleared). CRC calculation is done based on any CRC8 standard.
The entire 16-bits of this register are considered when a 16-bit data frame format is selected (CRCL bit in the SPIx_CR1 register is set). CRC calculation is done based on any CRC16 standard.
Note: A read to this register when the BSY flag is set could return an incorrect value. These bits are not used in I2S mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI2S_I2SCFGR</name>
          <displayName>SPI2S_I2SCFGR</displayName>
          <description>SPI2S_I2SCFGR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CHLEN</name>
              <description>Channel length (number of bits per audio channel)
- 0: 16-bit wide
- 1: 32-bit wide
The bit write operation has a meaning only if DATLEN = 00 otherwise the channel length is fixed to 32-bit by hardware whatever the value filled in.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATLEN</name>
              <description>Data length to be transferred
- 00: 16-bit data length
- 01: 24-bit data length
- 10: 32-bit data length
- 11: Not allowed</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKPOL</name>
              <description>Steady state clock polarity
- 0: I2S clock steady state is low level
- 1: I2S clock steady state is high level</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2SSTD</name>
              <description>I2S standard selection
- 00: I2S Philips standard.
- 01: MSB justified standard (left justified)
- 10: LSB justified standard (right justified)
- 11: PCM standard</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCMSYNC</name>
              <description>PCM frame synchronization
- 0: Short frame synchronization
- 1: Long frame synchronization
Note: This bit has a meaning only if I2SSTD = 11 (PCM standard is used). It is not used in SPI mode.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2SCFG</name>
              <description>I2S configuration mode
- 00: Slave - transmit
- 01: Slave - receive
- 10: Master - transmit
- 11: Master - receive</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2SE</name>
              <description>I2S enable
- 0: I2S peripheral is disabled
- 1: I2S peripheral is enabled
Note: This bit is not used in SPI mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2SMOD</name>
              <description>I2S mode selection
- 0: SPI mode is selected
- 1: I2S mode is selected
Note: This bit should be configured when the SPI is disabled.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ASTREN</name>
              <description>Asynchronous start enable.
Note: The appropriate transition is a falling edge on WS signal when I2S Philips Standard is used, or a rising edge for other standards.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>The Asynchronous start is disabled. When the I2S is enabled in slave mode, the I2S slave starts the transfer when the I2S clock is received and an appropriate transition (depending on the protocol selected) is detected on the WS signal.
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>The Asynchronous start is enabled. When the I2S is enabled in slave mode, the I2S slave starts immediately the transfer when the I2S clock is received from the master without checking the expected transition of WS signal.
</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI2S_I2SPR</name>
          <displayName>SPI2S_I2SPR</displayName>
          <description>SPI2S_I2SPR register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000002</resetValue>
          <fields>
            <field>
              <name>I2SDIV</name>
              <description>I2S linear prescaler
I2SDIV [7:0] = 0 or I2SDIV [7:0] = 1 are forbidden values.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ODD</name>
              <description>Odd factor for the prescaler
- 0: Real divider value is = I2SDIV *2
- 1: Real divider value is = (I2SDIV * 2)+1</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MCKOE</name>
              <description>Master clock output enable
- 0: Master clock output is disabled
- 1: Master clock output is enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYSTEM_CTRL</name>
      <groupName>SYSTEM_CTRL</groupName>
      <baseAddress>0x40000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x48</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>DIE_ID</name>
          <displayName>DIE_ID</displayName>
          <description>DIE_ID register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000120</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Cut revision (metal fix)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VERSION</name>
              <description>Cut version</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRODUCT</name>
              <description>Product version.
May be used to discriminate several version of a same digital BLE LPH device embedding
different analog versions</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>JTAG_ID</name>
          <displayName>JTAG_ID</displayName>
          <description>JTAG_ID register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x02027041</resetValue>
          <fields>
            <field>
              <name>MANUF_ID</name>
              <description>Manufacturer ID</description>
              <bitOffset>1</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PART_NUMBER</name>
              <description>Part number</description>
              <bitOffset>12</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VERSION_NUMBER</name>
              <description>Version</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2C_FMP_CTRL</name>
          <displayName>I2C_FMP_CTRL</displayName>
          <description>I2C_FMP_CTRL register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>I2C1_PA0_FMP</name>
              <description>I2C1 Fast-Mode Plus driving capability for I2C1_SCL on PA0 I/O.
0: PA0 pin operated in standard mode.
1: FM+ mode is enabled on PA0 pin, and speed control is bypassed</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1_PA1_FMP</name>
              <description>I2C1 Fast-Mode Plus driving capability for I2C1_SDA on PA1 I/O.
0: PA1 pin operated in standard mode.
1: FM+ mode is enabled on PA1 pin, and speed control is bypassed</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1_PB6_FMP</name>
              <description>I2C1 Fast-Mode Plus driving capability for I2C1_SCL on PB6 I/O.
0: PB6 pin operated in standard mode.
1: FM+ mode is enabled on PB6 pin, and speed control is bypassed.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1_PB7_FMP</name>
              <description>I2C1 Fast-Mode Plus driving capability for I2C1_SDA on PB7 I/O.
0: PB7 pin operated in standard mode.
1: FM+ mode is enabled on PB7 pin, and speed control is bypassed</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1_PB10_FMP</name>
              <description>I2C1_PB10_FMP: I2C1 Fast-Mode Plus driving capability for I2C1_SDA on PB10 I/O.
0: PB10 pin operated in standard mode.
1: FM+ mode is enabled on PB10 pin, and speed control is bypassed.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C1_PB11_FMP</name>
              <description>I2C1_PB11_FMP: I2C1 Fast-Mode Plus driving capability for I2C1_SCL on PB11 I/O.
0: PB11 pin operated in standard mode.
1: FM+ mode is enabled on PB11 pin, and speed control is bypassed</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2_PA6_FMP</name>
              <description>I2C2_PA6_FMP: I2C2 Fast-Mode Plus driving capability for I2C2_SCL on PA6 I/O.
0: PA6 pin operated in standard mode.
1: FM+ mode is enabled on PA6 pin, and speed control is bypassed.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2_PA7_FMP</name>
              <description>I2C2_PA7_FMP: I2C2 Fast-Mode Plus driving capability for I2C2_SDA on PA7 I/O.
0: PA7 pin operated in standard mode.
1: FM+ mode is enabled on PA7 pin, and speed control is bypassed</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2_PA13_FMP</name>
              <description>I2C2_PA13_FMP: I2C2 Fast-Mode Plus driving capability for I2C2_SCL on PA13 I/O.
0: PA13 pin operated in standard mode.
1: FM+ mode is enabled on PA13 pin, and speed control is bypassed.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C2_PA14_FMP</name>
              <description>I2C2_PA14_FMP: I2C2 Fast-Mode Plus driving capability for I2C2_SDA on PA14 I/O.
0: PA14 pin operated in standard mode.
1: FM+ mode is enabled on PA14 pin, and speed control is bypassed.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IO_DTR</name>
          <displayName>IO_DTR</displayName>
          <description>IO_DTR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PA0_DT</name>
              <description>PA0_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_DT</name>
              <description>PA1_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_DT</name>
              <description>PA2_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_DT</name>
              <description>PA3_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_DT</name>
              <description>PA4_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_DT</name>
              <description>PA5_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_DT</name>
              <description>PA6_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA7_DT</name>
              <description>PA7_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_DT</name>
              <description>PA8_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_DT</name>
              <description>PA9_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_DT</name>
              <description>PA10_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_DT</name>
              <description>PA11_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_DT</name>
              <description>PA12_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_DT</name>
              <description>PA13_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_DT</name>
              <description>PA14_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA15_DT</name>
              <description>PA15_DT:      Interrupt Detection Type for port A I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB0_DT</name>
              <description>PB0_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB1_DT</name>
              <description>PB1_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB2_DT</name>
              <description>PB2_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB3_DT</name>
              <description>PB3_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB4_DT</name>
              <description>PB4_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB5_DT</name>
              <description>PB5_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB6_DT</name>
              <description>PB6_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB7_DT</name>
              <description>PB7_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB8_DT</name>
              <description>PB8_DT:       Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB9_DT</name>
              <description>PB9_DT:        Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB10_DT</name>
              <description>PB10_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB11_DT</name>
              <description>PB11_DT:        Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB12_DT</name>
              <description>PB12_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB13_DT</name>
              <description>PB13_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB14_DT</name>
              <description>PB14_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB15_DT</name>
              <description>PB15_DT:      Interrupt Detection Type for port B I/Os.
0: edge detection.
1: level detection.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IO_IBER</name>
          <displayName>IO_IBER</displayName>
          <description>IO_IBER register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>PA0_IBE</name>
              <description>PA0_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_IBE</name>
              <description>PA1_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_IBE</name>
              <description>PA2_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_IBE</name>
              <description>PA3_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_IBE</name>
              <description>PA4_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_IBE</name>
              <description>PA5_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_IBE</name>
              <description>PA6_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA7_IBE</name>
              <description>PA7_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_IBE</name>
              <description>PA8_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_IBE</name>
              <description>PA9_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_IBE</name>
              <description>PA10_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_IBE</name>
              <description>PA11_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_IBE</name>
              <description>PA12_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_IBE</name>
              <description>PA13_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_IBE</name>
              <description>PA14_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA15_IBE</name>
              <description>PA15_IBE: Interrupt edge selection for Port A I/Os.
0: single edge detection.
1: both edges detection</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB0_IBE</name>
              <description>PB0_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB1_IBE</name>
              <description>PB1_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB2_IBE</name>
              <description>PB2_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB3_IBE</name>
              <description>PB3_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB4_IBE</name>
              <description>PB4_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB5_IBE</name>
              <description>PB5_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB6_IBE</name>
              <description>PB6_IBE: Interrupt edge selection for port B I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: single edge detection.
1: both edges detection.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB7_IBE</name>
              <description>PB7_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB8_IBE</name>
              <description>PB8_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB9_IBE</name>
              <description>PB9_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB10_IBE</name>
              <description>PB10_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB11_IBE</name>
              <description>PB11_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB12_IBE</name>
              <description>PB12_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB13_IBE</name>
              <description>PB13_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB14_IBE</name>
              <description>PB14_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB15_IBE</name>
              <description>PB15_IBE: Interrupt edge selection for port B I/Ossingle edge detection.
1: both edges detection.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IO_IEVR</name>
          <displayName>IO_IEVR</displayName>
          <description>IO_IEVR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PA0_IEV</name>
              <description>PA0_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_IEV</name>
              <description>PA1_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_IEV</name>
              <description>PA2_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_IEV</name>
              <description>PA3_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_IEV</name>
              <description>PA4_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_IEV</name>
              <description>PA5_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_IEV</name>
              <description>PA6_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA7_IEV</name>
              <description>PA7_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_IEV</name>
              <description>PA8_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_IEV</name>
              <description>PA9_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_IEV</name>
              <description>PA10_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_IEV</name>
              <description>PA11_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_IEV</name>
              <description>PA12_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_IEV</name>
              <description>PA13_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_IEV</name>
              <description>PA14_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA15_IEV</name>
              <description>PA15_IEV : Interrupt polarity event for Port A I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB0_IEV</name>
              <description>PB0_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB1_IEV</name>
              <description>PB1_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB2_IEV</name>
              <description>PB2_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB3_IEV</name>
              <description>PB3_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB4_IEV</name>
              <description>PB4_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB5_IEV</name>
              <description>PB5_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB6_IEV</name>
              <description>PB6_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB7_IEV</name>
              <description>PB7_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB8_IEV</name>
              <description>PB8_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB9_IEV</name>
              <description>PB9_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB10_IEV</name>
              <description>PB10_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB11_IEV</name>
              <description>PB11_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB12_IEV</name>
              <description>PB12_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB13_IEV</name>
              <description>PB13_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB14_IEV</name>
              <description>PB14_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB15_IEV</name>
              <description>PB15_IEV : Interrupt polarity event for Port B I/Os.
0: falling edge / low level.
1: rising edge / high level.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IO_IER</name>
          <displayName>IO_IER</displayName>
          <description>IO_IER register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>PA0_IE</name>
              <description>PA0_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_IE</name>
              <description>PA1_IE: Interrupt enable for port A I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: interrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_IE</name>
              <description>PA2_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_IE</name>
              <description>PA3_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_IE</name>
              <description>PA4_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_IE</name>
              <description>PA5_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_IE</name>
              <description>PA6_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA7_IE</name>
              <description>PA7_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_IE</name>
              <description>PA8_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_IE</name>
              <description>PA9_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_IE</name>
              <description>PA10_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_IE</name>
              <description>PA11_IE: Interrupt enable for port A I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: interrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_IE</name>
              <description>PA12_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_IE</name>
              <description>PA13_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_IE</name>
              <description>PA14_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA15_IE</name>
              <description>PA15_IE: Interrupt enable for port A I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB0_IE</name>
              <description>PB0_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB1_IE</name>
              <description>PB1_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB2_IE</name>
              <description>PB2_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB3_IE</name>
              <description>PB3_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB4_IE</name>
              <description>PB4_IE: Interrupt enable for port B I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: interrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB5_IE</name>
              <description>PB5_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB6_IE</name>
              <description>PB6_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB7_IE</name>
              <description>PB7_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB8_IE</name>
              <description>PB8_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB9_IE</name>
              <description>PB9_IE: Interrupt enable for port B I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: interrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB10_IE</name>
              <description>PB10_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB11_IE</name>
              <description>PB11_IE: Interrupt enable for port B I/Os.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0: interrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB12_IE</name>
              <description>PB12_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB13_IE</name>
              <description>PB13_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB14_IE</name>
              <description>PB14_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB15_IE</name>
              <description>PB15_IE: Interrupt enable for port B I/Osinterrupt is disabled.
1: interrupt is enabled.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IO_ISCR</name>
          <displayName>IO_ISCR</displayName>
          <description>IO_ISCR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PA0_ISC</name>
              <description>PA0_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_ISC</name>
              <description>PA1_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_ISC</name>
              <description>PA2_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_ISC</name>
              <description>PA3_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_ISC</name>
              <description>PA4_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_ISC</name>
              <description>PA5_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_ISC</name>
              <description>PA6_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA7_ISC</name>
              <description>PA7_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_ISC</name>
              <description>PA8_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_ISC</name>
              <description>PA9_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_ISC</name>
              <description>PA10_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_ISC</name>
              <description>PA11_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_ISC</name>
              <description>PA12_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_ISC</name>
              <description>PA13_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_ISC</name>
              <description>PA14_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA15_ISC</name>
              <description>PA15_ISC: Interrupt status (before mask) for port a I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB0_ISC</name>
              <description>PB0_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB1_ISC</name>
              <description>PB1_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB2_ISC</name>
              <description>PB2_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB3_ISC</name>
              <description>PB3_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB4_ISC</name>
              <description>PB4_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB5_ISC</name>
              <description>PB5_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB6_ISC</name>
              <description>PB6_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB7_ISC</name>
              <description>PB7_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB8_ISC</name>
              <description>PB8_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB9_ISC</name>
              <description>PB9_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB10_ISC</name>
              <description>PB10_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB11_ISC</name>
              <description>PB11_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB12_ISC</name>
              <description>PB12_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB13_ISC</name>
              <description>PB13_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB14_ISC</name>
              <description>PB14_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PB15_ISC</name>
              <description>PB15_ISC: Interrupt status (before mask) for port B I/Os.
0: no pending interrupt.
1: event occurred on corresponding I/O / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWRC_IER</name>
          <displayName>PWRC_IER</displayName>
          <description>PWRC_IER register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>BORH_IE</name>
              <description>BORH_IE: BORH interrupt enable.
0: BORH interrupt is disabled.
1: BORH interrupt is enabled.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVD_IE</name>
              <description>PVD_IE: Programmable Voltage Detector interrupt enable.
0: PVD interrupt is disabled.
1: PVD interrupt is enabled.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WKUP_IE</name>
              <description>WKUP_IE: Power Controller Wakeup event interrupt enable.
0: Interrupt on wakeup event seen by the PWRC is disabled.
1: Interrupt on wakeup event seen by the PWRC is enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWRC_ISCR</name>
          <displayName>PWRC_ISCR</displayName>
          <description>PWRC_ISCR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>BORH_ISC</name>
              <description>BORH_ISC: BORH interrupt status.
0: no pending interrupt.
1: voltage went under BORH threshold / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVD_ISC</name>
              <description>PVD_ISC: Programmable Voltage Detector status.
0: no pending interrupt.
1: voltage went under programmed threshold / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WKUP_ISC</name>
              <description>WKUP_ISC: Indicates the Power Controller receives a Wakeup event.
0: no pending interrupt.
1: Wakeup event on PWRC occurred / interrupt occurred (if enabled).
Cleared by writing 1 in the bit.
This flag will be read at 1 if a wakeup event arrives so close to the low power mode entry
requests that the PWRC aborts before shutting down the system.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPIO_SWA_CTRL</name>
          <displayName>GPIO_SWA_CTRL</displayName>
          <description>GPIO_SWA_CTRL register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>ATB1_nPVD</name>
              <description>ATB1_nPVD: select the analog feature on PB14 between ATB1 and PVD when the PB14 I/O
is programmed in analog mode (in the associated GPIO_MODER register):
0: PVD external voltage feature is selected (default).
1: ATB1 feature is selected</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTAI_DTR</name>
          <displayName>INTAI_DTR</displayName>
          <description>INTAI_DTR register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>TX_DT</name>
              <description>TX_DT: detection type on TX_SEQUENCE signal:
0: detection on edge (default).
1: detection on level</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DT</name>
              <description>RX_DT: detection type on RX_SEQUENCE signal:
0: detection on edge (default).
1: detection on level</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_DT</name>
              <description>COMP_DT: detection type on COMP_OUT (after COMP_POL selection) signal:
0: detection on edge (default).
1: detection on level</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_BUSY_STATUS_DT</name>
              <description>RFIP_BUSY_STATUS_DT: detection type on RFIP_BUSY_STATUS signal:
0: detection on edge (default).
1: detection on level</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTAI_IBER</name>
          <displayName>INTAI_IBER</displayName>
          <description>INTAI_IBER register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>TX_IBE</name>
              <description>TX_IBE: interrupt edge register on TX_SEQUENCE signal:
0: detection on single edge (default).
1: detection on both edges</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_IBE</name>
              <description>RX_IBE: interrupt edge register on RX_SEQUENCE signal:
0: detection on single edge (default).
1: detection on both edges</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_IBE</name>
              <description>COMP_IBE: interrupt edge register on COMP_OUT signal:
0: detection on single edge (default).
1: detection on both edges</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_BUSY_STATUS_IBE</name>
              <description>RFIP_BUSY_STATUS_IBE: interrupt edge register on RFIP_BUSY_STATUS signal:
0: detection on single edge (default).
1: detection on both edges</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTAI_IEVR</name>
          <displayName>INTAI_IEVR</displayName>
          <description>INTAI_IEVR register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>TX_IEV</name>
              <description>TX_IEV: interrupt polarity event on TX_SEQUENCE signal:
0: detection on falling edge / low level (default).
1: detection on rising edge / high level</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_IEV</name>
              <description>RX_IEV: interrupt polarity event on RX_SEQUENCE signal:
0: detection on falling edge / low level (default).
1: detection on rising edge / high level</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_IEV</name>
              <description>COMP_IEV: interrupt polarity event on COMP_OUT signal:
0: detection on falling edge / low level (default).
1: detection on rising edge / high level</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_BUSY_STATUS_IEV</name>
              <description>RFIP_BUSY_STATUS_IEV: interrupt polarity event on RFIP_BUSY_STATUS signal:
0: detection on falling edge / low level (default).
1: detection on rising edge / high level</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTAI_IER</name>
          <displayName>INTAI_IER</displayName>
          <description>INTAI_IER register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>TX_IE</name>
              <description>TX_IE: interrupt enable on TX_SEQUENCE signal:
0: TX_SEQUENCE interrupt is disabled (default).
1: TX_SEQUENCE interrupt is enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_IE</name>
              <description>RX_IE: interrupt enable on RX_SEQUENCE signal:
0: RX_SEQUENCE interrupt is disabled (default).
1: RX_SEQUENCE interrupt is enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMP_IE</name>
              <description>COMP_IE: interrupt enable on COMP_OUT signal:
0: COMP_OUT interrupt is disabled (default).
1: COMP_OUT interrupt is enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_BUSY_STATUS_IE</name>
              <description>RFIP_BUSY_STATUS_IE: interrupt enable on RFIP_BUSY_STATUS signal:
0: RFIP_BUSY_STATUS interrupt is disabled (default).
1: RFIP_BUSY_STATUS interrupt is enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTAI_ISCR</name>
          <displayName>INTAI_ISCR</displayName>
          <description>INTAI_ISCR register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>TX_ISC</name>
              <description>TX_ISC:interrupt status on TX_SEQUENCE signal (can be a rising or a falling edge
depending on BLERXTX_IEVR and BLERXTX_IBER):
0: no activity on TX_SEQUENCE detected.
1: activity on TX_SEQUENCE occurred</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_ISC</name>
              <description>RX_ISC: interrupt status on RX_SEQUENCE signal (can be a rising or a falling edge
depending on BLERXTX_IEVR and BLERXTX_IBER):
0: no activity on RX_SEQUENCE detected.
1: activity on RX_SEQUENCE occurred</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_ISEDGE</name>
              <description>TX_ISEDGE: interrupt edge status on TX_SEQUENCE signal:
0: falling edge on TX_SEQUENCE detected.
1: rising edge on TX_SEQUENCE detected.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_ISEDGE</name>
              <description>RX_ISEDGE: interrupt edge status on RX_SEQUENCE signal:
0: falling edge on RX_SEQUENCE detected.
1: rising edge on RX_SEQUENCE detected.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COMP_ISC</name>
              <description>COMP_ISC: interrupt status on COMP_OUT (can be a rising or a falling edge depending on
INTAI_IEVR and INTAI_IBER):
0: no activity on COMP_OUT detected.
1: activity on COMP_OUT occurred</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFIP_BUSY_STATUS_ISC</name>
              <description>RFIP_BUSY_STATUS_ISC: interrupt status on RFIP_BUSY_STATUS (can be a rising or a
falling edge depending on INTAI_IEVR and INTAI_IBER):
0: no activity on RFIP_BUSY_STATUS detected.
1: activity on RFIP_BUSY_STATUS occurred</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSCFG_SR1</name>
          <displayName>SYSCFG_SR1</displayName>
          <description>SYSCFG_SR1 register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>RFIP_BUSY_STATUS</name>
              <description>RFIP_BUSY_STATUS: MR_SUBG BUSY status:
Software should check that MR_SUBG IP is not busy (or relay on the related interrupt) before
to initiate any system clock frequency switch to operate the switching in a safe way.
0: MR_SUBG is not busy.
1: MR_SUBG is busy</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RF_DTB_CONFIG</name>
          <displayName>RF_DTB_CONFIG</displayName>
          <description>RF_DTB_CONFIG register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000000000</resetValue>
          <fields>
            <field>
              <name>RF_DTB_CONFIG</name>
              <description>Controlling AF7 extended mode:
- 00 : MR_SUBG DTB default configuration
- 01 : MR_SUBG DTB shuffled configuration
- 10 : BUBBLE_DTB configuration
- 11 : MR_SUBG DTB default configuration (as per 00)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SWITCHABLE</name>
      <groupName>SWITCHABLE</groupName>
      <baseAddress>0x49001040</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RFIP_VERSION</name>
          <displayName>RFIP_VERSION</displayName>
          <description>RFIP_VERSION register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00001100</resetValue>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Revision of the RFIP to be used for metal fixes)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VERSION</name>
              <description>Version of the RFIP  (to be used for cut upgrades)</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>PRODUCT</name>
              <description>Used for major upgrades (new protocols support / new features)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_ENABLE</name>
          <displayName>IRQ_ENABLE</displayName>
          <description>IRQ_ENABLE register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BIT_SYNC_DETECTED_E</name>
              <description>Preamble has been detected, the content of the PAYLOAD_X registers is not yet valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SYNC_COMPLETE_E</name>
              <description>Frame Sync has been detected, the content of the PAYLOAD_X registers is not yet valid.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_COMPLETE_E</name>
              <description>Frame ( payload + CRC) received, the content of the PAYLOAD_X registers is valid.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_VALID_E</name>
              <description>Frame ( payload + CRC) received wthout error (the CRC has been checked and is matching with the received CRC).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <displayName>STATUS</displayName>
          <description>STATUS register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BIT_SYNC_DETECTED_F</name>
              <description>Preamble has been detected, the content of the PAYLOAD_X registers is not yet valid.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_SYNC_COMPLETE_F</name>
              <description>Frame Sync has been detected, the content of the PAYLOAD_X registers is not yet valid.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_COMPLETE_F</name>
              <description>Frame ( payload + CRC) received, the content of the PAYLOAD_X registers is valid.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_VALID_F</name>
              <description>Frame ( payload + CRC) received wthout error (the CRC has been checked and is matching with the received CRC).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ERROR_F</name>
              <description>- 11 : CRC error
</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>STATUS</name>
      <groupName>STATUS</groupName>
      <baseAddress>0x49000600</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RFSEQ_IRQ_STATUS</name>
          <displayName>RFSEQ_IRQ_STATUS</displayName>
          <description>RFSEQ_IRQ_STATUS register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TX_DONE_F</name>
              <description>Transmission done flag</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RX_OK_F</name>
              <description>Reception ended and OK flag</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RX_TIMEOUT_F</name>
              <description>Reception timeout flag</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RX_CRC_FRROR_F</name>
              <description>Reception with CRC error flag</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>FAST_RX_TERM_F</name>
              <description>Fast RX Termination flag</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RXTIMER_STOP_CDT_F</name>
              <description>Enable interrupt on RXTIMER_STOP_CDT_F flag</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SABORT_DONE_F</name>
              <description>SABORT command treated and done flag</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>COMMAND_REJECTED_F</name>
              <description>Command rejection flag.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>CS_F</name>
              <description>Carrier Sense (RSSI over threshold) flag</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>PREAMBLE_VALID_F</name>
              <description>Valid PREAMBLE detection flag.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SYNC_VALID_F</name>
              <description>Valid SYNC word detection flag.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>DATABUFFER0_USED_F</name>
              <description>Data Buffer 0 fully read in TX or fully written in RX flag</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>DATABUFFER1_USED_F</name>
              <description>Data Buffer 1 fully read in TX or fully written in RX flag</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RX_ALMOST_FULL_0_F</name>
              <description>Data Buffer0 used (written during a RX) up to programmed thresold flag</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RX_ALMOST_FULL_1_F</name>
              <description>Data Buffer1 used (written during a RX) up to programmed thresold flag</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>TX_ALMOST_EMPTY_0_F</name>
              <description>Data Buffer0 used (read during a TX) up to programmed thresold flag</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>TX_ALMOST_EMPTY_1_F</name>
              <description>Data Buffer1 used (read during a TX) up to programmed thresold flag</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>AHB_ACCESS_ERROR_F</name>
              <description>An AHB transfer issue occurred for one of the AHB masters (RRM, Data Buffer Manager, Sequencer).</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>HW_ANA_FAILURE_F</name>
              <description>Analog HW failure flag (PLL lock / unlock error, calibration error)
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SEQ_F</name>
              <description>Sequencer completion flag.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RRM_CMD_START_F</name>
              <description>RRM-UDRA command list execution started flag.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>RRM_CMD_END_F</name>
              <description>RRM-UDRA command list execution ended flag.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SAFEASK_CALIB_DONE_F</name>
              <description>End of Safe-ASK PA calibration flag.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>AGC_CALIB_DONE_F</name>
              <description>Valid RSSI value available in the RSSI_RUNNING bit field flag.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>RFSEQ_STATUS_DETAIL</name>
          <displayName>RFSEQ_STATUS_DETAIL</displayName>
          <description>RFSEQ_STATUS_DETAIL register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DBM_FIFO_ERROR_F</name>
              <description>Data Buffer Manager internal FIFO overflow/underflow flag.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>PLL_LOCK_FAIL_F</name>
              <description>PLL lock fail status flag</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>PLL_UNLOCK_F</name>
              <description>PLL unlock event flag</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>PLL_CALFREQ_ERROR_F</name>
              <description>VCO frequency calibration error flag</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>PLL_CALAMP_ERROR_F</name>
              <description>VCO amplitude calibration error flag</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SEQ_ACTIONTIMEOUT_F</name>
              <description>The Sequencer has ended because the current SeqAction reached its ActionTimeout.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
            <field>
              <name>SEQ_COMPLETE_F</name>
              <description>The Sequencer has ended the last defined SeqAction properly( NextAction math or null pointer)</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
            </field>
          </fields>
        </register>
        <register>
          <name>RADIO_FSM_INFO</name>
          <displayName>RADIO_FSM_INFO</displayName>
          <description>RADIO_FSM_INFO register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RADIO_FSM_STATE</name>
              <description>State of the Radio FSM
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_INDICATOR</name>
          <displayName>RX_INDICATOR</displayName>
          <description>RX_INDICATOR register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RSSI_LEVEL_ON_SYNC</name>
              <description>RSSI level captured at the end of the SYNC word detection of the received packet.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RSSI_LEVEL_RUN</name>
              <description>Continuous level of the output of the measured RSSI value</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_WORD</name>
              <description>AGC word of the received packet.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ANT_SELECT</name>
              <description>Currently selected antenna</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_INFO_REG</name>
          <displayName>RX_INFO_REG</displayName>
          <description>RX_INFO_REG register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RX_PCKTLEN_OUT</name>
              <description>Indicates received packet length in bytes:
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CRC_REG</name>
          <displayName>RX_CRC_REG</displayName>
          <description>RX_CRC_REG register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RX_CRC_OUT</name>
              <description>CRC field of the received packet (read-only info)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>QI_INFO</name>
          <displayName>QI_INFO</displayName>
          <description>QI_INFO register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PQI_INFO</name>
              <description>Preamble Quality Indicator (PQI) value of the received packet.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SQI_INFO</name>
              <description>SYNC Quality Indicator (SQI) value of the received packet.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SQI_SEC</name>
              <description>Indicate if measured SQI refers to SYNC word or secondary SYNC word
</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>AFC_CORRECTION</name>
              <description>AFC value frozen at sync reception.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFFER_INFO</name>
          <displayName>DATABUFFER_INFO</displayName>
          <description>DATABUFFER_INFO register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CURRENT_DATABUFFER_COUNT</name>
              <description>Indicates the number of bytes used in the last used DATA BUFFER.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NB_DATABUFFER_USED</name>
              <description>Provides the number of data buffers which have been fully used
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CURRENT_DATABUFFER</name>
              <description>Indicates which Data Buffer is currently used by the HW
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_CAPTURE</name>
          <displayName>TIME_CAPTURE</displayName>
          <description>TIME_CAPTURE register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>TIME_CAPTURE</name>
              <description>Interpolated absolute time value captured on specific programmable event through TIME_CAPTURESEL[2:0] bit field.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CORRECTION_OUT</name>
          <displayName>IQC_CORRECTION_OUT</displayName>
          <description>IQC_CORRECTION_OUT register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>IQC_CORRECT_OUT</name>
              <description>Final correction value output from IQC (compensation  engine).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_SAFEASK_OUT</name>
          <displayName>PA_SAFEASK_OUT</displayName>
          <description>PA_SAFEASK_OUT register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PA_CODEMAX</name>
              <description>Safe ASK level (provided after a CALIB_SAFEASK command), indicating the maximum PA Power to program before reaching ohmic saturation.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VCO_CALIB_OUT</name>
          <displayName>VCO_CALIB_OUT</displayName>
          <description>VCO_CALIB_OUT register</description>
          <addressOffset>0x2c</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0000FF40</resetValue>
          <fields>
            <field>
              <name>VCO_CALFREQ_OUT</name>
              <description>VCO frequency calibration value currently output by the VCO calibration block (and applied on the VCO when ON)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>VCO_CALAMP_OUT</name>
              <description>VCO amplitude calibration value currently output by the VCO calibration block (and applied on the VCO when ON)
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQ_INFO</name>
          <displayName>SEQ_INFO</displayName>
          <description>SEQ_INFO register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEQ_FSM_STATE</name>
              <description>Current state of the Sequencer
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEQ_EVENT_STATUS</name>
          <displayName>SEQ_EVENT_STATUS</displayName>
          <description>SEQ_EVENT_STATUS register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEQ_EVENT_STATUS</name>
              <description>Current value of the seq_event_status used by the Sequencer for next action mask comparison.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>STATIC</name>
      <groupName>STATIC</groupName>
      <baseAddress>0x49000400</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x40</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>PCKT_CONFIG</name>
          <displayName>PCKT_CONFIG</displayName>
          <description>PCKT_CONFIG register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x000103F1</resetValue>
          <fields>
            <field>
              <name>CRC_MODE</name>
              <description>CRC type (0, 8, 16, 16 802.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SECONDARY_SYNC_SEL</name>
              <description>In TX mode: this bit selects which synchro word is sent on the frame between SYNC and SEC_SYNC
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_LEN</name>
              <description>Length of the SYNC (and secondary) SYNC word in 1-bit granularity
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_PRESENT</name>
              <description>Indicate if a SYNC word is present on the frame or not (null length)
</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LEN_WIDTH</name>
              <description>Indicates if the LENGTH field is defined on 1 byte or 2 bytes
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_VAR_LEN</name>
              <description>Select the length mode
</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREAMBLE_LENGTH</name>
              <description>Length of the PREAMBLE in pairs of bits (0 to 2046)</description>
              <bitOffset>12</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PREAMBLE_SEQ</name>
              <description>Select the PREAMBLE pattern to be applied
</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POSTAMBLE_LENGTH</name>
              <description>Length of the POSTAMBLE in pair of bits (0 to 126 bits)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>POSTAMBLE_SEQ</name>
              <description>Packet postamble control: postamble bit sequence selection
</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYNC</name>
          <displayName>SYNC</displayName>
          <description>SYNC register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x23232323</resetValue>
          <fields>
            <field>
              <name>SYNC</name>
              <description>Synchro word.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SEC_SYNC</name>
          <displayName>SEC_SYNC</displayName>
          <description>SEC_SYNC register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SEC_SYNC</name>
              <description>Secondary Synchro word.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRC_INIT</name>
          <displayName>CRC_INIT</displayName>
          <description>CRC_INIT register</description>
          <addressOffset>0xc</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>CRC_INIT_VAL</name>
              <description>CRC intialization value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCKT_CTRL</name>
          <displayName>PCKT_CTRL</displayName>
          <description>PCKT_CTRL register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PCKT_FORMAT</name>
              <description>Packet format
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BYTE_SWAP</name>
              <description>Invert MSB-LSB transmission order (bitendianess)
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FOUR_FSK_SYM_SWAP</name>
              <description>Invert bit to symbol mapping for 4-(G)FSK
</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MODE</name>
              <description>RX mode
</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_MODE</name>
              <description>TX mode
</description>
              <bitOffset>7</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WHIT_BF_FEC</name>
              <description>Whitening before FEC feature
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WHIT_EN</name>
              <description>Whitening enable
</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WHIT_INIT</name>
              <description>Whitening initialization value.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CODING_SEL</name>
              <description>Coding / decoding selection
</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MANCHESTER_TYPE</name>
              <description>Select the Manchester encoding polarity
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_EN_4G</name>
              <description>This field is used as Interleaving enable for 802.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FEC_TYPE_4G</name>
              <description>FEC type for 802.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FCS_TYPE_4G</name>
              <description>FCS type value in header field for 802.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MOD_INTERP_EN</name>
              <description>Enable frequency interpolator (for 2-GFSK and 4-GFSK)
</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PN_SEL</name>
              <description>Select the Pseudo Random Binary Sequence (PRBS) polynomial to apply when the selected transmission mode is PN mode (TX_MODE = '11')
</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_2FSK_SYNC_MODE</name>
              <description>Force SYNC word to be formatted as a 2-(G)FSK bit steam instead of 4-(G)FSK
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFFER0_PTR</name>
          <displayName>DATABUFFER0_PTR</displayName>
          <description>DATABUFFER0_PTR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DATABUFFER0_PTR</name>
              <description>Start address to be used by the Data Buffer0
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFFER1_PTR</name>
          <displayName>DATABUFFER1_PTR</displayName>
          <description>DATABUFFER1_PTR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DATABUFFER1_PTR</name>
              <description>Start address to be used by the Data Buffer1
</description>
              <bitOffset>2</bitOffset>
              <bitWidth>30</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATABUFFER_SIZE</name>
          <displayName>DATABUFFER_SIZE</displayName>
          <description>DATABUFFER_SIZE register</description>
          <addressOffset>0x1c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>DATABUFFER_SIZE</name>
              <description>Size of the Data Buffers (Data Buffer0 and Data Buffer1) expressed in byte unit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_LEVEL_3_0</name>
          <displayName>PA_LEVEL_3_0</displayName>
          <description>PA_LEVEL_3_0 register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x230B0100</resetValue>
          <fields>
            <field>
              <name>PA_LEVEL0</name>
              <description>Output power level for first step
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL1</name>
              <description>Output power level for second step
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL2</name>
              <description>Output power level for third step
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL3</name>
              <description>Output power level for fourth step
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_LEVEL_7_4</name>
          <displayName>PA_LEVEL_7_4</displayName>
          <description>PA_LEVEL_7_4 register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x51473B2F</resetValue>
          <fields>
            <field>
              <name>PA_LEVEL4</name>
              <description>Output power level for fifth step
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL5</name>
              <description>Output power level for sixth step
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL6</name>
              <description>Output power level for seventh step
</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL7</name>
              <description>Output power level for eighth step
</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CONFIG</name>
          <displayName>PA_CONFIG</displayName>
          <description>PA_CONFIG register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0000015C</resetValue>
          <fields>
            <field>
              <name>PA_RAMP_STEP_WIDTH</name>
              <description>Step width (unit: 1/8 of bit period).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_LEVEL_MAX_INDEX</name>
              <description>Final level for power ramping (i.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_INTERP_EN</name>
              <description>Enable power level interpolator.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ASK_OOK_EN</name>
              <description>Enable the generation of the internal TXDATA signal provided to the FIR.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_MODE</name>
              <description>Select the PA topology
</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_MODE</name>
              <description>Configure the Power Amplifier (PA) mode
</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LIN_NLOG</name>
              <description>Enable/disable the linear-to- log conversion of the PA code output from Safe-ASK calibrator
</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_RAMP_ENABLE</name>
              <description>Enable the power ramping
</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IF_CTRL</name>
          <displayName>IF_CTRL</displayName>
          <description>IF_CTRL register</description>
          <addressOffset>0x2c</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x04CD04CD</resetValue>
          <fields>
            <field>
              <name>IF_OFFSET_DIG</name>
              <description>Intermediate frequency setting for the digital shift-to-baseband circuits (default: 300 kHz)
</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IF_OFFSET_ANA</name>
              <description>Intermediate frequency setting for the synthesizer configuration (default: 300 kHz).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IF_MODE</name>
              <description>Select the cutoff frequency of the AAF for the analog RFSUBG IP
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AS_QI_CTRL</name>
          <displayName>AS_QI_CTRL</displayName>
          <description>AS_QI_CTRL register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x58008028</resetValue>
          <fields>
            <field>
              <name>RSSI_THR</name>
              <description>Signal detect threshold in 1 dB resolution.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PQI_THR</name>
              <description>PQI threshold (if 0 then ).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_MODE</name>
              <description>Carrier Sense mode selection
</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SQI_EN</name>
              <description>SQI enable
</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SQI_THR</name>
              <description>SQI threshold defining the precision requested to detect the SYNC word.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AS_EQU_CTRL</name>
              <description>ISI cancellation equalizer
</description>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AS_MEAS_TIME</name>
              <description>Select the RSSI measurement duration during Antenna switching procedure</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AS_CS_BLANKING</name>
              <description>Blank received data if signal is below the CS threshold
</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IQC_CONFIG</name>
          <displayName>IQC_CONFIG</displayName>
          <description>IQC_CONFIG register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xC0000000</resetValue>
          <fields>
            <field>
              <name>IQC_CORRECT_IN</name>
              <description>Correction value Input for the IQ compensation engine (to be used as starting point or when the engine is disabled).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOAD_IQC_INIT</name>
              <description>Action bit to load the IQC_CORRECT_IN[23:0] bit field in the recirculation register when this bit is written to 1.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>REUSE_CORRECTION</name>
              <description>Reuse last correction value</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IQC_ENABLE</name>
              <description>Enable IQC</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DSSS_CTRL</name>
          <displayName>DSSS_CTRL</displayName>
          <description>DSSS_CTRL register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ACQ_WINDOW</name>
              <description>DSSS acquisition window</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SPREADING_EXP</name>
              <description>DSSS spreading exponent</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DSSS_EN</name>
              <description>DSSS mode enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACQ_HITS</name>
              <description>DSSS acquisition hits</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACQ_THR</name>
              <description>DSSS acquisition threshold</description>
              <bitOffset>10</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIM16</name>
      <description>TIM16 address block description</description>
      <groupName>TIM16</groupName>
      <baseAddress>0x40005000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x6C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TIM16</name>
        <description>TIM16 interrupt</description>
        <value>26</value>
      </interrupt>
      <registers>
        <register>
          <name>CR1</name>
          <displayName>CR1</displayName>
          <description>CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CEN</name>
              <description>CEN: Counter enable

0: Counter disabled

1: Counter enabled

Note: External clock and gated mode can work only if the CEN bit has been previously set by

software. However trigger mode can set the CEN bit automatically by hardware.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UDIS</name>
              <description>UDIS: Update disable

This bit is set and cleared by software to enable/disable UEV event generation.

0: UEV enabled. The Update (UEV) event is generated by one of the following events:

- Counter overflow/underflow

- Setting the UG bit

- Update generation through the slave mode controller

Buffered registers are then loaded with their preload values.

1: UEV disabled. The Update event is not generated, shadow registers keep their value

(ARR, PSC, CCRx). However the counter and the prescaler are reinitialized if the UG bit is

set or if a hardware reset is received from the slave mode controller.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>URS</name>
              <description>URS: Update request source

This bit is set and cleared by software to select the UEV event sources.

0: Any of the following events generate an update interrupt or DMA request if enabled.

These events can be:

- Counter overflow/underflow

- Setting the UG bit

- Update generation through the slave mode controller

1: Only counter overflow/underflow generates an update interrupt or DMA request if

enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OPM</name>
              <description>OPM: One pulse mode

0: Counter is not stopped at update event.

1: Counter stops counting at the next update event (clearing the bit CEN)</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARPE</name>
              <description>ARPE: Auto-reload preload enable

0: TIMx_ARR register is not buffered

1: TIMx_ARR register is buffered</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKD</name>
              <description>CKD[1:0]: Clock division

This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the

dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters

(TIx),

00: tDTS=tCK_INT

01: tDTS=2*tCK_INT

10: tDTS=4*tCK_INT

11: Reserved, do not program this value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UIF_REMAP</name>
              <description>UIFREMAP: UIF status bit remapping

0: No remapping. UIF status bit is not copied to TIMx_CNT register bit 31.

1: Remapping enabled. UIF status bit is copied to TIMx_CNT register bit 31.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR2</name>
          <displayName>CR2</displayName>
          <description>CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCPC</name>
              <description>CCPC: Capture/compare preloaded control

0: CCxE, CCxNE and OCxM bits are not preloaded

1: CCxE, CCxNE and OCxM bits are preloaded, after having been written, they are updated

only when COM bit is set.

Note: This bit acts only on channels that have a complementary output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCUS</name>
              <description>CCUS: Capture/compare control update selection

0: When capture/compare control bits are preloaded (CCPC=1), they are updated by setting

the COMG bit only.

1: When capture/compare control bits are preloaded (CCPC=1), they are updated by setting

the COMG bit or when an rising edge occurs on TRGI.

Note: This bit acts only on channels that have a complementary output.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCDS</name>
              <description>CCDS: Capture/compare DMA selection

0: CCx DMA request sent when CCx event occurs

1: CCx DMA requests sent when update event occurs</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMS</name>
              <description>MMS[2:0]: Master mode selection

These bits allow to select the information to be sent in master mode to slave timers for

synchronization (TRGO). The combination is as follows:

000: Reset - the UG bit from the TIMx_EGR register is used as trigger output (TRGO). If the

reset is generated by the trigger input (slave mode controller configured in reset mode) then

the signal on TRGO is delayed compared to the actual reset.

001: Enable - the Counter Enable signal CNT_EN is used as trigger output (TRGO). It is

useful to start several timers at the same time or to control a window in which a slave timer is

enable. The Counter Enable signal is generated by a logic OR between CEN control bit and

the trigger input when configured in gated mode. When the Counter Enable signal is

controlled by the trigger input, there is a delay on TRGO, except if the master/slave mode is

selected (see the MSM bit description in TIMx_SMCR register).

010: Update - The update event is selected as trigger output (TRGO). For instance a master

timer can then be used as a prescaler for a slave timer.

011: Compare Pulse - The trigger output send a positive pulse when the CC1IF flag is to be

set (even if it was already high), as soon as a capture or a compare match occurred.

(TRGO).

100: Compare - OC1REF signal is used as trigger output (TRGO).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI1S</name>
              <description>TI1S: TI1 selection

0: The TIMx_CH1 pin is connected to TI1 input

1: Reserved</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OIS1</name>
              <description>OIS1: Output Idle state 1 (OC1 output)

0: OC1=0 (after a dead-time if OC1N is implemented) when MOE=0

1: OC1=1 (after a dead-time if OC1N is implemented) when MOE=0

Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed

(LOCK bits in TIMx_BKR register).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OIS1N</name>
              <description>OIS1N: Output Idle state 1 (OC1N output)

0: OC1N=0 after a dead-time when MOE=0

1: OC1N=1 after a dead-time when MOE=0

Note: This bit can not be modified as long as LOCK level 1, 2 or 3 has been programmed

(LOCK bits in TIMx_BKR register).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMCR</name>
          <displayName>SMCR</displayName>
          <description>SMCR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SMS_2_0</name>
              <description>SMS[3:0]: Slave mode selection
When external signals are selected the active edge of the trigger signal (TRGI) is linked to
the polarity selected on the external input (see Input Control register and Control Register
description.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TS_2_0</name>
              <description>TS[4:0]: Trigger selection

This bitfield selects the trigger input to be used to synchronize the counter.

00000: Internal Trigger 0 (ITR0)

00001: Internal Trigger 1 (ITR1)

00010: Internal Trigger 2 (ITR2)

00011: Internal Trigger 3 (ITR3)

00100: TI1 Edge Detector (TI1F_ED)

00101: Filtered Timer Input 1 (TI1FP1)

Other codes: Reserved

Note: These bits must be changed only when they are not used (e.g. when SMS=000) to

avoid wrong edge detections at the transition.

See Table 79 in IUM: TIM16 register map and reset values on page 469 for more details on ITRx

meaning for each Timer.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSM</name>
              <description>MSM: Master/slave mode

0: No action

1: The effect of an event on the trigger input (TRGI) is delayed to allow a perfect

synchronization between the current timer and its slaves (through TRGO). It is useful if we

want to synchronize several timers on a single external event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMS_3</name>
              <description>SMS[3:0]: Slave mode selection. See SMS_LSB description</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TS_4_3</name>
              <description>TS[4:0]: Trigger selection. See TS_LSB description</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIER</name>
          <displayName>DIER</displayName>
          <description>DIER register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UIE</name>
              <description>UIE: Update interrupt enable

0: Update interrupt disabled

1: Update interrupt enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IE</name>
              <description>CC1IE: Capture/Compare 1 interrupt enable

0: CC1 interrupt disabled.

1: CC1 interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMIE</name>
              <description>COMIE: COM interrupt enable

0: COM interrupt disabled

1: COM interrupt enabled</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE</name>
              <description>TIE: Trigger interrupt enable

0: Trigger interrupt disabled

1: Trigger interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIE</name>
              <description>BIE: Break interrupt enable

0: Break interrupt disabled

1: Break interrupt enabled</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UDE</name>
              <description>UDE: Update DMA request enable

0: Update DMA request disabled

1: Update DMA request enabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1DE</name>
              <description>CC1DE: Capture/Compare 1 DMA request enable

0: CC1 DMA request disabled

1: CC1 DMA request enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CCUDE</name>
              <description>CCUDE: CC-Update DMA request Enable.

Not used in Blue51. Not available in IUM

0: CC-Update DMA request disabled.

1: CC-Update DMA request enabled.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TDE</name>
              <description>TDE: Trigger DMA request enable

0: Trigger DMA request disabled

1: Trigger DMA request enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BDE</name>
              <description>BDE: Break DMA request Enable.

Not used in Blue51. Not available in IUM

0: Break DMA request disabled.

1: Break DMA request enabled.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <displayName>SR</displayName>
          <description>SR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UIF</name>
              <description>UIF: Update interrupt flag

This bit is set by hardware on an update event. It is cleared by software.

0: No update occurred.

1: Update interrupt pending. This bit is set by hardware when the registers are updated:

At overflow regarding the repetition counter value (update if repetition counter = 0)

and if the UDIS=0 in the TIMx_CR1 register.

When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if

URS=0 and UDIS=0 in the TIMx_CR1 register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IF</name>
              <description>CC1IF: Capture/Compare 1 interrupt flag

If channel CC1 is configured as output:

This flag is set by hardware when the counter matches the compare value. It is cleared by

software.

0: No match.

1: The content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register.

When the contents of TIMx_CCR1 are greater than the contents of TIMx_ARR, the CC1IF

bit goes high on the counter overflow

If channel CC1 is configured as input:

This bit is set by hardware on a capture. It is cleared by software or by reading the

TIMx_CCR1 register.

0: No input capture occurred

1: The counter value has been captured in TIMx_CCR1 register (An edge has been

detected on IC1 which matches the selected polarity)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMIF</name>
              <description>COMIF: COM interrupt flag

This flag is set by hardware on a COM event (once the capture compare control bits CCxE,

CCxNE, OCxMhave been updated). It is cleared by software.

0: No COM event occurred

1: COM interrupt pending</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIF</name>
              <description>TIF: Trigger interrupt flag

This flag is set by hardware on trigger event (active edge detected on TRGI input when the

slave mode controller is enabled in all modes but gated mode, both edges in case gated

mode is selected). It is cleared by software.

0: No trigger event occurred

1: Trigger interrupt pending</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIF</name>
              <description>BIF: Break interrupt flag

This flag is set by hardware as soon as the break input goes active. It can be cleared by

software if the break input is not active.

0: No break event occurred

1: An active level has been detected on the break input</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1OF</name>
              <description>CC1OF: Capture_Compare 1 overcapture flag

This flag is set by hardware only when the corresponding channel is configured in input

capture mode. It is cleared by software by writing it to '0'.

0: No overcapture has been detected

1: The counter value has been captured in TIMx_CCR1 register while CC1IF flag was

already set</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EGR</name>
          <displayName>EGR</displayName>
          <description>EGR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UG</name>
              <description>UG: Update generation

This bit can be set by software, it is automatically cleared by hardware.

0: No action.

1: Reinitialize the counter and generates an update of the registers. Note that the prescaler

counter is cleared too (anyway the prescaler ratio is not affected).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CC1G</name>
              <description>CC1G: Capture/Compare 1 generation

This bit is set by software in order to generate an event, it is automatically cleared by

hardware.

0: No action.

1: A capture/compare event is generated on channel 1:

If channel CC1 is configured as output:

CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled.

If channel CC1 is configured as input:

The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set,

the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the

CC1IF flag was already high.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COMG</name>
              <description>COMG: Capture/Compare control update generation

This bit can be set by software, it is automatically cleared by hardware.

0: No action

1: When the CCPC bit is set, it is possible to update the CCxE, CCxNE and OCxM bits

Note: This bit acts only on channels that have a complementary output.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TG</name>
              <description>TG: Trigger generation

This bit is set by software in order to generate an event, it is automatically cleared by

hardware.

0: No action

1: The TIF flag is set in TIMx_SR register. Related interrupt or DMA transfer can occur if

enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BG</name>
              <description>BG: Break generation

This bit is set by software in order to generate an event, it is automatically cleared by

hardware.

0: No action.

1: A break event is generated. MOE bit is cleared and BIF flag is set. Related interrupt or

DMA transfer can occur if enabled.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR1</name>
          <displayName>CCMR1</displayName>
          <description>CCMR1 register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1S</name>
              <description>CC1S: Capture/Compare 1 Selection

This bit-field defines the direction of the channel (input/output) as well as the used input.

00: CC1 channel is configured as output

01: CC1 channel is configured as input, IC1 is mapped on TI1

1x: Reserved

Note: CC1S bits are writable only when the channel is OFF (CC1E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1FE</name>
              <description>OC1FE: Output Compare 1 fast enable

This bit is used to accelerate the effect of an event on the trigger in input on the CC output.

0: CC1 behaves normally depending on counter and CCR1 values even when the trigger is

ON. The minimum delay to activate CC1 output when an edge occurs on the trigger input is

5 clock cycles.

1: An active edge on the trigger input acts like a compare match on CC1 output. Then, OC

is set to the compare level independently of the result of the comparison. Delay to sample

the trigger input and to activate CC1 output is reduced to 3 clock cycles. OC1FE acts only if

the channel is configured in PWM1 or PWM2 mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1PE</name>
              <description>OC1PE: Output Compare 1 preload enable

0: Preload register on TIMx_CCR1 disabled. TIMx_CCR1 can be written at anytime, the

new value is taken in account immediately..

1: Preload register on TIMx_CCR1 enabled. Read/Write operations access the preload

register. TIMx_CCR1 preload value is loaded in the active register at each update event.

Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed

(LOCK bits in TIMx_BDTR register) and CC1S='00' (the channel is configured in

output).

Note: 2: The PWM mode can be used without validating the preload register only in one

pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1M_2_0</name>
              <description>OC1M[2:0]: Output Compare 1 mode (bits 2 to 0)
These bits define the behavior of the output reference signal OC1REF from which OC1 and
OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends
on CC1P and CC1NP bits.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1CE</name>
              <description>OC1CE: Output Compare 1 Clear Enable.

Not used in Blue51. Not available in IUM

0: OC1REF is not affected by the ocref_clr_int signal.

1: OC1REF is cleared as soon as a high level is detected on the ocref_clr_int signal.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1M_3</name>
              <description>OC1M[3]: Output Compare 1 mode (bit 3)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR1_in</name>
          <displayName>CCMR1_in</displayName>
          <description>CCMR1_in register</description>
          <alternateRegister>CCMR1</alternateRegister>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1S</name>
              <description>CC1S: Capture/Compare 1 Selection

This bit-field defines the direction of the channel (input/output) as well as the used input.

00: CC1 channel is configured as output

01: CC1 channel is configured as input, IC1 is mapped on TI1

1x: Reserved

Note: CC1S bits are writable only when the channel is OFF (CC1E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC1PSC</name>
              <description>IC1PSC: Input capture 1 prescaler

This bit-field defines the ratio of the prescaler acting on CC1 input (IC1).

The prescaler is reset as soon as CC1E='0' (TIMx_CCER register).

00: no prescaler, capture is done each time an edge is detected on the capture input.

01: capture is done once every 2 events

10: capture is done once every 4 events

11: capture is done once every 8 events</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC1F</name>
              <description>Bits 7:4 IC1F[3:0]: Input capture 1 filter

This bit-field defines the frequency used to sample TI1 input and the length of the digital filter

applied to TI1. The digital filter is made of an event counter in which N events are needed to

validate a transition on the output:

0000: No filter, sampling is done at fDTS

0001: fSAMPLING=fCK_INT, N=2

0010: fSAMPLING=fCK_INT, N=4

0011: fSAMPLING=fCK_INT, N=8

0100: fSAMPLING=fDTS/2, N=

0101: fSAMPLING=fDTS/2, N=8

0110: fSAMPLING=fDTS/4, N=6

0111: fSAMPLING=fDTS/4, N=8

1000: fSAMPLING=fDTS/8, N=6

1001: fSAMPLING=fDTS/8, N=8

1010: fSAMPLING=fDTS/16, N=5

1011: fSAMPLING=fDTS/16, N=6

1100: fSAMPLING=fDTS/16, N=8

1101: fSAMPLING=fDTS/32, N=5

1110: fSAMPLING=fDTS/32, N=6

1111: fSAMPLING=fDTS/32, N=8</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCER</name>
          <displayName>CCER</displayName>
          <description>CCER register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1E</name>
              <description>CC1E: Capture/Compare 1 output enable

CC1 channel configured as output:

0: Off - OC1 is not active. OC1 level is then function of MOE, OSSI, OSSR, OIS1, OIS1N

and CC1NE bits.

1: On - OC1 signal is output on the corresponding output pin depending on MOE, OSSI,

OSSR, OIS1, OIS1N and CC1NE bits.

CC1 channel configured as input:

This bit determines if a capture of the counter value can actually be done into the input

capture/compare register 1 (TIMx_CCR1) or not.

0: Capture disabled

1: Capture enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1P</name>
              <description>CC1P: Capture/Compare 1 output polarity

CC1 channel configured as output:

0: OC1 active high

1: OC1 active low

CC1 channel configured as input:

The CC1NP/CC1P bits select the polarity of TI1FP1 for trigger or capture operations..

00: Non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or

trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger

operation in gated mode).

01: Inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger

operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in

gated mode.

10: Reserved, do not use this configuration.

(capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted

(trigger operation in gated mode).

Note: 1. This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK

bits in TIMx_BDTR register).

2. On channels that have a complementary output, this bit is preloaded. If the CCPC bit

is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the

preloaded bit only when a Commutation event is generated.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>Non-inverted/both edges. The circuit is sensitive to both TIxFP1 rising and falling edges</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CC1NE</name>
              <description>CC1NE: Capture/Compare 1 complementary output enable

0: Off - OC1N is not active. OC1N level is then function of MOE, OSSI, OSSR, OIS1, OIS1N

and CC1E bits.

1: On - OC1N signal is output on the corresponding output pin depending on MOE, OSSI,

OSSR, OIS1, OIS1N and CC1E bits.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1NP</name>
              <description>CC1NP: Capture/Compare 1 complementary output polarity

CC1 channel configured as output:

0: OC1N active high

1: OC1N active low

CC1 channel configured as input:

This bit is used in conjunction with CC1P to define the polarity of TI1FP1. Refer

to the description of CC1P.

Note: 1. This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK

bits in TIMx_BDTR register) and CC1S='00' (the channel is configured in output).

2. On channels that have a complementary output, this bit is preloaded. If the CCPC bit

is set in the TIMx_CR2 register then the CC1NP active bit takes the new value from the

preloaded bit only when a commutation event is generated.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT</name>
          <displayName>CNT</displayName>
          <description>CNT register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CNT</name>
              <description>CNT[15:0]: Counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UIF_CPY</name>
              <description>UIFCPY: UIF Copy

This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in

TIMx_CR1 is reset, bit 31 is reserved and read as 0.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSC</name>
          <displayName>PSC</displayName>
          <description>PSC register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PSC</name>
              <description>PSC[15:0]: Prescaler value

The counter clock frequency (CK_CNT) is equal to fCK_PSC / (PSC[15:0] + 1).

PSC contains the value to be loaded in the active prescaler register at each update event

(including when the counter is cleared through UG bit of TIMx_EGR register or through trigger

controller when configured in 'reset mode').</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ARR</name>
          <displayName>ARR</displayName>
          <description>ARR register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ARR</name>
              <description>ARR[15:0]: Prescaler value

ARR is the value to be loaded in the actual auto-reload register.

Refer to the Section 22.3.1: Time-base unit on page 418 for more details about ARR update

and behavior.

The counter is blocked while the auto-reload value is null.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RCR</name>
          <displayName>RCR</displayName>
          <description>RCR register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>REP</name>
              <description>REP[7:0]: Repetition counter value

These bits allow the user to set-up the update rate of the compare registers (i.e. periodic

transfers from preload to active registers) when preload registers are enable, as well as the

update interrupt generation rate, if this interrupt is enable.

Each time the REP_CNT related downcounter reaches zero, an update event is generated

and it restarts counting from REP value. As REP_CNT is reloaded with REP value only at the

repetition update event U_RC, any write to the TIMx_RCR register is not taken in account until

the next repetition update event.

It means in PWM mode (REP+1) corresponds to the number of PWM periods in edge-aligned

mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR1</name>
          <displayName>CCR1</displayName>
          <description>CCR1 register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCR</name>
              <description>CCR1[15:0]: Capture/Compare 1 value

If channel CC1 is configured as output:

CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value).

It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit

OC1PE). Else the preload value is copied in the active capture/compare 1 register when an

update event occurs.

The active capture/compare register contains the value to be compared to the counter

TIMx_CNT and signaled on OC1 output.

If channel CC1 is configured as input:

CCR1 is the counter value transferred by the last input capture 1 event (IC1).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BDTR</name>
          <displayName>BDTR</displayName>
          <description>BDTR register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DTG</name>
              <description>DTG[7:0]: Dead-time generator setup

This bit-field defines the duration of the dead-time inserted between the complementary

outputs. DT correspond to this duration.

DTG[7:5]=0xx =&gt; DT=DTG[7:0]x tdtg with tdtg=tDTS

DTG[7:5]=10x =&gt; DT=(64+DTG[5:0])xtdtg with Tdtg=2xtDTS

DTG[7:5]=110 =&gt; DT=(32+DTG[4:0])xtdtg with Tdtg=8xtDTS

DTG[7:5]=111 =&gt; DT=(32+DTG[4:0])xtdtg with Tdtg=16xtDTS

Example if TDTS=125ns (8MHz), dead-time possible values are:

0 to 15875 ns by 125 ns steps,

16 us to 31750 ns by 250 ns steps,

32 us to 63 us by 1 us steps,

64 us to 126 us by 2 us steps

Note: This bit-field can not be modified as long as LOCK level 1, 2 or 3 has been programmed

(LOCK bits in TIMx_BDTR register).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LOCK</name>
              <description>LOCK[1:0]: Lock configuration

These bits offer a write protection against software errors.

00: LOCK OFF - No bit is write protected

01: LOCK Level 1 = DTG bits in TIMx_BDTR register, OISx and OISxN bits in TIMx_CR2

register, BKE/BKP/AOE/BKBID/BKDSRM bits in TIMx_BDTR register and all used bits in

TIMx_AF1 register can no longer be written.

10: LOCK Level 2 = LOCK Level 1 + CC Polarity bits (CCxP/CCxNP bits in TIMx_CCER

register, as long as the related channel is configured in output through the CCxS bits) as well

as OSSR and OSSI bits can no longer be written.

11: LOCK Level 3 = LOCK Level 2 + CC Control bits (OCxM and OCxPE bits in

TIMx_CCMRx registers, as long as the related channel is configured in output through the

CCxS bits) can no longer be written.

Note: The LOCK bits can be written only once after the reset. Once the TIMx_BDTR register

has been written, their content is frozen until the next reset.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSSI</name>
              <description>OSSI: Off-state selection for Idle mode

This bit is used when MOE=0 on channels configured as outputs.

See OC/OCN enable description for more details (Section 22.4.8: TIM16 capture/compare

enable register (TIMx_CCER)).

0: When inactive, OC/OCN outputs are disabled (OC/OCN enable output signal=0)

1: When inactive, OC/OCN outputs are forced first with their idle level as soon as CCxE=1 or

CCxNE=1. OC/OCN enable output signal=1)

Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK

bits in TIMx_BDTR register).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OSSR</name>
              <description>OSSR: Off-state selection for Run mode

This bit is used when MOE=1 on channels that have a complementary output which are

configured as outputs. OSSR is not implemented if no complementary output is implemented

in the timer.

See OC/OCN enable description for more details (Section 22.4.8: TIM16 capture/compare

enable register (TIMx_CCER)).

0: When inactive, OC/OCN outputs are disabled (the timer releases the output control which

is taken over by the AFIO logic, which forces a Hi-Z state)

1: When inactive, OC/OCN outputs are enabled with their inactive level as soon as CCxE=1

or CCxNE=1 (the output is still controlled by the timer).

Note: This bit can not be modified as soon as the LOCK level 2 has been programmed (LOCK

bits in TIMx_BDTR register).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKE</name>
              <description>BKE: Break enable

1; Break inputs (BRK) enabled

Note: 1. This bit cannot be modified when LOCK level 1 has been programmed (LOCK bits in

TIMx_BDTR register).

Note: 2. Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>Break inputs (BRK) disabled</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BKP</name>
              <description>BKP: Break polarity

0: Break input BRK is active low.

1: Break input BRK is active high

Note: 1. This bit can not be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register).

Note: 2. Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AOE</name>
              <description>AOE: Automatic output enable

not be active)

Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK bits

in TIMx_BDTR register).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>MOE can be set only by software</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>MOE can be set by software or automatically at the next update event (if the break input is</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MOE</name>
              <description>MOE: Main output enable

This bit is cleared asynchronously by hardware as soon as the break input is active. It is set

by software or automatically depending on the AOE bit. It is acting only on the channels

which are configured in output.

0: OC and OCN outputs are disabled or forced to idle state depending on the OSSI bit.

1: OC and OCN outputs are enabled if their respective enable bits are set (CCxE, CCxNE in

TIMx_CCER register)

See OC/OCN enable description for more details (Section 22.4.8: TIM16 capture/compare

enable register (TIMx_CCER)).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKDSRM</name>
              <description>BKDSRM: Break Disarm

0: Break input BRK is armed

1: Break input BRK is disarmed

This bit is cleared by hardware when no break source is active.

The BKDSRM bit must be set by software to release the bidirectional output control (opendrain

output in Hi-Z state) and then be polled it until it is reset by hardware, indicating that the

fault condition has disappeared.

Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKBID</name>
              <description>BKBID: Break Bidirectional

0: Break input BRK in input mode

1: Break input BRK in bidirectional mode

In the bidirectional mode (BKBID bit set to 1), the break input is configured both in input

mode and in open drain output mode. Any active break event asserts a low logic level on the

Break input to indicate an internal break event to external devices.

Note: This bit cannot be modified as long as LOCK level 1 has been programmed (LOCK bits

in TIMx_BDTR register).

Note: Any write operation to this bit takes a delay of 1 APB clock cycle to become effective.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCR</name>
          <displayName>DCR</displayName>
          <description>DCR register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DBA</name>
              <description>DBA[4:0]: DMA base address

This 5-bit field defines the base-address for DMA transfers (when read/write access are

done through the TIMx_DMAR address). DBA is defined as an offset starting from the

address of the TIMx_CR1 register.

Example:

00000: TIMx_CR1,

00001: TIMx_CR2,

00010: Reserved,

...

Example: Let us consider the following transfer: DBL = 7 transfers and DBA = TIMx_CR1. In

this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBL</name>
              <description>DBL[4:0]: DMA burst length

This 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when

a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers.

Transfers can be in half-words or in bytes (see example below).

00000: 1 transfer,

00001: 2 transfers,

00010: 3 transfers,

...

10001: 18 transfers.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAR</name>
          <displayName>DMAR</displayName>
          <description>DMAR register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAB</name>
              <description>DMAB[15:0]: DMA register for burst accesses

A read or write operation to the DMAR register accesses the register located at the address

(TIMx_CR1 address) + (DBA + DMA index) x 4

where TIMx_CR1 address is the address of the control register 1, DBA is the DMA base

address configured in TIMx_DCR register, DMA index is automatically controlled by the

DMA transfer, and ranges from 0 to DBL (DBL configured in TIMx_DCR).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OR1</name>
          <displayName>OR1</displayName>
          <description>OR1 register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>OR1_0</name>
              <description>Not used in Blue51. Not available in IUM</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI1_RMP</name>
              <description>TI1_RMP[1:0]: Timer 16 input 1 connection

This bit is set and cleared by software.

00: TIM16 TI1 is connected to GPIO

01: TIM16 TI1 is connected to LCO

10: TIM16 TI1 is connected to COMP_OUT

11: TIM16 TI1 is connected to MCO</description>
              <bitOffset>1</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AF1</name>
          <displayName>AF1</displayName>
          <description>AF1 register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x1</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>BKINE</name>
              <description>BKINE: BRK BKIN enable.

This bit enables the BKIN alternate function input for the timer's BRK input. BKIN input is

ORed with the other enabled BRK sources.

0: BKIN input disabled.

1: BKIN input enabled.

Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register)</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKCMP1E</name>
              <description>BKCMP1E: BRK COMP1 enable.

This bit enables the COMP1 for the timer's BRK input. COMP1 output is ORed with the other

enabled BRK sources.

0: COMP1 input disabled.

1: COMP1 input enabled.

Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKINP</name>
              <description>BKINP: BRK BKIN input polarity.

This bit selects the BKIN alternate function input sensitivity. It must be programmed together

with the BKP polarity bit.

0: BKIN input is active low.

1: BKIN input is active high.

Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BKCMP1P</name>
              <description>BKCMP1P: BRK COMP1 input polarity.

This bit selects the COMP1 input sensitivity. It must be programmed together with the BKP

polarity bit.

0: COMP1 input is active low.

1: COMP1 input is active high.

Note: This bit can not be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register)</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TISEL</name>
          <displayName>TISEL</displayName>
          <description>TISEL register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TI1SEL</name>
              <description>TI1SEL[3:0]: selects TI1[0] to TI1[15] input

0000: TIMx_CH1 input

Others: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIM2</name>
      <description>TIM2 address block description</description>
      <groupName>TIM2</groupName>
      <baseAddress>0x40002000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x6C</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TIM2</name>
        <description>TIM2 interrupt</description>
        <value>10</value>
      </interrupt>
      <registers>
        <register>
          <name>CR1</name>
          <displayName>CR1</displayName>
          <description>CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CEN</name>
              <description>CEN: Counter enable

0: Counter disabled

1: Counter enabled

Note: External clock and gated mode can work only if the CEN bit has been previously set by

software. However trigger mode can set the CEN bit automatically by hardware.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UDIS</name>
              <description>UDIS: Update disable

This bit is set and cleared by software to enable/disable UEV event generation.

0: UEV enabled. The Update (UEV) event is generated by one of the following events:

- Counter overflow/underflow

- Setting the UG bit

- Update generation through the slave mode controller

Buffered registers are then loaded with their preload values.

1: UEV disabled. The Update event is not generated, shadow registers keep their value

(ARR, PSC, CCRx). However the counter and the prescaler are reinitialized if the UG bit is

set or if a hardware reset is received from the slave mode controller.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>URS</name>
              <description>URS: Update request source

This bit is set and cleared by software to select the UEV event sources.

0: Any of the following events generate an update interrupt or DMA request if enabled.

These events can be:

- Counter overflow/underflow

- Setting the UG bit

- Update generation through the slave mode controller

1: Only counter overflow/underflow generates an update interrupt or DMA request if

enabled.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OPM</name>
              <description>OPM: One pulse mode

0: Counter is not stopped at update event.

1: Counter stops counting at the next update event (clearing the bit CEN)</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>DIR: Direction

0: Counter used as upcounter

1: Counter used as downcounter

Note: This bit is read only when the timer is configured in Center-aligned mode or Encoder

mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMS</name>
              <description>CMS[1:0]: Center-aligned mode selection

00: Edge-aligned mode. The counter counts up or down depending on the direction bit

(DIR).

01: Center-aligned mode 1. The counter counts up and down alternatively. Output compare

interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register) are set

only when the counter is counting down.

10: Center-aligned mode 2. The counter counts up and down alternatively. Output compare

interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register) are set

only when the counter is counting up.

11: Center-aligned mode 3. The counter counts up and down alternatively. Output compare

interrupt flags of channels configured in output (CCxS=00 in TIMx_CCMRx register) are set

both when the counter is counting up or down.

Note: It is not allowed to switch from edge-aligned mode to center-aligned mode as long as

the counter is enabled (CEN=1)</description>
              <bitOffset>5</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARPE</name>
              <description>ARPE: Auto-reload preload enable

0: TIMx_ARR register is not buffered

1: TIMx_ARR register is buffered</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKD</name>
              <description>CKD[1:0]: Clock division

This bit-field indicates the division ratio between the timer clock (CK_INT) frequency and the

dead-time and sampling clock (tDTS)used by the dead-time generators and the digital filters

(TIx),

00: tDTS=tCK_INT

01: tDTS=2*tCK_INT

10: tDTS=4*tCK_INT

11: Reserved, do not program this value</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UIF_REMAP</name>
              <description>UIFREMAP: UIF status bit remapping

0: No remapping. UIF status bit is not copied to TIMx_CNT register bit 31.

1: Remapping enabled. UIF status bit is copied to TIMx_CNT register bit 31.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR2</name>
          <displayName>CR2</displayName>
          <description>CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCDS</name>
              <description>CCDS: Capture/compare DMA selection

0: CCx DMA request sent when CCx event occurs

1: CCx DMA requests sent when update event occurs</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MMS</name>
              <description>MMS[2:0]: Master mode selection

These bits allow to select the information to be sent in master mode to slave timers for

synchronization (TRGO). The combination is as follows:

000: Reset - the UG bit from the TIMx_EGR register is used as trigger output (TRGO). If the

reset is generated by the trigger input (slave mode controller configured in reset mode) then

the signal on TRGO is delayed compared to the actual reset.

001: Enable - the Counter enable signal, CNT_EN, is used as trigger output (TRGO). It is

useful to start several timers at the same time or to control a window in which a slave timer is

enabled. The Counter Enable signal is generated by a logic OR between CEN control bit

and the trigger input when configured in gated mode.

When the Counter Enable signal is controlled by the trigger input, there is a delay on TRGO,

except if the master/slave mode is selected (see the MSM bit description in TIMx_SMCR

register).

010: Update - The update event is selected as trigger output (TRGO). For instance a master

timer can then be used as a prescaler for a slave timer.

011: Compare Pulse - The trigger output send a positive pulse when the CC1IF flag is to be

set (even if it was already high), as soon as a capture or a compare match occurred.

(TRGO)

100: Compare - OC1REF signal is used as trigger output (TRGO)

101: Compare - OC2REF signal is used as trigger output (TRGO)

110: Compare - OC3REF signal is used as trigger output (TRGO)

111: Compare - OC4REF signal is used as trigger output (TRGO)

Note: The clock of the slave timer must be enabled prior to receive events from the master

timer, and must not be changed on-the-fly while triggers are received from the master

timer.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI1S</name>
              <description>TI1S: TI1 selection

0: The TIMx_CH1 pin is connected to TI1 input.

1: The TIMx_CH1, CH2 and CH3 pins are connected to the TI1 input (XOR combination)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMCR</name>
          <displayName>SMCR</displayName>
          <description>SMCR register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>SMS_2_0</name>
              <description>SMS: Slave mode selection

When external signals are selected the active edge of the trigger signal (TRGI) is linked to

the polarity selected on the external input (see Input Control register and Control Register

description.

0000: Slave mode disabled - if CEN = '1' then the prescaler is clocked directly by the internal

clock.

0001: Encoder mode 1 - Counter counts up/down on TI2FP2 edge depending on TI1FP1

level.

0010: Encoder mode 2 - Counter counts up/down on TI1FP1 edge depending on TI2FP2

level.

0011: Encoder mode 3 - Counter counts up/down on both TI1FP1 and TI2FP2 edges

depending on the level of the other input.

0100: Reset Mode - Rising edge of the selected trigger input (TRGI) reinitializes the counter

and generates an update of the registers.

0101: Gated Mode - The counter clock is enabled when the trigger input (TRGI) is high. The

counter stops (but is not reset) as soon as the trigger becomes low. Both start and stop of

the counter are controlled.

0110: Trigger Mode - The counter starts at a rising edge of the trigger TRGI (but it is not

reset). Only the start of the counter is controlled.

0111: External Clock Mode 1 - Rising edges of the selected trigger (TRGI) clock the counter.

1000: Combined reset + trigger mode - Rising edge of the selected trigger input (TRGI)

reinitializes the counter, generates an update of the registers and starts the counter.

Codes above 1000: Reserved.

Note: The gated mode must not be used if TI1F_ED is selected as the trigger input

(TS='100'). Indeed, TI1F_ED outputs 1 pulse for each transition on TI1F, whereas the

gated mode checks the level of the trigger signal.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OCCS</name>
              <description>OCCS: OCREF clear selection

This bit is used to select the OCREF clear source.

0: OCREF_CLR_INT is connected to the OCREF_CLR input (stuck at 0 so no effect)

1: OCREF_CLR_INT is connected to ETRF</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TS_2_0</name>
              <description>TS[4:0]: Trigger selection

This bit-field selects the trigger input to be used to synchronize the counter.

00000: Internal Trigger 0 (ITR0)

00001: Internal Trigger 1 (ITR1)

00010: Internal Trigger 2 (ITR2)

00011: Internal Trigger 3 (ITR3)

00100: TI1 Edge Detector (TI1F_ED)

00101: Filtered Timer Input 1 (TI1FP1)

00110: Filtered Timer Input 2 (TI2FP2)

00111: External Trigger input (ETRF)

Others: Reserved

See Table Note:: TIM2 internal trigger connection on page 395 for more details on ITRx

meaning for each Timer.

Note: These bits must be changed only when they are not used (e.g. when SMS=000) to

avoid wrong edge detections at the transition.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSM</name>
              <description>MSM: Master/Slave mode

0: No action

1: The effect of an event on the trigger input (TRGI) is delayed to allow a perfect

synchronization between the current timer and its slaves (through TRGO). It is useful if we

want to synchronize several timers on a single external event.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ETF</name>
              <description>ETF[3:0]: External trigger filter

This bit-field then defines the frequency used to sample ETRP signal and the length of the

digital filter applied to ETRP. The digital filter is made of an event counter in which N events

are needed to validate a transition on the output:

0000: No filter, sampling is done at fDTS

0001: fSAMPLING=fCK_INT, N=2

0010: fSAMPLING=fCK_INT, N=4

0011: fSAMPLING=fCK_INT, N=8

0100: fSAMPLING=fDTS/2, N=6

0101: fSAMPLING=fDTS/2, N=8

0110: fSAMPLING=fDTS/4, N=6

0111: fSAMPLING=fDTS/4, N=8

1000: fSAMPLING=fDTS/8, N=6

1001: fSAMPLING=fDTS/8, N=8

1010: fSAMPLING=fDTS/16, N=5

1011: fSAMPLING=fDTS/16, N=6

1100: fSAMPLING=fDTS/16, N=8

1101: fSAMPLING=fDTS/32, N=5

1110: fSAMPLING=fDTS/32, N=6

1111: fSAMPLING=fDTS/32, N=8</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ETPS</name>
              <description>ETPS[1:0]: External trigger prescaler

External trigger signal ETRP frequency must be at most 1/4 of TIMxCLK frequency. A

prescaler can be enabled to reduce ETRP frequency. It is useful when inputting fast external

clocks.

00: Prescaler OFF

01: ETRP frequency divided by 2

10: ETRP frequency divided by 4

11: ETRP frequency divided by 8</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ECE</name>
              <description>ECE: External clock enable

This bit enables External clock mode 2.

0: External clock mode 2 disabled

1: External clock mode 2 enabled. The counter is clocked by any active edge on the ETRF

signal.

Note: 1: Setting the ECE bit has the same effect as selecting external clock mode 1 with

TRGI connected to ETRF (SMS=111 and TS=111).

Note: 2: It is possible to simultaneously use external clock mode 2 with the following slave

modes: reset mode, gated mode and trigger mode. Nevertheless, TRGI must not be

connected to ETRF in this case (TS bits must not be 111).

Note: 3: If external clock mode 1 and external clock mode 2 are enabled at the same time,

the external clock input is ETRF.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ETP</name>
              <description>ETP: External trigger polarity

This bit selects whether ETR or ETR is used for trigger operations

0: ETR is non-inverted, active at high level or rising edge.

1: ETR is inverted, active at low level or falling edge.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SMS_3</name>
              <description>SMS[3]: Slave mode selection - bit 3

Refer to SMS description - bits2:0</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TS_4_3</name>
              <description>Trigger selection. See TS_2_0_ description</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIER</name>
          <displayName>DIER</displayName>
          <description>DIER register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UIE</name>
              <description>UIE: Update interrupt enable

0: Update interrupt disabled

1: Update interrupt enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IE</name>
              <description>CC1IE: Capture/Compare 1 interrupt enable

0: CC1 interrupt disabled.

1: CC1 interrupt enabled</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2IE</name>
              <description>CC2IE: Capture/Compare 2 interrupt enable

0: CC2 interrupt disabled

1: CC2 interrupt enabled</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3IE</name>
              <description>CC3IE: Capture/Compare 3 interrupt enable

0: CC3 interrupt disabled

1: CC3 interrupt enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4IE</name>
              <description>CC4IE: Capture/Compare 4 interrupt enable

0: CC4 interrupt disabled

1: CC4 interrupt enabled</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE</name>
              <description>TIE: Trigger interrupt enable

0: Trigger interrupt disabled

1: Trigger interrupt enabled</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UDE</name>
              <description>UDE: Update DMA request enable

0: Update DMA request disabled

1: Update DMA request enabled</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1DE</name>
              <description>CC1DE: Capture/Compare 1 DMA request enable

0: CC1 DMA request disabled

1: CC1 DMA request enabled</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2DE</name>
              <description>CC2DE: Capture/Compare 2 DMA request enable

0: CC2 DMA request disabled

1: CC2 DMA request enabled</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3DE</name>
              <description>CC3DE: Capture/Compare 3 DMA request enable

0: CC3 DMA request disabled

1: CC3 DMA request enabled</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4DE</name>
              <description>CC4DE: Capture/Compare 4 DMA request enable

0: CC4 DMA request disabled

1: CC4 DMA request enabled</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TDE</name>
              <description>TDE: Trigger DMA request enable

0: Trigger DMA request disabled

1: Trigger DMA request enabled</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SR</name>
          <displayName>SR</displayName>
          <description>SR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UIF</name>
              <description>UIF: Update interrupt flag

This bit is set by hardware on an update event. It is cleared by software.

0: No update occurred.

1: Update interrupt pending. This bit is set by hardware when the registers are updated:

At overflow regarding the repetition counter value (update if repetition counter = 0)

and if the UDIS=0 in the TIMx_CR1 register.

When CNT is reinitialized by software using the UG bit in TIMx_EGR register, if

URS=0 and UDIS=0 in the TIMx_CR1 register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1IF</name>
              <description>CC1IF: Capture/Compare 1 interrupt flag

If channel CC1 is configured as output:

This flag is set by hardware when the counter matches the compare value, with some

exception in center-aligned mode (refer to the CMS bits in the TIMx_CR1 register

description). It is cleared by software.

0: No match.

1: The content of the counter TIMx_CNT matches the content of the TIMx_CCR1 register.

When the contents of TIMx_CCR1 are greater than the contents of TIMx_ARR, the CC1IF

bit goes high on the counter overflow (in upcounting and up/down-counting modes) or

underflow (in downcounting mode)

If channel CC1 is configured as input:

This bit is set by hardware on a capture. It is cleared by software or by reading the

TIMx_CCR1 register.

0: No input capture occurred

1: The counter value has been captured in TIMx_CCR1 register (An edge has been

detected on IC1 which matches the selected polarity)</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2IF</name>
              <description>CC2IF: Capture/Compare 2 interrupt flag

refer to CC1IF description</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3IF</name>
              <description>CC3IF: Capture/Compare 3 interrupt flag

refer to CC1IF description</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4IF</name>
              <description>CC4IF: Capture/Compare 4 interrupt flag

refer to CC1IF description</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIF</name>
              <description>TIF: Trigger interrupt flag

This flag is set by hardware on trigger event (active edge detected on TRGI input when the

slave mode controller is enabled in all modes but gated mode. It is set when the counter

starts or stops when gated mode is selected. It is cleared by software..

0: No trigger event occurred.

1: Trigger interrupt pending.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1OF</name>
              <description>CC1OF: Capture/Compare 1 overcapture flag

This flag is set by hardware only when the corresponding channel is configured in input

capture mode. It is cleared by software by writing it to '0'.

0: No overcapture has been detected

1: The counter value has been captured in TIMx_CCR1 register while CC1IF flag was

already set</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2OF</name>
              <description>CC2OF: Capture/Compare 2 overcapture flag

refer to CC1OF description</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3OF</name>
              <description>CC3OF: Capture/Compare 3 overcapture flag

refer to CC1OF description</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4OF</name>
              <description>CC4OF: Capture/Compare 4 overcapture flag

refer to CC1OF description</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EGR</name>
          <displayName>EGR</displayName>
          <description>EGR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>UG</name>
              <description>UG: Update generation

This bit can be set by software, it is automatically cleared by hardware.

0: No action.

1: Reinitialize the counter and generates an update of the registers. Note that the prescaler

counter is cleared too (anyway the prescaler ratio is not affected).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CC1G</name>
              <description>CC1G: Capture/Compare 1 generation

This bit is set by software in order to generate an event, it is automatically cleared by

hardware.

0: No action.

1: A capture/compare event is generated on channel 1:

If channel CC1 is configured as output:

CC1IF flag is set, Corresponding interrupt or DMA request is sent if enabled.

If channel CC1 is configured as input:

The current value of the counter is captured in TIMx_CCR1 register. The CC1IF flag is set,

the corresponding interrupt or DMA request is sent if enabled. The CC1OF flag is set if the

CC1IF flag was already high.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CC2G</name>
              <description>CC2G: Capture/Compare 2 generation

refer to CC1G description</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CC3G</name>
              <description>CC3G: Capture/Compare 3 generation

refer to CC1G description</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CC4G</name>
              <description>CC4G: Capture/Compare 4 generation

refer to CC1G description</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TG</name>
              <description>TG: Trigger generation

This bit is set by software in order to generate an event, it is automatically cleared by

hardware.

0: No action

1: The TIF flag is set in TIMx_SR register. Related interrupt can occur if enabled.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR1</name>
          <displayName>CCMR1</displayName>
          <description>CCMR1 register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1S</name>
              <description>CC1S: Capture/Compare 1 Selection

This bit-field defines the direction of the channel (input/output) as well as the used input.

00: CC1 channel is configured as output

01: CC1 channel is configured as input, IC1 is mapped on TI1

1x: Reserved

Note: CC1S bits are writable only when the channel is OFF (CC1E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1FE</name>
              <description>OC1FE: Output Compare 1 fast enable

This bit is used to accelerate the effect of an event on the trigger in input on the CC output.

0: CC1 behaves normally depending on counter and CCR1 values even when the trigger is

ON. The minimum delay to activate CC1 output when an edge occurs on the trigger input is

5 clock cycles.

1: An active edge on the trigger input acts like a compare match on CC1 output. Then, OC

is set to the compare level independently of the result of the comparison. Delay to sample

the trigger input and to activate CC1 output is reduced to 3 clock cycles. OC1FE acts only if

the channel is configured in PWM1 or PWM2 mode.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1PE</name>
              <description>OC1PE: Output Compare 1 preload enable

0: Preload register on TIMx_CCR1 disabled. TIMx_CCR1 can be written at anytime, the

new value is taken in account immediately.

1: Preload register on TIMx_CCR1 enabled. Read/Write operations access the preload

register. TIMx_CCR1 preload value is loaded in the active register at each update event.

Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed

(LOCK bits in TIMx_BDTR register) and CC1S='00' (the channel is configured in

output).

Note: 2: The PWM mode can be used without validating the preload register only in one

pulse mode (OPM bit set in TIMx_CR1 register). Else the behavior is not guaranteed.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1M_2_0</name>
              <description>OC1M: Output Compare 1 mode

These bits define the behavior of the output reference signal OC1REF from which OC1 and

OC1N are derived. OC1REF is active high whereas OC1 and OC1N active level depends

on CC1P and CC1NP bits.

0000: Frozen - The comparison between the output compare register TIMx_CCR1 and the

counter TIMx_CNT has no effect on the outputs.(this mode is used to generate a timing

base).

0001: Set channel 1 to active level on match. OC1REF signal is forced high when the

counter TIMx_CNT matches the capture/compare register 1 (TIMx_CCR1).

0010: Set channel 1 to inactive level on match. OC1REF signal is forced low when the

counter TIMx_CNT matches the capture/compare register 1 (TIMx_CCR1).

0011: Toggle - OC1REF toggles when TIMx_CNT=TIMx_CCR1.

0100: Force inactive level - OC1REF is forced low.

0101: Force active level - OC1REF is forced high.

0110: PWM mode 1 - In upcounting, channel 1 is active as long as TIMx_CNT TIMx_CCR1

else inactive. In downcounting, channel 1 is inactive (OC1REF='0') as long as

TIMx_CNT&gt;TIMx_CCR1 else active (OC1REF='1').

0111: PWM mode 2 - In upcounting, channel 1 is inactive as long as

TIMx_CNT TIMx_CCR1 else active. In downcounting, channel 1 is active as long as

TIMx_CNT&gt;TIMx_CCR1 else inactive.

1000: Retrigerrable OPM mode 1 - In up-counting mode, the channel is active until a trigger

event is detected (on TRGI signal). Then, a comparison is performed as in PWM mode 1

and the channels becomes active again at the next update. In down-counting mode, the

channel is inactive until a trigger event is detected (on TRGI signal). Then, a comparison is

performed as in PWM mode 1 and the channels becomes inactive again at the next update.

1001: Retrigerrable OPM mode 2 - In up-counting mode, the channel is inactive until a

trigger event is detected (on TRGI signal). Then, a comparison is performed as in PWM

mode 2 and the channels becomes inactive again at the next update. In down-counting

mode, the channel is active until a trigger event is detected (on TRGI signal). Then, a

comparison is performed as in PWM mode 1 and the channels becomes active again at the

next update.

1010: Reserved

1011: Reserved

1100: Combined PWM mode 1 - OC1REF has the same behavior as in PWM mode 1.

OC1REFC is the logical OR between OC1REF and OC2REF.

1101: Combined PWM mode 2 - OC1REF has the same behavior as in PWM mode 2.

OC1REFC is the logical AND between OC1REF and OC2REF

1110: Asymmetric PWM mode 1 - OC1REF has the same behavior as in PWM mode 1.

OC1REFC outputs OC1REF when the counter is counting up, OC2REF when it is counting

down.

1111: Asymmetric PWM mode 2 - OC1REF has the same behavior as in PWM mode 2.

OC1REFC outputs OC1REF when the counter is counting up, OC2REF when it is counting

down.

Note: 1: These bits can not be modified as long as LOCK level 3 has been programmed

(LOCK bits in TIMx_BDTR register) and CC1S='00' (the channel is configured in

output).

Note: 2: In PWM mode, the OCREF level changes only when the result of the comparison

changes or when the output compare mode switches from 'frozen' mode to 'PWM'

mode.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1CE</name>
              <description>OC1CE: Output Compare 1 Clear Enable

0: OC1Ref is not affected by the ETRF Input

1: OC1Ref is cleared as soon as a High level is detected on ETRF input</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2S</name>
              <description>CC2S[1:0]: Capture/Compare 2 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC2 channel is configured as output

01: CC2 channel is configured as input, IC2 is mapped on TI2

10: CC2 channel is configured as input, IC2 is mapped on TI1

11: CC2 channel is configured as input, IC2 is mapped on TRC. This mode is working only if

an internal trigger input is selected through the TS bit (TIMx_SMCR register)

Note: CC2S bits are writable only when the channel is OFF (CC2E = '0' in TIMx_CCER).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2FE</name>
              <description>OC2FE: Output Compare 2 fast enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2PE</name>
              <description>OC2PE: Output Compare 2 preload enable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2M_2_0</name>
              <description>OC2M[2:0]: Output Compare 2 mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2CE</name>
              <description>OC2CE: Output Compare 2 clear enable</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC1M_3</name>
              <description>OC1M[3]: Output Compare 1 mode (bit 3)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC2M_3</name>
              <description>OC2M[3]: Output Compare 2 mode (bit 3)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR1_in</name>
          <displayName>CCMR1_in</displayName>
          <description>CCMR1_in register</description>
          <alternateRegister>CCMR1</alternateRegister>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1S</name>
              <description>CC1S: Capture/Compare 1 Selection

This bit-field defines the direction of the channel (input/output) as well as the used input.

00: CC1 channel is configured as output

01: CC1 channel is configured as input, IC1 is mapped on TI1

1x: Reserved

Note: CC1S bits are writable only when the channel is OFF (CC1E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC1PSC</name>
              <description>IC1PSC: Input capture 1 prescaler

This bit-field defines the ratio of the prescaler acting on CC1 input (IC1).

The prescaler is reset as soon as CC1E='0' (TIMx_CCER register).

00: no prescaler, capture is done each time an edge is detected on the capture input.

01: capture is done once every 2 events

10: capture is done once every 4 events

11: capture is done once every 8 events</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC1F</name>
              <description>Bits 7:4 IC1F[3:0]: Input capture 1 filter

This bit-field defines the frequency used to sample TI1 input and the length of the digital filter

applied to TI1. The digital filter is made of an event counter in which N events are needed to

validate a transition on the output:

0000: No filter, sampling is done at fDTS

0001: fSAMPLING=fCK_INT, N=2

0010: fSAMPLING=fCK_INT, N=4

0011: fSAMPLING=fCK_INT, N=8

0100: fSAMPLING=fDTS/2, N=

0101: fSAMPLING=fDTS/2, N=8

0110: fSAMPLING=fDTS/4, N=6

0111: fSAMPLING=fDTS/4, N=8

1000: fSAMPLING=fDTS/8, N=6

1001: fSAMPLING=fDTS/8, N=8

1010: fSAMPLING=fDTS/16, N=5

1011: fSAMPLING=fDTS/16, N=6

1100: fSAMPLING=fDTS/16, N=8

1101: fSAMPLING=fDTS/32, N=5

1110: fSAMPLING=fDTS/32, N=6

1111: fSAMPLING=fDTS/32, N=8</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2S</name>
              <description>CC2S: Capture/Compare 2 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC2 channel is configured as output

01: CC2 channel is configured as input, IC2 is mapped on TI2

10: CC2 channel is configured as input, IC2 is mapped on TI1

11: CC2 channel is configured as input, IC2 is mapped on TRC. This mode is working only if an

internal trigger input is selected through TS bit (TIMx_SMCR register)

Note: CC2S bits are writable only when the channel is OFF (CC2E = '0' in TIMx_CCER).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC2PSC</name>
              <description>IC2PSC[1:0]: Input capture 2 prescaler</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC2F</name>
              <description>IC2F: Input capture 2 filter</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR2</name>
          <displayName>CCMR2</displayName>
          <description>CCMR2 register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC3S</name>
              <description>CC3S: Capture/Compare 3 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC3 channel is configured as output

01: CC3 channel is configured as input, IC3 is mapped on TI3

10: CC3 channel is configured as input, IC3 is mapped on TI4

11: CC3 channel is configured as input, IC3 is mapped on TRC. This mode is working only if

an internal trigger input is selected through TS bit (TIMx_SMCR register)

Note: CC3S bits are writable only when the channel is OFF (CC3E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3FE</name>
              <description>OC3FE: Output compare 3 fast enable</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3PE</name>
              <description>OC3PE: Output compare 3 preload enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3M_2_0</name>
              <description>OC3M: Output compare 3 mode</description>
              <bitOffset>4</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3CE</name>
              <description>OC3CE: Output compare 3 clear enable</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4S</name>
              <description>CC4S: Capture/Compare 4 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC4 channel is configured as output

01: CC4 channel is configured as input, IC4 is mapped on TI4

10: CC4 channel is configured as input, IC4 is mapped on TI3

11: CC4 channel is configured as input, IC4 is mapped on TRC. This mode is working only if

an internal trigger input is selected through TS bit (TIMx_SMCR register)

Note: CC4S bits are writable only when the channel is OFF (CC4E = '0' in TIMx_CCER).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4FE</name>
              <description>OC4FE: Output Compare 4 fast enable</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4PE</name>
              <description>OC4PE: Output Compare 4 preload enable</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4M_2_0</name>
              <description>OC4M[2:0]: Output Compare 4 mode</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4CE</name>
              <description>OC4CE: Output Compare 4 clear enable</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC3M_3</name>
              <description>OC3M[3]: Output Compare 3 mode (bit 3)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OC4M_3</name>
              <description>OC4M[3]: Output Compare 4 mode (bit 3)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCMR2_in</name>
          <displayName>CCMR2_in</displayName>
          <description>CCMR2_in register</description>
          <alternateRegister>CCMR2</alternateRegister>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC3S</name>
              <description>CC3S: Capture/compare 3 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC3 channel is configured as output

01: CC3 channel is configured as input, IC3 is mapped on TI3

10: CC3 channel is configured as input, IC3 is mapped on TI4

11: CC3 channel is configured as input, IC3 is mapped on TRC. This mode is working only if

an internal trigger input is selected through TS bit (TIMx_SMCR register)

Note: CC3S bits are writable only when the channel is OFF (CC3E = '0' in TIMx_CCER).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC3PSC</name>
              <description>IC3PSC: Input capture 3 prescaler</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC3F</name>
              <description>IC3F: Input capture 3 filter</description>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4S</name>
              <description>CC4S: Capture/Compare 4 selection

This bit-field defines the direction of the channel (input/output) as well as the used input. 

00: CC4 channel is configured as output

01: CC4 channel is configured as input, IC4 is mapped on TI4

10: CC4 channel is configured as input, IC4 is mapped on TI3

11: CC4 channel is configured as input, IC4 is mapped on TRC. This mode is working only if

an internal trigger input is selected through TS bit (TIMx_SMCR register)

Note: CC4S bits are writable only when the channel is OFF (CC4E = '0' in TIMx_CCER).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC4PSC</name>
              <description>IC4PSC: Input capture 4 prescaler</description>
              <bitOffset>10</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IC4F</name>
              <description>IC4F: Input capture 4 filter</description>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCER</name>
          <displayName>CCER</displayName>
          <description>CCER register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CC1E</name>
              <description>CC1E: Capture/Compare 1 output enable

CC1 channel configured as output:

0: Off - OC1 is not active. OC1 level is then function of MOE, OSSI, OSSR, OIS1, OIS1N

and CC1NE bits.

1: On - OC1 signal is output on the corresponding output pin depending on MOE, OSSI,

OSSR, OIS1, OIS1N and CC1NE bits.

CC1 channel configured as input:

This bit determines if a capture of the counter value can actually be done into the input

capture/compare register 1 (TIMx_CCR1) or not.

0: Capture disabled

1: Capture enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1P</name>
              <description>CC1P: Capture/Compare 1 output polarity

CC1 channel configured as output:

0: OC1 active high

1: OC1 active low

CC1 channel configured as input:

The CC1NP/CC1P bits select the polarity of TI1FP1 for trigger or capture operations.

00: Non-inverted/rising edge. The circuit is sensitive to TIxFP1 rising edge (capture or

trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted (trigger

operation in gated mode).

01: Inverted/falling edge. The circuit is sensitive to TIxFP1 falling edge (capture or trigger

operations in reset, external clock or trigger mode), TIxFP1 is inverted (trigger operation in

gated mode.

10: Reserved, do not use this configuration.

11: Non-inverted/both edges. The circuit is sensitive to both TIxFP1 rising and falling edges

(capture or trigger operations in reset, external clock or trigger mode), TIxFP1 is not inverted

(trigger operation in gated mode).

Note: 1. This bit is not writable as soon as LOCK level 2 or 3 has been programmed (LOCK

bits in TIMx_BDTR register).

2. On channels that have a complementary output, this bit is preloaded. If the CCPC bit

is set in the TIMx_CR2 register then the CC1P active bit takes the new value from the

preloaded bit only when a Commutation event is generated.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC1NP</name>
              <description>CC1NP: Capture/Compare 1 Complementary output Polarity.

This field is not used in Blue51. Not available in IUM

Note: This bit is no longer writeable as soon as LOCK level 2 or 3 has been programmed (LOCK

bits in GPT_BDTR register) and CC1S='00' (the channel is configured in output).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>OC1N active high.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>OC1N active low.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CC2E</name>
              <description>CC2E: Capture/Compare 2 output enable

refer to CC1E description</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2P</name>
              <description>CC2P: Capture/Compare 2 output polarity

refer to CC1P description</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC2NP</name>
              <description>CC2NP: Capture/Compare 2 Complementary output Polarity.

This field is not used in Blue51. Not available in IUM

refer to CC1NP description</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3E</name>
              <description>CC3E: Capture/Compare 3 output enable

refer to CC1E description</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3P</name>
              <description>CC3P: Capture/Compare 3 output polarity

refer to CC1P description</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC3NP</name>
              <description>CC3NP: Capture/Compare 3 Complementary output Polarity.

This field is not used in Blue51. Not available in IUM

refer to CC1NP description</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4E</name>
              <description>CC4E: Capture/Compare 4 output enable

refer to CC1E description</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4P</name>
              <description>CC4P: Capture/Compare 4 output polarity

refer to CC1P description</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CC4NP</name>
              <description>CC4NP: Capture/Compare 4 Complementary output Polarity.

This field is not used in Blue51. Not available in IUM

refer to CC1NP description</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT</name>
          <displayName>CNT</displayName>
          <description>CNT register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CNT</name>
              <description>CNT[15:0]: Counter value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>UIF_CPY</name>
              <description>UIFCPY: UIF Copy

This bit is a read-only copy of the UIF bit of the TIMx_ISR register. If the UIFREMAP bit in

TIMx_CR1 is reset, bit 31 is reserved and read as 0.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSC</name>
          <displayName>PSC</displayName>
          <description>PSC register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PSC</name>
              <description>PSC[15:0]: Prescaler value

The counter clock frequency (CK_CNT) is equal to fCK_PSC / (PSC[15:0] + 1).

PSC contains the value to be loaded in the active prescaler register at each update event

(including when the counter is cleared through UG bit of TIMx_EGR register or through trigger

controller when configured in 'reset mode').</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ARR</name>
          <displayName>ARR</displayName>
          <description>ARR register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ARR</name>
              <description>ARR[15:0]: Prescaler value

ARR is the value to be loaded in the actual auto-reload register.

Refer to the Section 22.3.1: Time-base unit on page 418 for more details about ARR update

and behavior.

The counter is blocked while the auto-reload value is null.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RCR</name>
          <displayName>RCR</displayName>
          <description>RCR register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>REP</name>
              <description>REP[7:0]: Repetition counter value

These bits allow the user to set-up the update rate of the compare registers (i.e. periodic

transfers from preload to active registers) when preload registers are enable, as well as the

update interrupt generation rate, if this interrupt is enable.

Each time the REP_CNT related downcounter reaches zero, an update event is generated

and it restarts counting from REP value. As REP_CNT is reloaded with REP value only at the

repetition update event U_RC, any write to the TIMx_RCR register is not taken in account until

the next repetition update event.

It means in PWM mode (REP+1) corresponds to the number of PWM periods in edge-aligned

mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR1</name>
          <displayName>CCR1</displayName>
          <description>CCR1 register</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCR1</name>
              <description>CCR1[15:0]: Capture/Compare 1 value

If channel CC1 is configured as output:

CCR1 is the value to be loaded in the actual capture/compare 1 register (preload value).

It is loaded permanently if the preload feature is not selected in the TIMx_CCMR1 register (bit

OC1PE). Else the preload value is copied in the active capture/compare 1 register when an

update event occurs.

The active capture/compare register contains the value to be compared to the counter

TIMx_CNT and signaled on OC1 output.

If channel CC1 is configured as input:

CCR1 is the counter value transferred by the last input capture 1 event (IC1).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR2</name>
          <displayName>CCR2</displayName>
          <description>CCR2 register</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCR2</name>
              <description>CCR2[15:0]: Capture/Compare 2 value

If channel CC2 is configured as output:

CCR2 is the value to be loaded in the actual capture/compare 2 register (preload value).

It is loaded permanently if the preload feature is not selected in the TIMx_CCMR2 register (bit

OC2PE). Else the preload value is copied in the active capture/compare 2 register when an

update event occurs.

The active capture/compare register contains the value to be compared to the counter

TIMx_CNT and signaled on OC2 output.

If channel CC2 is configured as input:

CCR2 is the counter value transferred by the last input capture 2 event (IC2).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR3</name>
          <displayName>CCR3</displayName>
          <description>CCR3 register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCR3</name>
              <description>CCR3[15:0]: Capture/Compare 3 value

If channel CC3 is configured as output:

CCR3 is the value to be loaded in the actual capture/compare 3 register (preload value).

It is loaded permanently if the preload feature is not selected in the TIMx_CCMR3 register (bit

OC3PE). Else the preload value is copied in the active capture/compare 3 register when an

update event occurs.

The active capture/compare register contains the value to be compared to the counter

TIMx_CNT and signaled on OC3 output.

If channel CC3 is configured as input:

CCR3 is the counter value transferred by the last input capture 3 event (IC3).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCR4</name>
          <displayName>CCR4</displayName>
          <description>CCR4 register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CCR4</name>
              <description>CCR4[15:0]: Capture/Compare 4 value

If channel CC4 is configured as output:

CCR4 is the value to be loaded in the actual capture/compare 4 register (preload value).

It is loaded permanently if the preload feature is not selected in the TIMx_CCMR4 register (bit

OC4PE). Else the preload value is copied in the active capture/compare 4 register when an

update event occurs.

The active capture/compare register contains the value to be compared to the counter

TIMx_CNT and signaled on OC4 output.

If channel CC4 is configured as input:

CCR4 is the counter value transferred by the last input capture 4 event (IC4).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCR</name>
          <displayName>DCR</displayName>
          <description>DCR register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DBA</name>
              <description>DBA[4:0]: DMA base address

This 5-bit field defines the base-address for DMA transfers (when read/write access are

done through the TIMx_DMAR address). DBA is defined as an offset starting from the

address of the TIMx_CR1 register.

Example:

00000: TIMx_CR1,

00001: TIMx_CR2,

00010: Reserved,

...

Example: Let us consider the following transfer: DBL = 7 transfers and DBA = TIMx_CR1. In

this case the transfer is done to/from 7 registers starting from the TIMx_CR1 address.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBL</name>
              <description>DBL[4:0]: DMA burst length

This 5-bit field defines the length of DMA transfers (the timer recognizes a burst transfer when

a read or a write access is done to the TIMx_DMAR address), i.e. the number of transfers.

Transfers can be in half-words or in bytes (see example below).

00000: 1 transfer,

00001: 2 transfers,

00010: 3 transfers,

...

10001: 18 transfers.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMAR</name>
          <displayName>DMAR</displayName>
          <description>DMAR register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DMAB</name>
              <description>DMAB[15:0]: DMA register for burst accesses

A read or write operation to the DMAR register accesses the register located at the address

(TIM2_CR1 address) + (DBA + DMA index) x 4

where TIM2_CR1 address is the address of the control register 1, DBA is the DMA base

address configured in TIM2_DCR register, DMA index is automatically controlled by the

DMA transfer, and ranges from 0 to DBL (DBL configured in TIM2_DCR).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OR1</name>
          <displayName>OR1</displayName>
          <description>OR1 register</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>ETR_RMP</name>
              <description>ETR_RMP: ETR remapping capability

0: TIMx_ETR is not connected to ADC AWD (must be selected when the ETR comes from

the ETR input pin)

1: TIMx_ETR is connected to ADC AWD

Note: ADC AWD source is 'ORed' with the TIMx_ETR input signals. When ADC AWD is used,

it is necessary to make sure that the corresponding TIMx_ETR input pin is not enabled

in the alternate function controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OR1_1</name>
              <description>This field is not used in Blue51. Not available in IUM</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI4_RMP</name>
              <description>TI4_RMP: Input capture 4 remap

0: TIM2 input capture 4 is connected to I/O

1: TIM2 input capture 4 is connected to COMP1-OUT</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AF1</name>
          <displayName>AF1</displayName>
          <description>AF1 register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>ETR_SEL</name>
              <description>ETRSEL[2:0]: External trigger source selection

000: TIMx External trigger legacy mode

001: TIMx External trigger source select COMP1_OUT

Other: Reserved

Note: These bits can't be modified as long as LOCK level 1 has been programmed (LOCK

bits in TIMx_BDTR register)</description>
              <bitOffset>14</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ETR_SEL_3</name>
              <description>ETRSEL[2:0]: External trigger source selection

This field is not used in Blue51. Not available in IUM</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TISEL</name>
          <displayName>TISEL</displayName>
          <description>TISEL register</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <fields>
            <field>
              <name>TI1SEL</name>
              <description>TI1SEL[3:0]: selects TI1[0] to TI1[15] input

0000: TIMx_CH1 input

Others: Reserved</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI2SEL</name>
              <description>TI2SEL[3:0]: selects TI2[0] to TI2[15] input

0000: TIMx_CH2 input

Others: Reserved</description>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI3SEL</name>
              <description>TI3SEL[3:0]: selects TI3[0] to TI3[15] input

0000: TIMx_CH3 input

Others: Reserved</description>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TI4SEL</name>
              <description>TI4SEL[3:0]: selects TI4[0] to TI4[15] input

0000: TIMx_CH4 input

Others: Reserved</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USART</name>
      <groupName>USART</groupName>
      <baseAddress>0x41004000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x30</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>USART</name>
        <description>USART interrupt</description>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>CR1</name>
          <displayName>CR1</displayName>
          <description>CR1 register</description>
          <addressOffset>0x00</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>UE</name>
              <description>UE: USART enable
When this bit is cleared, the USART prescalers and outputs are stopped immediately, and
current operations are discarded. The configuration of the USART is kept, but all the status
flags, in the USART_ISR are reset. This bit is set and cleared by software.
-0: USART prescaler and outputs disabled, low power mode
-1: USART enabled</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RE</name>
              <description>RE: Receiver enable
This bit enables the receiver. It is set and cleared by software.
-0: Receiver is disabled
-1: Receiver is enabled and begins searching for a start bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TE</name>
              <description>TE: Transmitter enable
This bit enables the transmitter. It is set and cleared by software.
-0: Transmitter is disabled
-1: Transmitter is enabled</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IDLEIE</name>
              <description>IDLEIE: IDLE interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever IDLE=1 in the USART_ISR register</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXNEIE_RXFNEIE</name>
              <description>RXNEIE/RXFNEIE: Receive data register not empty/RXFIFO not empty interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated whenever ORE=1 or RXNE/RXFNE=1 in the
USART_ISR register</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCIE</name>
              <description>TCIE: Transmission complete interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever TC=1 in the USART_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEIE_TXFNFIE</name>
              <description>TXEIE/TXFNFIE: Transmit data regsiter empty/TXFIFO not full interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever TXE/TXFNF =1 in the USART_ISR register</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PEIE</name>
              <description>PEIE: PE interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated whenever PE=1 in the USART_ISR register</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PS</name>
              <description>PS: Parity selection
This bit selects the odd or even parity when the parity generation/detection is enabled (PCE
bit set). It is set and cleared by software. The parity will be selected after the current byte.
-0: Even parity
-1: Odd parity
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PCE</name>
              <description>PCE: Parity control enable
This bit selects the hardware parity control (generation and detection). When the parity
control is enabled, the computed parity is inserted at the MSB position (9th bit if M=1; 8th bit
if M=0) and parity is checked on the received data. This bit is set and cleared by software.
Once it is set, PCE is active after the current byte (in reception and in transmission).
-0: Parity control disabled
-1: Parity control enabled
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKE</name>
              <description>WAKE: Receiver wakeup method
This bit determines the USART wakeup method from Mute mode. It is set or cleared by
software.
-0: Idle line
-1: Address mark
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>M_0</name>
              <description>M0: Word length
This bit, with bit 28 (M1) determine the word length. It is set or cleared by software. See Bit
-28 (M1)description.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MME</name>
              <description>MME: Mute mode enable
This bit activates the mute mode function of the USART. When set, the USART can switch
between the active and mute modes, as defined by the WAKE bit. It is set and cleared by
software.
-0: Receiver in active mode permanently
-1: Receiver can switch between mute mode and active mode</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CMIE</name>
              <description>CMIE: Character match interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: A USART interrupt is generated when the CMF bit is set in the USART_ISR register.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER8</name>
              <description>OVER8: Oversampling mode
-0: Oversampling by 16
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEDT</name>
              <description>DEDT[4:0]: Driver Enable deassertion time
This 5-bit value defines the time between the end of the last stop bit, in a transmitted
message, and the de-activation of the DE (Driver Enable) signal. It is expressed in sample
time units (1/8 or 1/16 bit time, depending on the oversampling rate).
If the USART_TDR register is written during the DEDT time, the new data is transmitted only
when the DEDT and DEAT times have both elapsed.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEAT</name>
              <description>DEAT[4:0]: Driver Enable assertion time
This 5-bit value defines the time between the activation of the DE (Driver Enable) signal and
the beginning of the start bit. It is expressed in sample time units (1/8 or 1/16 bit time,
depending on the oversampling rate).
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>21</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTOIE</name>
              <description>RTOIE: Receiver timeout interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when the RTOF bit is set in the USART_ISR register</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EOBIE</name>
              <description>EOBIE: End of Block interrupt enable
This bit is set and cleared by software.
</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>B_0x0</name>
                  <description>Interrupt is inhibited
</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>B_0x1</name>
                  <description>A USART interrupt is generated when the EOBF flag is set in the USART_ISR register</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M_1</name>
              <description>Word length
This bit, with bit 12 (M0) determine the word length. It is set or cleared by software.
M[1:0] = 00: 1 Start bit, 8 Data bits, n Stop bit
M[1:0] = 01: 1 Start bit, 9 Data bits, n Stop bit
M[1:0] = 10: 1 Start bit, 7 Data bits, n Stop bit
This bit can only be written when the USART is disabled (UE=0).s</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFOEN</name>
              <description>FIFOEN :FIFO mode enable
This bit is set and cleared by software.
-0: FIFO mode is disabled.
-1: FIFO mode is enabled.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFEIE</name>
              <description>TXFEIE :TXFIFO empty interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when TXFE=1 in the USART_ISR register</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFFIE</name>
              <description>RXFFIE :RXFIFO Full interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when RXFF=1 in the USART_ISR register</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR2</name>
          <displayName>CR2</displayName>
          <description>CR2 register</description>
          <addressOffset>0x04</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>SLVEN</name>
              <description>SLVEN: Synchronous Slave mode enable
When the SLVEN bit is set, the synchronous slave mode is enabled.
-0: Slave mode disabled.
-1: Slave mode enabled.
Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIS_NSS</name>
              <description>DIS_NSS
When the DSI_NSS bit is set, the NSS pin input will be ignored.
-0: SPI slave selection depends on NSS input pin.
-1: SPI slave will be always selected and NSS input pin will be ignored.
Note: When SPI slave mode is not supported, this bit is reserved and must be kept at reset value</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDM7</name>
              <description>ADDM7:7-bit Address Detection/4-bit Address Detection
This bit is for selection between 4-bit address detection or 7-bit address detection.
-0: 4-bit address detection
-1: 7-bit address detection (in 8-bit data mode)
This bit can only be written when the USART is disabled (UE=0)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LBDL</name>
              <description>LBDL: LIN break detection length
This bit is for selection between 11 bit or 10 bit break detection.
-0: 10-bit break detection
-1: 11-bit break detection
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LBDIE</name>
              <description>LBDIE: LIN break detection interrupt enable
Break interrupt mask (break detection using break delimiter).
-0: Interrupt is inhibited
-1: An interrupt is generated whenever LBDF=1 in the USART_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LBCL</name>
              <description>LBCL: Last bit clock pulse
This bit is used to select whether the clock pulse associated with the last data bit transmitted (MSB)
has to be output on the SCLK pin in synchronous mode.
-0: The clock pulse of the last data bit is not output to the SCLK pin
-1: The clock pulse of the last data bit is output to the SCLK pin
Caution: The last bit is the 7th or 8th or 9th data bit transmitted depending on the 7 or 8 or 9 bit
format selected by the M bit in the USART_CR1 register.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPHA</name>
              <description>CPHA: Clock phase
This bit is used to select the phase of the clock output on the SCLK pin in synchronous mode. It
works in conjunction with the CPOL bit to produce the desired clock/data relationship (see
Figure 137 and Figure 138)
-0: The first clock transition is the first data capture edge
-1: The second clock transition is the first data capture edge
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPOL</name>
              <description>CPOL: Clock polarity
This bit allows the user to select the polarity of the clock output on the SCLK pin in synchronous
mode. It works in conjunction with the CPHA bit to produce the desired clock/data relationship
-0: Steady low value on SCLK pin outside transmission window
-1: Steady high value on SCLK pin outside transmission window
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKEN</name>
              <description>CLKEN: Clock enable
This bit allows the user to enable the SCLK pin.
-0: SCLK pin disabled
-1: SCLK pin enabled
This bit can only be written when the USART is disabled (UE=0).
Note: If neither synchronous mode nor Smartcard mode is supported, this bit is reserved and forced
by hardware to 0. Please refer to Section 23.4: USART implementation on page 483.
Note: In Smartcard mode, in order to provide correctly the SCLK clock to the smartcard, the steps
below must be respected:
- UE = 0
- SCEN = 1
- GTPR configuration
- CLKEN= 1
- UE = 1</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP</name>
              <description>STOP[1:0]: STOP bits
These bits are used for programming the stop bits.
-00: 1 stop bit
-01: 0.5 stop bit.
-10: 2 stop bits
-11: 1.5 stop bits
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LINEN</name>
              <description>LINEN: LIN mode enable
This bit is set and cleared by software.
-0: LIN mode disabled
-1: LIN mode enabled
The LIN mode enables the capability to send LIN Synch Breaks (13 low bits) using the SBKRQ bit
in the USART_CR1 register, and to detect LIN Sync breaks.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWAP</name>
              <description>SWAP: Swap TX/RX pins
This bit is set and cleared by software.
-0: TX/RX pins are used as defined in standard pinout
-1: The TX and RX pins functions are swapped. This allows to work in the case of a cross-wired
connection to another UART.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXINV</name>
              <description>RXINV: RX pin active level inversion
This bit is set and cleared by software.
-0: RX pin signal works using the standard logic levels (VDD =1/idle, Gnd=0/mark)
-1: RX pin signal values are inverted. ((VDD =0/mark, Gnd=1/idle).
This allows the use of an external inverter on the RX line.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXINV</name>
              <description>TXINV: TX pin active level inversion
This bit is set and cleared by software.
-0: TX pin signal works using the standard logic levels (VDD =1/idle, Gnd=0/mark)
-1: TX pin signal values are inverted. ((VDD =0/mark, Gnd=1/idle).
This allows the use of an external inverter on the TX line.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAINV</name>
              <description>DATAINV: Binary data inversion
This bit is set and cleared by software.
-0: Logical data from the data register are send/received in positive/direct logic. (1=H, 0=L)
-1: Logical data from the data register are send/received in negative/inverse logic. (1=L, 0=H). The
parity bit is also inverted.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBFIRST</name>
              <description>MSBFIRST: Most significant bit first
This bit is set and cleared by software.
-0: data is transmitted/received with data bit 0 first, following the start bit.
-1: data is transmitted/received with the MSB (bit 7/8) first, following the start bit.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ABREN</name>
              <description>ABREN: Auto baud rate enable
This bit is set and cleared by software.
-0: Auto baud rate detection is disabled.
-1: Auto baud rate detection is enabled.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ABRMOD</name>
              <description>ABRMOD[1:0]: Auto baud rate mode
These bits are set and cleared by software.
-00: Measurement of the start bit is used to detect the baud rate.
-01: Falling edge to falling edge measurement. (the received frame must start with a single bit = 1 -&gt;
Frame = Start10xxxxxx)
-10: 0x7F frame detection.
-11: 0x55 frame detection
This bit field can only be written when ABREN = 0 or the USART is disabled (UE=0).</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTOEN</name>
              <description>RTOEN: Receiver timeout enable
This bit is set and cleared by software.
-0: Receiver timeout feature disabled.
-1: Receiver timeout feature enabled.
When this feature is enabled, the RTOF flag in the USART_ISR register is set if the RX line is idle
(no reception) for the duration programmed in the RTOR (receiver timeout register).</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADD</name>
              <description>ADD[7:0]: Address of the USART node
This bit-field gives the address of the USART node or a character code to be recognized.
This is used in multiprocessor communication during Mute mode or Stop mode, for wakeup with 7-
bit address mark detection. The MSB of the character sent by the transmitter should be equal to 1.
It may also be used for character detection during normal reception, Mute mode inactive (for
example, end of block detection in ModBus protocol). In this case, the whole received character (8-
bit) is compared to the ADD[7:0] value and CMF flag is set on match.
This bit field can only be written when reception is disabled (RE = 0) or the USART is disabled
(UE=0)</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CR3</name>
          <displayName>CR3</displayName>
          <description>CR3 register</description>
          <addressOffset>0x08</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>EIE</name>
              <description>EIE: Error interrupt enable
Error Interrupt Enable Bit is required to enable interrupt generation in case of a framing
error, overrun error noise flag or SPI slave underrun error (FE=1 or ORE=1 or NF=1or UDR
= 1 in the USART_ISR register).
-0: Interrupt is inhibited
-1: An interrupt is generated when FE=1 or ORE=1 or NF=1 or UDR = 1 (in SPI slave mode)
in the USART_ISR register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IREN</name>
              <description>IREN: IrDA mode enable
This bit is set and cleared by software.
-0: IrDA disabled
-1: IrDA enabled
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IRLP</name>
              <description>IRLP: IrDA low-power
This bit is used for selecting between normal and low-power IrDA modes
-0: Normal mode
-1: Low-power mode
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HDSEL</name>
              <description>HDSEL: Half-duplex selection
Selection of Single-wire Half-duplex mode
-0: Half duplex mode is not selected
-1: Half duplex mode is selected
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>NACK</name>
              <description>NACK: Smartcard NACK enable
-0: NACK transmission in case of parity error is disabled
-1: NACK transmission during parity error is enabled
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCEN</name>
              <description>SCEN: Smartcard mode enable
This bit is used for enabling Smartcard mode.
-0: Smartcard Mode disabled
-1: Smartcard Mode enabled
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAR</name>
              <description>DMAR: DMA enable receiver
This bit is set/reset by software
-1: DMA mode is enabled for reception
-0: DMA mode is disabled for reception</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DMAT</name>
              <description>DMAT: DMA enable transmitter
This bit is set/reset by software
-1: DMA mode is enabled for transmission
-0: DMA mode is disabled for transmission</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTSE</name>
              <description>RTSE: RTS enable
-0: RTS hardware flow control disabled
-1: RTS output enabled, data is only requested when there is space in the receive buffer. The
transmission of data is expected to cease after the current character has been transmitted.
The nRTS output is asserted (pulled to 0) when data can be received.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSE</name>
              <description>CTSE: CTS enable
-0: CTS hardware flow control disabled
-1: CTS mode enabled, data is only transmitted when the nCTS input is asserted (tied to 0).
If the nCTS input is deasserted while data is being transmitted, then the transmission is
completed before stopping. If data is written into the data register while nCTS is asserted,
the transmission is postponed until nCTS is asserted.
This bit can only be written when the USART is disabled (UE=0)</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CTSIE</name>
              <description>CTSIE: CTS interrupt enable
-0: Interrupt is inhibited
-1: An interrupt is generated whenever CTSIF=1 in the USART_ISR register</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ONEBIT</name>
              <description>ONEBIT: One sample bit method enable
This bit allows the user to select the sample method. When the one sample bit method is
selected the noise detection flag (NF) is disabled.
-0: Three sample bit method
-1: One sample bit method
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>OVRDIS</name>
              <description>OVRDIS: Overrun Disable
This bit is used to disable the receive overrun detection.
-0: Overrun Error Flag, ORE, is set when received data is not read before receiving new
data. 
-1: Overrun functionality is disabled. If new data is received while the RXNE flag is still set
the ORE flag is not set and the new received data overwrites the previous content of the
USART_RDR register. When FIFO mode is enabled, the RXFIFO will be bypassed and data
will be written directly in USARTx_RDR register. Even when FIFO management is enabled,
the RXNE flag is to be used.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DDRE</name>
              <description>DDRE: DMA Disable on Reception Error
-0: DMA is not disabled in case of reception error. The corresponding error flag is set but
RXNE is kept 0 preventing from overrun. As a consequence, the DMA request is not
asserted, so the erroneous data is not transferred (no DMA request), but next correct
received data will be transferred. (used for Smartcard mode)
-1: DMA is disabled following a reception error. The corresponding error flag is set, as well
as RXNE. The DMA request is masked until the error flag is cleared. This means that the
software must first disable the DMA request (DMAR = 0) or clear RXNE(RXFNE is case
FIFO mode is enabled) before clearing the error flag.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEM</name>
              <description>DEM: Driver enable mode
This bit allows the user to activate the external transceiver control, through the DE signal.
-0: DE function is disabled. 
-1: DE function is enabled. The DE signal is output on the RTS pin.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEP</name>
              <description>DEP: Driver enable polarity selection
-0: DE signal is active high.
-1: DE signal is active low.
This bit can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCARCNT</name>
              <description>SCARCNT[2:0]: Smartcard auto-retry count
This bit-field specifies the number of retries in transmit and receive, in Smartcard mode.
In transmission mode, it specifies the number of automatic retransmission retries, before
generating a transmission error (FE bit set).
In reception mode, it specifies the number or erroneous reception trials, before generating a
reception error (RXNE/RXFNE and PE bits set).
This bit field must be programmed only when the USART is disabled (UE=0).
When the USART is enabled (UE=1), this bit field may only be written to 0x0, in order to
stop retransmission.
-0x0: retransmission disabled - No automatic retransmission in transmit mode.
-0x1 to 0x7: number of automatic retransmission attempts (before signaling error)</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTIE</name>
              <description>TXFTIE: TXFIFO threshold interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when TXFIFO reaches the threshold programmed in
TXFTCFG.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TCBGTIE</name>
              <description>TCBGTIE: Transmission Complete before guard time, interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated whenever TCBGT=1 in the USARTx_ISR register</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFTCFG</name>
              <description>RXFTCFG: Receive FIFO threshold configuration
-000:Receive FIFO reaches 1/8 of its depth.
-001:Receive FIFO reaches 1/4 of its depth.
-010:Receive FIFO reaches 1/2 of its depth.
-011:Receive FIFO reaches 3/4 of its depth.
-100:Receive FIFO reaches 7/8 of its depth.
-101:Receive FIFO becomes full.
Remaining combinations: Reserved.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFTIE</name>
              <description>RXFTIE: RXFIFO threshold interrupt enable
This bit is set and cleared by software.
-0: Interrupt is inhibited
-1: An USART interrupt is generated when Receive FIFO reaches the threshold
programmed in RXFTCFG.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTCFG</name>
              <description>TXFTCFG: TXFIFO threshold configuration
-000:TXFIFO reaches 1/8 of its depth.
-001:TXFIFO reaches 1/4 of its depth.
-010:TXFIFO reaches 1/2 of its depth.
-011:TXFIFO reaches 3/4 of its depth.
-100:TXFIFO reaches 7/8 of its depth.
-101:TXFIFO becomes empty.
Remaining combinations: Reserved.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BRR</name>
          <displayName>BRR</displayName>
          <description>BRR register</description>
          <addressOffset>0x0C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>BRR</name>
              <description>BRR[15:4]
BRR[15:4] = USARTDIV[15:4]BRR[3:0]
When OVER8 = 0, BRR[3:0] = USARTDIV[3:0].
When OVER8 = 1:
BRR[2:0] = USARTDIV[3:0] shifted 1 bit to the right.
BRR[3] must be kept cleared</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GTPR</name>
          <displayName>GTPR</displayName>
          <description>GTPR register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PSC</name>
              <description>PSC[7:0]: Prescaler value
In IrDA Low-power and normal IrDA mode:
PSC[7:0] = IrDA Normal and Low-Power Baud Rate
Used for programming the prescaler for dividing the USART source clock to achieve the lowpower
frequency:
The source clock is divided by the value given in the register (8 significant bits):
-00000000: Reserved - do not program this value
-00000001: divides the source clock by 1
-00000010: divides the source clock by 2
...
In Smartcard mode:
PSC[4:0]: Prescaler value
Used for programming the prescaler for dividing the USART source clock to provide the
Smartcard clock.
The value given in the register (5 significant bits) is multiplied by 2 to give the division factor
of the source clock frequency:
-00000: Reserved - do not program this value
-00001: divides the source clock by 2
-00010: divides the source clock by 4
-00011: divides the source clock by 6
...
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GT</name>
              <description>GT[7:0]: Guard time value
This bit-field is used to program the Guard time value in terms of number of baud clock
periods.
This is used in Smartcard mode. The Transmission Complete flag is set after this guard time
value.
This bit field can only be written when the USART is disabled (UE=0).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTOR</name>
          <displayName>RTOR</displayName>
          <description>RTOR register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>RTO</name>
              <description>RTO[23:0]: Receiver timeout value
This bit-field gives the Receiver timeout value in terms of number of baud clocks.
In standard mode, the RTOF flag is set if, after the last received character, no new start bit is
detected for more than the RTO value.
In Smartcard mode, this value is used to implement the CWT and BWT. See Smartcard
chapter for more details. In the standard, the CWT/BWT measurement is done starting from
the Start Bit of the last received character.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BLEN</name>
              <description>BLEN[7:0]: Block Length
This bit-field gives the Block length in Smartcard T=1 Reception. Its value equals the number
of information characters + the length of the Epilogue Field (1-LEC/2-CRC) - 1.
Examples:
BLEN = 0 -&gt; 0 information characters + LEC
BLEN = 1 -&gt; 0 information characters + CRC
BLEN = 255 -&gt; 254 information characters + CRC (total 256 characters))
In Smartcard mode, the Block length counter is reset when TXE=0 (TXFE = 0 in case FIFO
mode is enabled).
This bit-field can be used also in other modes. In this case, the Block length counter is reset
when RE=0 (receiver disabled) and/or when the EOBCF bit is written to 1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RQR</name>
          <displayName>RQR</displayName>
          <description>RQR register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>ABRRQ</name>
              <description>ABRRQ: Auto baud rate request
Writing 1 to this bit resets the ABRF flag in the USART_ISR and request an automatic baud
rate measurement on the next received data frame.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SBKRQ</name>
              <description>SBKRQ: Send break request
Writing 1 to this bit sets the SBKF flag and request to send a BREAK on the line, as soon as
the transmit machine is available.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MMRQ</name>
              <description>MMRQ: Mute mode request
Writing 1 to this bit puts the USART in mute mode and resets the RWU flag.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RXFRQ</name>
              <description>RXFRQ: Receive data flush request
Writing 1 to this bit empties the entire receive FIFO i.e. clears the bit RXFNE.
This allows to discard the received data without reading them, and avoid an overrun
condition.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFRQ</name>
              <description>TXFRQ: Transmit data flush request
When FIFO mode is disabled, Writing 1 to this bit sets the TXE flag.
This allows to discard the transmit data. This bit must be used only in Smartcard mode,
when data has not been sent due to errors (NACK) and the FE flag is active in the
USART_ISR register. If the USART does not support Smartcard mode, this bit is reserved
and forced by hardware to 0
When FIFO is enabled, TXFRQ bit is set to flush the whole FIFO . This will set the flag TXFE
(Transmit FIFO empty, bit 23 in the USART_ISR register). Flushing the Transmit FIFO is
supported in both UART and Smartcard modes.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ISR</name>
          <displayName>ISR</displayName>
          <description>ISR register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x000000C0</resetValue>
          <fields>
            <field>
              <name>PE</name>
              <description>PE: Parity error
This bit is set by hardware when a parity error occurs in receiver mode. It is cleared by
software, writing 1 to the PECF in the USART_ICR register. 
An interrupt is generated if PEIE = 1 in the USART_CR1 register.
-0: No parity error
-1: Parity error</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>FE: Framing error
This bit is set by hardware when a de-synchronization, excessive noise or a break character
is detected. It is cleared by software, writing 1 to the FECF bit in the USART_ICR register.
In Smartcard mode, in transmission, this bit is set when the maximum number of transmit
attempts is reached without success (the card NACKs the data frame).
An interrupt is generated if EIE = 1 in the USART_CR1 register.
-0: No Framing error is detected
-1: Framing error or break character is detected</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>NF</name>
              <description>NF: START bit Noise detection flag
This bit is set by hardware when noise is detected on a received frame. It is cleared by
software, writing 1 to the NFCF bit in the USART_ICR register.
-0: No noise is detected
-1: Noise is detected</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ORE</name>
              <description>ORE: Overrun error
This bit is set by hardware when the data currently being received in the shift register is
ready to be transferred into the USARTx_RDR register while RXNE=1 (RXFF = 1 in case
FIFO mode is enabled) . It is cleared by a software, writing 1 to the ORECF, in the
USARTx_ICR register.
An interrupt is generated if RXNEIE/ RXFNEIE=1 or EIE = 1 in the USARTx_CR1 register.
-0: No overrun error
-1: Overrun error is detected</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>IDLE</name>
              <description>IDLE: Idle line detected
This bit is set by hardware when an Idle Line is detected. An interrupt is generated if
IDLEIE=1 in the USART_CR1 register. It is cleared by software, writing 1 to the IDLECF in
the USART_ICR register.
-0: No Idle line is detected
-1: Idle line is detected</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXNE_RXFNE</name>
              <description>RXNE/RXFNE:Read data register not empty/RXFIFO not empty
RXNE bit is set by hardware when the content of the USARTx_RDR shift register has been
transferred
to the USARTx_RDR register. It is cleared by a read to the USARTx_RDR register. The
RXNE flag can also be cleared by writing 1 to the RXFRQ in the USARTx_RQR register.
RXFNE bit is set by hardware when the RXFIFO is not empty, and so data can be read from
the USART_RDR register. Every read of the USART_RDR frees a location in the RXFIFO. It
is cleared when the RXFIFO is empty.
The RXNE/RXFNE flag can also be cleared by writing 1 to the RXFRQ in the USART_RQR
register.
An interrupt is generated if RXNEIE/RXFNEIE=1 in the USART_CR1 register.
-0: Data is not received
-1: Received data is ready to be read.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TC</name>
              <description>TC: Transmission complete
This bit indicates when the last data written in the USART_TDR has been transmitted out of
the shift register.
It is set by hardware if the transmission of a frame containing data is complete and if
TXE/TXFE is set. An interrupt is generated if TCIE=1 in the USART_CR1 register. It is
cleared by software, writing 1 to the TCCF in the USART_ICR register or by a write to the
USART_TDR register.
An interrupt is generated if TCIE=1 in the USART_CR1 register.
-0: Transmission is not complete
-1: Transmission is complete</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE_TXFNF</name>
              <description>TXE/TXFNF: Transmit data register empty/TXFIFO not full
When FIFO mode is disabled, TXE is set by hardware when the content of the
USARTx_TDR register has been transferred into the shift register. It is cleared by a write to
the USARTx_TDR register. The TXE flag can also be set by writing 1 to the TXFRQ in the
USART_RQR register, in order to discard the data (only in Smartcard T=0 mode, in case of
transmission failure).
When FIFO mode is enabled, TXFNF is set by hardware when TXFIFO is not full, and so
data can be written in the USART_TDR. Every write in the USART_TDR places the data in
the TXFIFO. This flag remains set until the TXFIFO is full. When the TXFIFO is full, this flag
is cleared indicating that data can not be written into the USART_TDR.
Note: The TXFNF is kept reset during the flush request until TXFIFO is empty . After
sending the flush request (by setting TXFRQ bit), the flag TXFNF should be checked prior to
writing in TXFIFO. (TXFNF and TXFE will be set at the same time).
An interrupt is generated if the TXEIE/TXFNFIE bit =1 in the USART_CR1 register.
-0: Data register is full/Transmit FIFO is full.
-1: Data register/Transmit FIFO is not full</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>LBDF</name>
              <description>LBDF: LIN break detection flag
This bit is set by hardware when the LIN break is detected. It is cleared by software, by
writing 1 to the LBDCF in the USART_ICR.
An interrupt is generated if LBDIE = 1 in the USART_CR2 register.
-0: LIN Break not detected
-1: LIN break detected</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTSIF</name>
              <description>CTSIF: CTS interrupt flag
This bit is set by hardware when the nCTS input toggles, if the CTSE bit is set. It is cleared
by software, by writing 1 to the CTSCF bit in the USART_ICR register.
An interrupt is generated if CTSIE=1 in the USART_CR3 register.
-0: No change occurred on the nCTS status line
-1: A change occurred on the nCTS status line</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CTS</name>
              <description>CTS: CTS flag
This bit is set/reset by hardware. It is an inverted copy of the status of the nCTS input pin.
-0: nCTS line set
-1: nCTS line reset</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTOF</name>
              <description>RTOF: Receiver timeout
This bit is set by hardware when the timeout value, programmed in the RTOR register has
lapsed, without any communication. It is cleared by software, writing 1 to the RTOCF bit in
the USART_ICR register.
An interrupt is generated if RTOIE=1 in the USART_CR2 register.
In Smartcard mode, the timeout corresponds to the CWT or BWT timings.
-0: Timeout value not reached
-1: Timeout value reached without any data reception</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>EOBF</name>
              <description>EOBF: End of block flag
This bit is set by hardware when a complete block has been received (for example T=1
Smartcard mode). The detection is done when the number of received bytes (from the start
of the block, including the prologue) is equal or greater than BLEN + 4.
An interrupt is generated if the EOBIE=1 in the USART_CR2 register.
It is cleared by software, writing 1 to the EOBCF in the USART_ICR register.
-0: End of Block not reached
-1: End of Block (number of characters) reached</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>UDR</name>
              <description>UDR: SPI slave underrun error flag
In slave transmission mode, this flag is set when the first clock for data transmission appears
while the software has not yet loaded any value into USARTx_DR.
-0: No underrun error
-1: underrun error</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRE</name>
              <description>ABRE: Auto baud rate error
This bit is set by hardware if the baud rate measurement failed (baud rate out of range or
character comparison failed)
It is cleared by software, by writing 1 to the ABRRQ bit in the USART_CR3 register</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ABRF</name>
              <description>ABRF: Auto baud rate flag
This bit is set by hardware when the automatic baud rate has been set (RXNE will also be
set, generating an interrupt if RXNEIE = 1) or when the auto baud rate operation was
completed without success (ABRE=1) (ABRE, RXNE and FE are also set in this case)
It is cleared by software, in order to request a new auto baud rate detection, by writing 1 to
the ABRRQ in the USART_RQR register.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY</name>
              <description>BUSY: Busy flag
This bit is set and reset by hardware. It is active when a communication is ongoing on the
RX line (successful start bit detected). It is reset at the end of the reception (successful or
not).
-0: USART is idle (no reception)
-1: Reception on going</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CMF</name>
              <description>CMF: Character match flag
This bit is set by hardware, when a the character defined by ADD[7:0] is received. It is
cleared by software, writing 1 to the CMCF in the USART_ICR register.
An interrupt is generated if CMIE=1in the USART_CR1 register.
-0: No Character match detected
-1: Character Match detected</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SBKF</name>
              <description>SBKF: Send break flag
This bit indicates that a send break character was requested. It is set by software, by writing
1 to the SBKRQ bit in the USART_CR3 register. It is automatically reset by hardware during
the stop bit of break transmission.
-0: No break character is transmitted
-1: Break character will be transmitted</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RWU</name>
              <description>RWU: Receiver wakeup from Mute mode
This bit indicates if the USART is in mute mode. It is cleared/set by hardware when a
wakeup/mute sequence is recognized. The mute mode control sequence (address or IDLE)
is selected by the WAKE bit in the USART_CR1 register.
When wakeup on IDLE mode is selected, this bit can only be set by software, writing 1 to the
MMRQ bit in the USART_RQR register.
-0: Receiver in active mode
-1: Receiver in mute mode</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TEACK</name>
              <description>TEACK: Transmit enable acknowledge flag
This bit is set/reset by hardware, when the Transmit Enable value is taken into account by
the USART.
It can be used when an idle frame request is generated by writing TE=0, followed by TE=1
in the USART_CR1 register, in order to respect the TE=0 minimum period.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>REACK</name>
              <description>REACK: Receive enable acknowledge flag
This bit is set/reset by hardware, when the Receive Enable value is taken into account by
the USART.
It can be used to verify that the USART is ready for reception before entering Stop mode.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFE</name>
              <description>TXFE: TXFIFO Empty
This bit is set by hardware when TXFIFO is Empty. When the TXFIFO contains at least one
data, this flag is cleared. The TXFE flag can also be set by writing 1 to the bit TXFRQ (bit 4) in
the USART_RQR register.
An interrupt is generated if the TXFEIE bit =1 (bit 30) in the USART_CR1 register.
-0: TXFIFO is not empty.
-1: TXFIFO is empty.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFF</name>
              <description>RXFF: RXFIFO Full
This bit is set by hardware when RXFIFO is Full.
An interrupt is generated if the RXFFIE bit =1 in the USART_CR1 register.
-0: RXFIFO is not Full.
-1: RXFIFO is Full.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TCBGT</name>
              <description>TCBGT: Transmission complete before guard time flagl
This bit indicates when the last data written in the USART_TDR has been transmitted
correctly out of the shift register .
It is set by hardware in Smartcard mode, if the transmission of a frame containing data is
complete and if there is no NACK from the smartcard. An interrupt is generated if
TCBGTIE=1 in the USART_CR3 register. It is cleared by software, writing 1 to the
TCBGTCF in the USART_ICR register or by a write to the USART_TDR register.
-0: Transmission is not complete or transmission is complete unsuccessfuly (i.e. a NACK is
received from the card)
-1: Transmission is complete successfully (before Guard time completion and there is no
NACK from the smart card).</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFT</name>
              <description>RXFT: RXFIFO threshold flag
This bit is set by hardware when the programmed threshold in RXFTCFG in USARTx_CR3
register is reached. This means that there are (RXFTCFG - 1) data in the Receive FIFO and
one data in the USART_RDR register. An interrupt is generated if the RXFTIE bit =1 (bit 27) in
the USART_CR3 register.
-0: Receive FIFO doesnt reach the programmed threshold.
-1: Receive FIFO reached the programmed threshold</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFT</name>
              <description>TXFT: TXFIFO threshold flag
This bit is set by hardware when the TXFIFO reaches the programmed threshold in TXFTCFG
in USARTx_CR3 register i.e. the TXFIFO contains TXFTCFG empty locations. An interrupt is
generated if the TXFTIE bit =1 (bit 31) in the USART_CR3 register.
-0: TXFIFO doesnt reach the programmed threshold.
-1: TXFIFO reached the programmed threshold</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ICR</name>
          <displayName>ICR</displayName>
          <description>ICR register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x00000000</resetValue>
          <fields>
            <field>
              <name>PECF</name>
              <description>PECF: Parity error clear flag
Writing 1 to this bit clears the PE flag in the USART_ISR register.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>FECF</name>
              <description>FECF: Framing error clear flag
Writing 1 to this bit clears the FE flag in the USART_ISR register</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>NECF</name>
              <description>NECF: Noise detected clear flag
Writing 1 to this bit clears the NF flag in the USART_ISR register.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ORECF</name>
              <description>ORECF: Overrun error clear flag
Writing 1 to this bit clears the ORE flag in the USART_ISR register.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>IDLECF</name>
              <description>IDLECF: Idle line detected clear flag
Writing 1 to this bit clears the IDLE flag in the USART_ISR register.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TXFECF</name>
              <description>TXFECF: TXFIFO empty clear flag
Writing 1 to this bit clears the TXFE flag in the USART_ISR register</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TCCF</name>
              <description>TCCF: Transmission complete clear flag
Writing 1 to this bit clears the TC flag in the USART_ISR register</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TCBGTCF</name>
              <description>TCBGTCF: Transmission complete before Guard time clear flag
Writing 1 to this bit clears the TCBGT flag in the USART_ISR register.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>LBDCF</name>
              <description>LBDCF: LIN break detection clear flag
Writing 1 to this bit clears the LBDF flag in the USART_ISR register.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CTSCF</name>
              <description>CTSCF: CTS clear flag
Writing 1 to this bit clears the CTSIF flag in the USART_ISR register</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTOCF</name>
              <description>RTOCF: Receiver timeout clear flag
Writing 1 to this bit clears the RTOF flag in the USART_ISR register.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>EOBCF</name>
              <description>EOBCF: End of block clear flag
Writing 1 to this bit clears the EOBF flag in the USART_ISR register</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>UDRCF</name>
              <description>UDRCF:SPI slave underrun clear flag
Writing 1 to this bit clears the UDRF flag in the USART_ISR register</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>CMCF</name>
              <description>CMCF: Character match clear flag
Writing 1 to this bit clears the CMF flag in the USART_ISR register</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RDR</name>
          <displayName>RDR</displayName>
          <description>RDR register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <access>read-only</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>RDR</name>
              <description>RDR[8:0]: Receive data value
Contains the received data character.
The RDR register provides the parallel interface between the input shift register and the
internal bus (see Figure 124).
When receiving with the parity enabled, the value read in the MSB bit is the received parity
bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TDR</name>
          <displayName>TDR</displayName>
          <description>TDR register</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>TDR</name>
              <description>TDR[8:0]: Transmit data value
Contains the data character to be transmitted.
The USARTx_TDR register provides the parallel interface between the internal bus and the
output shift register (see Figure 124).
When transmitting with the parity enabled (PCE bit set to 1 in the USART_CR1 register),
the value written in the MSB (bit 7 or bit 8 depending on the data length) has no effect
because it is replaced by the parity.
Note: This register must be written only when TXE/TXFNF=1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PRESC</name>
          <displayName>PRESC</displayName>
          <description>PRESC register</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <access>read-write</access>
          <resetValue>0x0</resetValue>
          <fields>
            <field>
              <name>PRESCALER</name>
              <description>PRESCALER[3:0]: Clock prescaler
The USART input clock can be divided by a prescaler:
-0000: input clock not divided
-0001: input clock divided by 2
-0010: input clock divided by 4
-0011: input clock divided by 6
-0100: input clock divided by 8
-0101: input clock divided by 10
-0110: input clock divided by 12
-0111: input clock divided by 16
-1000: input clock divided by 32
-1001: input clock divided by 64
-1010: input clock divided by 128
-1011: input clock divided by 256
Remaing combinations: Reserved.
Note: When PRESCALER is programmed with a value different of the allowed ones,
programmed prescaler value will be '1011' i.e. input clock divided by 256</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
